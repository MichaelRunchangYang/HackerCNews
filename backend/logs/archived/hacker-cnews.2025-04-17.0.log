2025-04-17 18:11:23.254 [main] INFO  m.p.s.DotenvPropertySource - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
2025-04-17 18:11:23.270 [main] INFO  c.e.h.HackerCNewsApplication - Starting HackerCNewsApplication using Java 21.0.4 with PID 34628 (C:\Users\littletiger\Desktop\HackerCNews\backend\target\classes started by littletiger in C:\Users\littletiger\Desktop\HackerCNews\backend)
2025-04-17 18:11:23.271 [main] DEBUG c.e.h.HackerCNewsApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-17 18:11:23.272 [main] INFO  c.e.h.HackerCNewsApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-17 18:11:23.729 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-17 18:11:23.730 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-17 18:11:23.838 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 1 JPA repository interface.
2025-04-17 18:11:23.859 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-17 18:11:23.860 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-17 18:11:23.873 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.hacker_cnews.repository.NewsItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-17 18:11:23.873 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-04-17 18:11:24.640 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-17 18:11:24.661 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-17 18:11:24.816 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f6f9cef
2025-04-17 18:11:24.817 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 18:11:24.867 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-17 18:11:24.868 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-04-17 18:11:25.525 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-17 18:11:25.532 [main] INFO  c.e.hacker_cnews.config.DotenvConfig - DotenvConfig is deprecated and will be removed in future versions
2025-04-17 18:11:25.533 [main] INFO  c.e.hacker_cnews.config.DotenvConfig - Please use PropertiesConfig instead
2025-04-17 18:11:25.537 [main] INFO  c.e.h.config.PropertiesConfig - Successfully loaded 6 properties, non-sensitive keys: [REDIS_HOST, REDIS_PORT, MYSQL_USERNAME]
2025-04-17 18:11:26.078 [main] INFO  c.e.h.service.HackerNewsService - HackerNewsService 初始化完成，使用基本URL: https://hacker-news.firebaseio.com/v0
2025-04-17 18:11:26.440 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-04-17 18:11:26.453 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:11:26.453 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:11:26.454 [main] INFO  c.e.h.HackerCNewsApplication - Started HackerCNewsApplication in 3.62 seconds (process running for 3.883)
2025-04-17 18:11:26.483 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:11:26.492 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [358e763a] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:12:09.166 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-1, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:12:09.171 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-1, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:09.396 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-1, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:09.400 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [358e763a] [18f2c40b-1] Response 200 OK
2025-04-17 18:12:09.402 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:09.417 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-1, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:09.440 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:12:09.442 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:12:09.443 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:12:09.447 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:12:09.450 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:12:09.452 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:12:09.453 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [368a5621] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:12:09.453 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:12:09.454 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-2, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:12:09.454 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:12:09.454 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-2, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:09.455 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5537c133] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:12:09.455 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:12:09.455 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:12:09.456 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c2de274] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:12:09.658 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-2, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:09.659 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [368a5621] [18f2c40b-2] Response 200 OK
2025-04-17 18:12:09.659 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:09.661 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-2, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:09.661 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":89,"id":43714203,"kids":[43714467,43714466,43714478,43714580,43714593,43714850,43714502,43714611,43714739,43714751,43714597,43714436,43714434,43714661,43714786],"score":154,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:12:09.662 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":89,"id":43714203,"kids":[43714467,43714466,43714478,43714580,43714593,43714850,43714502,43714611,43714739,43714751,43714597,43714436,43714434,43714661,43714786],"score":154,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:12:09.690 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:12:09.691 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:12:10.001 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714203
2025-04-17 18:12:10.236 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:12:10.236 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:12:10.237 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:10.240 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6363a508] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:11.038 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-1, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:11.574 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-1, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:11.574 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6363a508] [4066c1c6-1] Response 200 OK
2025-04-17 18:12:11.577 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-1, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:11.580 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=天文学家在太阳系外的一颗行星上发现外星生命迹象}]}
2025-04-17 18:12:11.581 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Astronomers have found signs of alien life on a planet beyond our Solar System -> 天文学家在太阳系外的一颗行星上发现外星生命迹象
2025-04-17 18:12:11.582 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 天文学家在太阳系外的一颗行星上发现外星生命迹象
2025-04-17 18:12:11.597 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714203
2025-04-17 18:12:11.664 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 154
2025-04-17 18:12:11.664 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:12:11.665 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:12:11.666 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [a062f0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:12:11.666 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-3, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:12:11.666 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-3, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:11.869 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-3, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:11.869 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [a062f0] [18f2c40b-3] Response 200 OK
2025-04-17 18:12:11.869 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:11.870 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-3, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:11.870 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:12:11.870 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:12:11.870 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:12:11.871 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:12:11.876 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713524
2025-04-17 18:12:11.877 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Passing planes and other whoosh sounds
2025-04-17 18:12:11.878 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Passing planes and other whoosh sounds
2025-04-17 18:12:11.878 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:11.878 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [696637d6] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:11.879 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-2, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:12.354 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-2, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:12.355 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [696637d6] [4066c1c6-2] Response 200 OK
2025-04-17 18:12:12.356 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-2, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:12.356 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=掠过的飞机和其他嗖嗖声}]}
2025-04-17 18:12:12.357 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Passing planes and other whoosh sounds -> 掠过的飞机和其他嗖嗖声
2025-04-17 18:12:12.357 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 掠过的飞机和其他嗖嗖声
2025-04-17 18:12:12.359 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713524
2025-04-17 18:12:12.366 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 86
2025-04-17 18:12:12.366 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:12:12.367 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:12:12.367 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c2eefe2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:12:12.367 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-4, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:12:12.368 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-4, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:12.573 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-4, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:12.573 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c2eefe2] [18f2c40b-4] Response 200 OK
2025-04-17 18:12:12.573 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:12.574 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-4, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:12.574 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":3,"id":43714004,"kids":[43714642],"score":30,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:12:12.574 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":3,"id":43714004,"kids":[43714642],"score":30,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:12:12.574 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:12:12.575 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:12:12.579 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714004
2025-04-17 18:12:12.580 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:12:12.580 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：BitNet b1.58 2B4T Technical Report
2025-04-17 18:12:12.580 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:12.581 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b0733b1] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:12.581 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-3, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:13.007 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-3, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:13.007 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b0733b1] [4066c1c6-3] Response 200 OK
2025-04-17 18:12:13.008 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-3, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:13.008 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=BitNet b1.58 2B4T 技术报告}]}
2025-04-17 18:12:13.009 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: BitNet b1.58 2B4T Technical Report -> BitNet b1.58 2B4T 技术报告
2025-04-17 18:12:13.009 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: BitNet b1.58 2B4T 技术报告
2025-04-17 18:12:13.011 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714004
2025-04-17 18:12:13.018 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 5, 分数: 30
2025-04-17 18:12:13.018 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:12:13.019 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:12:13.027 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45f9d45f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:12:13.029 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-5, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:12:13.029 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-5, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:13.233 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-5, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:13.233 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45f9d45f] [18f2c40b-5] Response 200 OK
2025-04-17 18:12:13.234 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:13.234 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-5, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:13.234 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714783,43714252],"score":48,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:12:13.235 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714783,43714252],"score":48,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:12:13.235 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:12:13.235 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:12:13.238 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713842
2025-04-17 18:12:13.239 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:12:13.239 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Manga Guide To Databases (2004) [pdf]
2025-04-17 18:12:13.239 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:13.240 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75b2e8e4] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:13.240 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-4, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:13.752 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-4, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:13.752 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75b2e8e4] [4066c1c6-4] Response 200 OK
2025-04-17 18:12:13.753 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-4, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:13.753 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=数据库漫游指南（2004 年）[pdf］}]}
2025-04-17 18:12:13.754 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Manga Guide To Databases (2004) [pdf] -> 数据库漫游指南（2004 年）[pdf］
2025-04-17 18:12:13.754 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 数据库漫游指南（2004 年）[pdf］
2025-04-17 18:12:13.756 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713842
2025-04-17 18:12:13.764 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 6, 分数: 48
2025-04-17 18:12:13.765 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:12:13.766 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:12:13.766 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [712b1d47] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:12:13.766 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-6, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:12:13.767 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-6, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:13.995 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-6, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:13.996 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [712b1d47] [18f2c40b-6] Response 200 OK
2025-04-17 18:12:13.996 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:13.996 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-6, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:13.997 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":1,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:12:13.997 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":1,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:12:13.997 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:12:13.997 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:12:14.000 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714476
2025-04-17 18:12:14.001 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:12:14.001 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:12:14.001 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:14.002 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ae9f7cf] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:14.002 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-5, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:14.591 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-5, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:14.592 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ae9f7cf] [4066c1c6-5] Response 200 OK
2025-04-17 18:12:14.592 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-5, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:14.593 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=雅达利 1200XL 惨败 - 作者：Paul Lefebvre}]}
2025-04-17 18:12:14.593 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: The Atari 1200XL Fiasco – By Paul Lefebvre -> 雅达利 1200XL 惨败 - 作者：Paul Lefebvre
2025-04-17 18:12:14.593 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 雅达利 1200XL 惨败 - 作者：Paul Lefebvre
2025-04-17 18:12:14.595 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714476
2025-04-17 18:12:14.603 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 7, 分数: 7
2025-04-17 18:12:14.603 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:12:14.603 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:12:14.604 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ae2edc6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:12:14.604 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-7, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:12:14.604 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-7, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:14.810 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-7, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:14.810 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ae2edc6] [18f2c40b-7] Response 200 OK
2025-04-17 18:12:14.810 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:14.811 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-7, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:14.811 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":39,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":44,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:12:14.811 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":39,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":44,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:12:14.812 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:12:14.812 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:12:14.816 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43676690
2025-04-17 18:12:14.817 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How refrigeration changed our food
2025-04-17 18:12:14.818 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：How refrigeration changed our food
2025-04-17 18:12:14.818 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:14.818 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d4d260] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:14.819 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-6, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:15.370 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-6, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:15.370 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d4d260] [4066c1c6-6] Response 200 OK
2025-04-17 18:12:15.371 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-6, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:15.372 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=制冷如何改变了我们的食物}]}
2025-04-17 18:12:15.372 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: How refrigeration changed our food -> 制冷如何改变了我们的食物
2025-04-17 18:12:15.372 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 制冷如何改变了我们的食物
2025-04-17 18:12:15.373 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43676690
2025-04-17 18:12:15.380 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 8, 分数: 44
2025-04-17 18:12:15.380 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:12:15.381 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:12:15.382 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77b7508d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:12:15.382 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-8, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:12:15.382 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-8, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:15.586 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-8, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:15.587 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77b7508d] [18f2c40b-8] Response 200 OK
2025-04-17 18:12:15.587 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:15.588 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-8, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:15.588 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43714052,43708229,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":422,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:12:15.589 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43714052,43708229,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":422,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:12:15.589 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:12:15.590 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:12:15.593 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43706037
2025-04-17 18:12:15.594 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:12:15.594 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:12:15.594 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:15.594 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [387a5c71] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:15.595 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-7, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:16.239 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-7, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:16.240 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [387a5c71] [4066c1c6-7] Response 200 OK
2025-04-17 18:12:16.240 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-7, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:16.241 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=达尔文的孩子们在《物种起源》手稿上到处乱画（2014 年）}]}
2025-04-17 18:12:16.241 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Darwin's children drew all over the “On the Origin of Species” manuscript (2014) -> 达尔文的孩子们在《物种起源》手稿上到处乱画（2014 年）
2025-04-17 18:12:16.241 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 达尔文的孩子们在《物种起源》手稿上到处乱画（2014 年）
2025-04-17 18:12:16.243 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43706037
2025-04-17 18:12:16.251 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 9, 分数: 422
2025-04-17 18:12:16.251 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:12:16.252 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:12:16.252 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7149e990] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:12:16.253 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-9, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:12:16.253 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-9, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:16.458 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-9, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:16.459 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7149e990] [18f2c40b-9] Response 200 OK
2025-04-17 18:12:16.459 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:16.459 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-9, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:16.460 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":51,"id":43679906,"kids":[43713172,43713565,43712651,43712793,43714072,43713518,43712753,43712785],"score":114,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:12:16.460 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":51,"id":43679906,"kids":[43713172,43713565,43712651,43712793,43714072,43713518,43712753,43712785],"score":114,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:12:16.460 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:12:16.460 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:12:16.464 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43679906
2025-04-17 18:12:16.465 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:12:16.465 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:12:16.465 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:16.465 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d72eec3] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:16.466 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-8, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:17.007 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-8, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:17.007 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d72eec3] [4066c1c6-8] Response 200 OK
2025-04-17 18:12:17.008 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-8, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:17.009 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Haskell 中的并发性快速、简单、正确}]}
2025-04-17 18:12:17.009 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Concurrency in Haskell: Fast, Simple, Correct -> Haskell 中的并发性快速、简单、正确
2025-04-17 18:12:17.009 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Haskell 中的并发性快速、简单、正确
2025-04-17 18:12:17.011 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43679906
2025-04-17 18:12:17.019 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 10, 分数: 114
2025-04-17 18:12:50.577 [reactor-http-nio-7] INFO  c.e.h.controller.TestController - 开始手动更新新闻数据
2025-04-17 18:12:50.578 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:12:50.578 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:12:50.578 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:12:50.579 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52bc3d0f] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:12:50.579 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-10, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:12:50.579 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-10, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:51.370 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-10, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:51.371 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52bc3d0f] [18f2c40b-10] Response 200 OK
2025-04-17 18:12:51.371 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:51.371 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-10, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:51.372 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:12:51.372 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:12:51.372 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:12:51.372 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:12:51.373 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:12:51.374 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:12:51.374 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e233fec] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:12:51.374 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:12:51.374 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-11, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:12:51.374 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-11, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:51.375 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:12:51.376 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [44db549c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:12:51.376 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:12:51.377 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:12:51.377 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [565251eb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:12:51.625 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-11, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:51.625 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e233fec] [18f2c40b-11] Response 200 OK
2025-04-17 18:12:51.625 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:51.626 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-11, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:51.626 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":89,"id":43714203,"kids":[43714467,43714466,43714478,43714580,43714593,43714850,43714502,43714611,43714739,43714751,43714597,43714436,43714434,43714661,43714786],"score":154,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:12:51.626 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":89,"id":43714203,"kids":[43714467,43714466,43714478,43714580,43714593,43714850,43714502,43714611,43714739,43714751,43714597,43714436,43714434,43714661,43714786],"score":154,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:12:51.626 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:12:51.626 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:12:51.632 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:12:51.635 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 154
2025-04-17 18:12:51.637 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:12:51.637 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:12:51.637 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e546cdf] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:12:51.930 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-1, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:12:51.930 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-1, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:51.933 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-1, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:12:51.934 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-1, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:52.139 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-1, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:52.139 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5537c133] [f2b988be-1] Response 200 OK
2025-04-17 18:12:52.139 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:52.139 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-1, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:52.140 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":190,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43714517,43712692,43713112,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":385,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:12:52.140 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":190,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43714517,43712692,43713112,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":385,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:12:52.140 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:12:52.140 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:12:52.143 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711957
2025-04-17 18:12:52.144 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-1, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:52.144 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:12:52.144 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:12:52.144 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c2de274] [363f83af-1] Response 200 OK
2025-04-17 18:12:52.144 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:52.145 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:52.145 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-1, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:52.145 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fe800b5] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:52.145 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":3,"id":43714594,"kids":[43714858,43714794,43714790],"score":15,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:12:52.145 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":3,"id":43714594,"kids":[43714858,43714794,43714790],"score":15,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:12:52.145 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-9, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:52.145 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:12:52.146 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:12:52.148 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714594
2025-04-17 18:12:52.148 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:12:52.149 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:12:52.149 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:52.149 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [46590e69] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:52.634 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-9, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:52.635 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fe800b5] [4066c1c6-9] Response 200 OK
2025-04-17 18:12:52.636 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-9, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:52.636 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=意外 "关闭 "zoom.us 域名导致 Zoom 中断}]}
2025-04-17 18:12:52.636 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Zoom outage caused by accidental 'shutting down' of the zoom.us domain -> 意外 "关闭 "zoom.us 域名导致 Zoom 中断
2025-04-17 18:12:52.636 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 意外 "关闭 "zoom.us 域名导致 Zoom 中断
2025-04-17 18:12:52.638 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711957
2025-04-17 18:12:52.648 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 2, 分数: 385
2025-04-17 18:12:52.889 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-1, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:53.314 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-1, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:53.315 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [46590e69] [785682b2-1] Response 200 OK
2025-04-17 18:12:53.316 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-1, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:53.316 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=使用 Bash 编写高级 Shell 脚本（2006 年）[pdf］}]}
2025-04-17 18:12:53.316 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Advanced Shell Scripting with Bash (2006) [pdf] -> 使用 Bash 编写高级 Shell 脚本（2006 年）[pdf］
2025-04-17 18:12:53.316 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 使用 Bash 编写高级 Shell 脚本（2006 年）[pdf］
2025-04-17 18:12:53.317 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714594
2025-04-17 18:12:53.324 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 3, 分数: 15
2025-04-17 18:12:53.325 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:12:53.325 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:12:55.336 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:12:55.337 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:12:55.337 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ef94cc8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:12:55.338 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:12:55.338 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-12, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:12:55.338 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:12:55.338 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-12, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:55.338 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [503eb967] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:12:55.339 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:12:55.339 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-2, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:12:55.339 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-2, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:55.339 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:12:55.339 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [540127b8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:12:55.340 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-2, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:12:55.340 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-2, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:55.542 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-12, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:55.542 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ef94cc8] [18f2c40b-12] Response 200 OK
2025-04-17 18:12:55.543 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:55.543 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-2, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:55.544 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [503eb967] [f2b988be-2] Response 200 OK
2025-04-17 18:12:55.544 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-12, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:55.544 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:55.545 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:12:55.545 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:12:55.545 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-2, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:55.546 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:12:55.546 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:12:55.546 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:12:55.547 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:12:55.548 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:12:55.548 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:12:55.549 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-2, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:55.549 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [540127b8] [363f83af-2] Response 200 OK
2025-04-17 18:12:55.550 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:55.550 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-2, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:55.551 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43714841,43710093,43711158,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43714244,43713807,43708649,43712178,43709844,43711413,43709527,43711717,43714266,43711165,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":437,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:12:55.551 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43714841,43710093,43711158,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43714244,43713807,43708649,43712178,43709844,43711413,43709527,43711717,43714266,43711165,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":437,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:12:55.552 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:12:55.552 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:12:55.552 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43680715
2025-04-17 18:12:55.553 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:12:55.553 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:12:55.553 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:55.554 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6521f464] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:55.554 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713885
2025-04-17 18:12:55.554 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-10, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:55.554 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:12:55.554 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:12:55.554 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:55.554 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bad336b] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:55.555 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43708025
2025-04-17 18:12:55.555 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:12:55.555 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:12:55.555 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:55.556 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2d42d459] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:55.556 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-2, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:56.073 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-2, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:56.074 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bad336b] [785682b2-2] Response 200 OK
2025-04-17 18:12:56.075 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-2, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:56.075 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Formance (YC S21) 正在招聘工程师构建 OSS 金融基础设施}]}
2025-04-17 18:12:56.075 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure -> Formance (YC S21) 正在招聘工程师构建 OSS 金融基础设施
2025-04-17 18:12:56.075 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Formance (YC S21) 正在招聘工程师构建 OSS 金融基础设施
2025-04-17 18:12:56.078 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713885
2025-04-17 18:12:56.079 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-10, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:56.079 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6521f464] [4066c1c6-10] Response 200 OK
2025-04-17 18:12:56.080 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-10, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:56.080 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=科学家开创化学工艺，重新利用橡胶废料}]}
2025-04-17 18:12:56.080 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Scientists pioneer chemical process to repurpose rubber waste -> 科学家开创化学工艺，重新利用橡胶废料
2025-04-17 18:12:56.080 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 科学家开创化学工艺，重新利用橡胶废料
2025-04-17 18:12:56.083 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43680715
2025-04-17 18:12:56.086 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 12, 分数: 1
2025-04-17 18:12:56.086 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:12:56.086 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:12:56.087 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18d352be] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:12:56.087 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 11, 分数: 20
2025-04-17 18:12:56.087 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:12:56.088 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:12:56.088 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27ad55] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:12:56.088 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-3, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:12:56.088 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-13, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:12:56.088 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-3, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:56.088 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-13, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:56.281 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-1, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:56.292 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-3, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:56.293 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27ad55] [f2b988be-3] Response 200 OK
2025-04-17 18:12:56.293 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:56.293 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-3, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:56.293 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":1,"id":43678144,"kids":[43678721],"score":15,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:12:56.293 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":1,"id":43678144,"kids":[43678721],"score":15,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:12:56.294 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:12:56.294 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:12:56.296 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678144
2025-04-17 18:12:56.297 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Making Software
2025-04-17 18:12:56.297 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Making Software
2025-04-17 18:12:56.297 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:56.298 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [325d5436] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:56.298 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-3, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:56.307 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-13, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:56.307 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18d352be] [18f2c40b-13] Response 200 OK
2025-04-17 18:12:56.308 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:56.308 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-13, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:56.308 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43714056,43711522,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":154,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:12:56.308 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43714056,43711522,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":154,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:12:56.309 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:12:56.309 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:12:56.312 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710576
2025-04-17 18:12:56.313 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:12:56.313 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:12:56.313 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:56.313 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:12:56.314 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Hey HN! I’m Dane, the creator of Plandex (<a href="https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href="https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai" rel="nofollow">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!
2025-04-17 18:12:56.314 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:56.314 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1725d023] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:56.315 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-11, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:56.315 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c989e2e] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:56.828 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-1, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:56.829 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2d42d459] [e94c08e9-1] Response 200 OK
2025-04-17 18:12:56.830 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-1, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:56.831 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=OpenAI Codex CLI：可在终端运行的轻量级编码代理}]}
2025-04-17 18:12:56.832 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal -> OpenAI Codex CLI：可在终端运行的轻量级编码代理
2025-04-17 18:12:56.832 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: OpenAI Codex CLI：可在终端运行的轻量级编码代理
2025-04-17 18:12:56.836 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43708025
2025-04-17 18:12:56.848 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 13, 分数: 437
2025-04-17 18:12:56.848 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:12:56.849 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:12:56.850 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6722117d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:12:56.850 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-3, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:12:56.850 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-3, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:56.851 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-3, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:56.852 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [325d5436] [785682b2-3] Response 200 OK
2025-04-17 18:12:56.852 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-3, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:56.853 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=制作软件}]}
2025-04-17 18:12:56.853 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Making Software -> 制作软件
2025-04-17 18:12:56.853 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 制作软件
2025-04-17 18:12:56.854 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678144
2025-04-17 18:12:56.859 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 15, 分数: 15
2025-04-17 18:12:56.859 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714041
2025-04-17 18:12:56.859 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714041.json
2025-04-17 18:12:56.860 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31f18c11] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714041.json
2025-04-17 18:12:56.860 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-4, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714041.json, method=GET}
2025-04-17 18:12:56.860 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-4, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:56.895 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-11, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:56.895 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1725d023] [4066c1c6-11] Response 200 OK
2025-04-17 18:12:56.896 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-11, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:56.897 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Show HN: Plandex v2 - 面向大型项目和任务的开源人工智能编码代理}]}
2025-04-17 18:12:56.897 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks -> Show HN: Plandex v2 - 面向大型项目和任务的开源人工智能编码代理
2025-04-17 18:12:57.059 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-3, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:57.060 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6722117d] [363f83af-3] Response 200 OK
2025-04-17 18:12:57.060 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:57.061 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-3, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:57.062 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":578,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43714668,43708319,43710859,43708992,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43713637,43712127,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":470,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:12:57.062 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":578,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43714668,43708319,43710859,43708992,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43713637,43712127,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":470,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:12:57.063 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:12:57.063 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:12:57.069 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:12:57.081 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 16, 分数: 470
2025-04-17 18:12:57.081 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:12:57.082 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:12:57.082 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a1240c3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:12:57.082 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-14, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:12:57.083 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-14, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:57.083 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-4, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:57.084 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31f18c11] [f2b988be-4] Response 200 OK
2025-04-17 18:12:57.084 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:57.084 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-4, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:57.084 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"BerislavLopac","descendants":39,"id":43714041,"kids":[43714776,43714867,43714333,43714637,43714569,43714234],"score":31,"time":1744875248,"title":"The Halting Problem is a terrible example of NP-Harder","type":"story","url":"https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/"}
2025-04-17 18:12:57.084 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"BerislavLopac","descendants":39,"id":43714041,"kids":[43714776,43714867,43714333,43714637,43714569,43714234],"score":31,"time":1744875248,"title":"The Halting Problem is a terrible example of NP-Harder","type":"story","url":"https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/"}
2025-04-17 18:12:57.084 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714041, by=BerislavLopac, title=The Halting Problem is a terrible example of NP-Harder, url=https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/, type=story, time=1744875248
2025-04-17 18:12:57.085 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714041, 标题: The Halting Problem is a terrible example of NP-Harder
2025-04-17 18:12:57.086 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714041
2025-04-17 18:12:57.087 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: The Halting Problem is a terrible example of NP-Harder
2025-04-17 18:12:57.087 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：The Halting Problem is a terrible example of NP-Harder
2025-04-17 18:12:57.087 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:57.088 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [775bd93c] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:57.088 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-2, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:57.288 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-14, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:57.289 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a1240c3] [18f2c40b-14] Response 200 OK
2025-04-17 18:12:57.289 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:57.290 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-14, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:12:57.291 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":13,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:12:57.291 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":13,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:12:57.292 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:12:57.292 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:12:57.300 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43674892
2025-04-17 18:12:57.301 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:12:57.302 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Clowning Around: On the Principles of Clowning
2025-04-17 18:12:57.302 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:57.303 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69b0a3bb] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:57.304 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-4, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:57.702 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-2, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:57.703 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [775bd93c] [e94c08e9-2] Response 200 OK
2025-04-17 18:12:57.704 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-2, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:57.704 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=停顿问题是NP-Harder的一个可怕例子}]}
2025-04-17 18:12:57.704 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: The Halting Problem is a terrible example of NP-Harder -> 停顿问题是NP-Harder的一个可怕例子
2025-04-17 18:12:57.704 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 停顿问题是NP-Harder的一个可怕例子
2025-04-17 18:12:57.706 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714041
2025-04-17 18:12:57.715 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714041, 排名: 17, 分数: 31
2025-04-17 18:12:57.715 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:12:57.716 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:12:57.716 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b53df5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:12:57.717 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-4, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:12:57.717 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-4, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:57.817 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-4, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:57.818 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69b0a3bb] [785682b2-4] Response 200 OK
2025-04-17 18:12:57.819 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-4, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:57.820 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=小丑漫游论小丑表演的原则}]}
2025-04-17 18:12:57.820 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Clowning Around: On the Principles of Clowning -> 小丑漫游论小丑表演的原则
2025-04-17 18:12:57.820 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 小丑漫游论小丑表演的原则
2025-04-17 18:12:57.821 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43674892
2025-04-17 18:12:57.831 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 18, 分数: 13
2025-04-17 18:12:57.832 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:12:57.833 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:12:57.833 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39b2dd2a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:12:57.834 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-5, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:12:57.834 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-5, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:12:57.929 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-4, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:57.930 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b53df5] [363f83af-4] Response 200 OK
2025-04-17 18:12:57.930 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:57.931 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-4, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:57.931 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":2,"id":43713140,"kids":[43714602],"score":20,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:12:57.932 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":2,"id":43713140,"kids":[43714602],"score":20,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:12:57.932 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:12:57.932 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:12:57.936 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713140
2025-04-17 18:12:57.936 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Differentiable Programming from Scratch
2025-04-17 18:12:57.937 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Differentiable Programming from Scratch
2025-04-17 18:12:57.937 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:57.937 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [29b5f5ce] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:57.937 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-12, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:57.952 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-1, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:58.041 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-5, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:12:58.042 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39b2dd2a] [f2b988be-5] Response 200 OK
2025-04-17 18:12:58.042 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:12:58.043 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-5, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:12:58.043 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43714522,43713972,43714103,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:12:58.043 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43714522,43713972,43714103,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:12:58.044 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:12:58.044 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:12:58.048 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711001
2025-04-17 18:12:58.049 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:12:58.050 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:12:58.050 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:12:58.050 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15a33601] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:12:58.050 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-3, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:12:58.618 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-12, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:58.619 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [29b5f5ce] [4066c1c6-12] Response 200 OK
2025-04-17 18:12:58.620 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-12, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:58.621 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=从零开始的可微分编程}]}
2025-04-17 18:12:58.621 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Differentiable Programming from Scratch -> 从零开始的可微分编程
2025-04-17 18:12:58.622 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 从零开始的可微分编程
2025-04-17 18:12:58.625 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713140
2025-04-17 18:12:58.637 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 19, 分数: 20
2025-04-17 18:12:58.724 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-3, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:58.725 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15a33601] [e94c08e9-3] Response 200 OK
2025-04-17 18:12:58.726 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-3, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:58.727 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=一场被遗忘的战役如何创造了一个更加和平的世界}]}
2025-04-17 18:12:58.728 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: How a Forgotten Battle Created a More Peaceful World -> 一场被遗忘的战役如何创造了一个更加和平的世界
2025-04-17 18:12:58.728 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 一场被遗忘的战役如何创造了一个更加和平的世界
2025-04-17 18:12:58.731 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711001
2025-04-17 18:12:58.739 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 20, 分数: 124
2025-04-17 18:12:59.217 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-1, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:12:59.218 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c989e2e] [aaa59705-1] Response 200 OK
2025-04-17 18:12:59.220 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-1, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:12:59.221 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=嗨，HN！我是 Dane，Plandex（<a href="https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>），这是一个开源的人工智能编码代理，尤其专注于处理现实世界软件项目中的大型任务。<p>您可以在这里观看 Plandex 的 2 分钟演示：<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>下面是一个教程式的演示，展示了 Plandex 如何自动调试浏览器应用程序：<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>。<p> 不到一年前，我在 HN 上发布了 Plandex v1（<a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500">https:&#x2F;&#x2F;news.<p>现在，我推出了一个重大更新，即 Plandex v2，这是 8 个月来潜心工作的成果，实际上是一个全新的项目&#x2F;产品。<p>简而言之，Plandex 现在是一个具有完全自主能力的顶级编码代理。它结合了 Anthropic、OpenAI 和 Google 的模型，从而实现了更好的结果、更可靠的代理行为、更高的成本效率，以及比仅使用单一提供商的模型更好的性能。<p>我相信，它现在是在现实世界的代码库中使用人工智能处理大型任务的最佳工具之一。它的有效上下文窗口可容纳 200 万个词组，并可使用树状项目地图（支持 30 多种语言）对容纳 2000 万个词组或更多词组的项目进行索引。它可以在 SQLite、Redis 和 Git 等数百万行的大型项目中有效查找相关上下文。<p>关于 Plandex 一些主要功能的更多信息：<p>- Plandex 有一个内置的差异审查沙箱，可帮助您获得 AI 的好处，而不会在项目中留下混乱。默认情况下，所有更改都会累积在沙箱中，直到您批准为止。沙箱受版本控制。<p>- 它提供 "全自动模式"，可以端到端自主完成大型任务，包括高级规划、上下文加载、详细规划、实施、命令执行（用于依赖关系、构建、测试等）和调试。<p>- 模型和模型设置也是可配置的。有针对不同用例的内置模型和模型包。您还可以添加自定义模型和模型包，并自定义模型设置，如温度或顶点。所有模型更改都受版本控制，因此您可以使用分支来尝试使用不同的模型完成相同的任务。新发布的 OpenAI 模型和付费的 Gemini 2.5 Pro 模型将很快集成到默认模型包中。<p>- 它可以轻松地自行托管，包括使用 Docker 进行快速本地单用户设置的 "本地模式"。<p>- 云托管还提供了几个订阅层级，为您带来更多便利："集成模型 "模式无需其他账户或 API 密钥，允许您集中管理计费&#x2F;预算&#x2F;支出警报并跟踪使用情况；"BYO API 密钥 "模式允许您使用自己的 OpenAI&#x2F;OpenRouter 账户。<p>我希望 Plandex Discord（<a href="https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai" rel="nofollow">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>）中能有更多的 HNers。请加入并打声招呼！<p>当然，我也希望听到您的反馈，无论是正面的还是负面的。非常感谢！}]}
2025-04-17 18:12:59.222 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Hey HN! I’m Dane, the creator of Plandex (<a href="https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href="https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai" rel="nofollow">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much! -> 嗨，HN！我是 Dane，Plandex（<a href="https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>），这是一个开源的人工智能编码代理，尤其专注于处理现实世界软件项目中的大型任务。<p>您可以在这里观看 Plandex 的 2 分钟演示：<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>下面是一个教程式的演示，展示了 Plandex 如何自动调试浏览器应用程序：<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>。<p> 不到一年前，我在 HN 上发布了 Plandex v1（<a href="https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500">https:&#x2F;&#x2F;news.<p>现在，我推出了一个重大更新，即 Plandex v2，这是 8 个月来潜心工作的成果，实际上是一个全新的项目&#x2F;产品。<p>简而言之，Plandex 现在是一个具有完全自主能力的顶级编码代理。它结合了 Anthropic、OpenAI 和 Google 的模型，从而实现了更好的结果、更可靠的代理行为、更高的成本效率，以及比仅使用单一提供商的模型更好的性能。<p>我相信，它现在是在现实世界的代码库中使用人工智能处理大型任务的最佳工具之一。它的有效上下文窗口可容纳 200 万个词组，并可使用树状项目地图（支持 30 多种语言）对容纳 2000 万个词组或更多词组的项目进行索引。它可以在 SQLite、Redis 和 Git 等数百万行的大型项目中有效查找相关上下文。<p>关于 Plandex 一些主要功能的更多信息：<p>- Plandex 有一个内置的差异审查沙箱，可帮助您获得 AI 的好处，而不会在项目中留下混乱。默认情况下，所有更改都会累积在沙箱中，直到您批准为止。沙箱受版本控制。<p>- 它提供 "全自动模式"，可以端到端自主完成大型任务，包括高级规划、上下文加载、详细规划、实施、命令执行（用于依赖关系、构建、测试等）和调试。<p>- 模型和模型设置也是可配置的。有针对不同用例的内置模型和模型包。您还可以添加自定义模型和模型包，并自定义模型设置，如温度或顶点。所有模型更改都受版本控制，因此您可以使用分支来尝试使用不同的模型完成相同的任务。新发布的 OpenAI 模型和付费的 Gemini 2.5 Pro 模型将很快集成到默认模型包中。<p>- 它可以轻松地自行托管，包括使用 Docker 进行快速本地单用户设置的 "本地模式"。<p>- 云托管还提供了几个订阅层级，为您带来更多便利："集成模型 "模式无需其他账户或 API 密钥，允许您集中管理计费&#x2F;预算&#x2F;支出警报并跟踪使用情况；"BYO API 密钥 "模式允许您使用自己的 OpenAI&#x2F;OpenRouter 账户。<p>我希望 Plandex Discord（<a href="https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai" rel="nofollow">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>）中能有更多的 HNers。请加入并打声招呼！<p>当然，我也希望听到您的反馈，无论是正面的还是负面的。非常感谢！
2025-04-17 18:12:59.223 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Show HN: Plandex v2 - 面向大型项目和任务的开源人工智能编码代理
2025-04-17 18:12:59.228 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710576
2025-04-17 18:12:59.240 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 14, 分数: 154
2025-04-17 18:12:59.240 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:12:59.240 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:13:03.254 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:13:03.255 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:13:03.255 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3012e571] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:13:03.256 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:13:03.256 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-15, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:13:03.256 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:13:03.256 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-15, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:03.256 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e73285b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:13:03.257 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:13:03.257 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-5, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:13:03.257 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:13:03.257 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-5, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:03.257 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61f63d2c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:13:03.258 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-6, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:13:03.258 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-6, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:03.463 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-6, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:03.463 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61f63d2c] [f2b988be-6] Response 200 OK
2025-04-17 18:13:03.463 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:03.465 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-6, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:03.465 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43712005,43713856,43714657,43712350,43711999,43714281,43714232,43711929,43712661,43711749,43713686,43713460,43712922,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43713380,43712634,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:13:03.465 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43712005,43713856,43714657,43712350,43711999,43714281,43714232,43711929,43712661,43711749,43713686,43713460,43712922,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43713380,43712634,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:13:03.466 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:13:03.466 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:13:03.467 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-15, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:03.467 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3012e571] [18f2c40b-15] Response 200 OK
2025-04-17 18:13:03.467 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:03.467 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-15, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:03.467 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":195,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:13:03.467 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":195,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:13:03.467 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:13:03.467 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:13:03.469 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711706
2025-04-17 18:13:03.470 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Jellyfin as a Spotify alternative
2025-04-17 18:13:03.470 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Jellyfin as a Spotify alternative
2025-04-17 18:13:03.470 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:03.470 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43707021
2025-04-17 18:13:03.471 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [f07f7a1] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:03.471 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Damn Vulnerable MCP Server
2025-04-17 18:13:03.471 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Damn Vulnerable MCP Server
2025-04-17 18:13:03.471 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:03.471 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [36508a0e] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:03.471 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-5, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:03.471 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-13, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:03.481 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-5, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:03.481 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e73285b] [363f83af-5] Response 200 OK
2025-04-17 18:13:03.481 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:03.482 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-5, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:03.482 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43713946,43708129,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":352,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:13:03.482 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43713946,43708129,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":352,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:13:03.482 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:13:03.482 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:13:03.485 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43699271
2025-04-17 18:13:03.486 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:13:03.487 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:13:03.487 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:03.487 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:03.487 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href="https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href="https:&#x2F;&#x2F;12factor.net&#x2F;" rel="nofollow">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!
2025-04-17 18:13:03.487 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:03.488 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b4df25] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:03.488 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-4, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:03.489 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [719462ff] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:03.489 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-2, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:03.972 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-5, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:03.972 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [f07f7a1] [785682b2-5] Response 200 OK
2025-04-17 18:13:03.973 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-5, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:03.973 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=作为 Spotify 替代品的 Jellyfin}]}
2025-04-17 18:13:03.973 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Jellyfin as a Spotify alternative -> 作为 Spotify 替代品的 Jellyfin
2025-04-17 18:13:03.973 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 作为 Spotify 替代品的 Jellyfin
2025-04-17 18:13:03.974 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711706
2025-04-17 18:13:03.981 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 23, 分数: 331
2025-04-17 18:13:03.982 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:13:03.983 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:13:03.983 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54513cd2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:13:03.984 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-7, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:13:03.984 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-7, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:03.984 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-4, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:03.985 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b4df25] [e94c08e9-4] Response 200 OK
2025-04-17 18:13:03.985 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-4, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:03.986 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=12 因子代理：可靠的 LLM 应用模式}]}
2025-04-17 18:13:03.986 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: 12-factor Agents: Patterns of reliable LLM applications -> 12 因子代理：可靠的 LLM 应用模式
2025-04-17 18:13:04.005 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-13, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:04.006 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [36508a0e] [4066c1c6-13] Response 200 OK
2025-04-17 18:13:04.006 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-13, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:04.008 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=该死的漏洞百出的 MCP 服务器}]}
2025-04-17 18:13:04.008 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Damn Vulnerable MCP Server -> 该死的漏洞百出的 MCP 服务器
2025-04-17 18:13:04.008 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 该死的漏洞百出的 MCP 服务器
2025-04-17 18:13:04.009 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43707021
2025-04-17 18:13:04.016 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 21, 分数: 195
2025-04-17 18:13:04.016 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:13:04.017 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:13:04.017 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c5e247a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:13:04.018 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-16, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:13:04.018 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-16, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:04.190 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-7, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:04.190 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54513cd2] [f2b988be-7] Response 200 OK
2025-04-17 18:13:04.190 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:04.191 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-7, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:04.191 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:13:04.191 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:13:04.192 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:13:04.192 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:13:04.194 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43709770
2025-04-17 18:13:04.195 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:13:04.195 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:13:04.195 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:04.196 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [405e7122] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:04.196 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-6, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:04.220 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-16, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:04.221 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c5e247a] [18f2c40b-16] Response 200 OK
2025-04-17 18:13:04.221 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:04.222 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-16, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:04.222 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":154,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43714770,43710094,43707582,43706889,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43713542,43705667,43713886,43705658,43705959,43708803,43713665,43710306,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43713025,43706007,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:13:04.222 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":154,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43714770,43710094,43707582,43706889,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43713542,43705667,43713886,43705658,43705959,43708803,43713665,43710306,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43713025,43706007,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:13:04.223 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:13:04.223 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:13:04.227 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704904
2025-04-17 18:13:04.228 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Kermit: A typeface for kids
2025-04-17 18:13:04.228 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Kermit: A typeface for kids
2025-04-17 18:13:04.228 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:04.228 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15228b86] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:04.229 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-5, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:04.471 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-2, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:04.471 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [719462ff] [aaa59705-2] Response 200 OK
2025-04-17 18:13:04.472 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-2, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:04.473 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=我已经构建人工智能代理有一段时间了。在尝试了所有框架并与许多使用 AI 构建系统的创始人交谈后，我注意到了一些有趣的事情：大多数投入生产的 AI 代理实际上并不具备代理功能。<p>因此，我开始记录我在构建生产级人工智能系统方面所学到的知识：<a href="https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>.这是一套用于构建由 LLM 驱动的软件的原则，这些软件的可靠性足以让生产型客户放心使用。<p>秉承 Heroku&#x27;12 Factor Apps（<a href="https:&#x2F;&#x2F;12factor.net&#x2F; "rel="nofollow">https:&#x2F;&#x2F;12factor.net&#x2F;</a>）的精神，这些原则侧重于使 LLM 应用程序更加可靠、可扩展和可维护的工程实践。<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn't get things past the 70-80% reliability bar with out-of-the-box tools.而那些成功的公司则倾向于从代理构建中汲取小型、模块化的概念，并将其融入到现有产品中，而不是从零开始。<p>完整指南详细介绍了每项原则，并提供了可遵循的示例和模式。我看到这些实践在处理真实用户流量的生产系统中运行良好。<p>我将此作为一个起点进行分享--该领域发展迅速，因此这些原则将不断演变。我欢迎您提供反馈和意见，帮助我们弄清生产级人工智能系统的含义！}]}
2025-04-17 18:13:04.473 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href="https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href="https:&#x2F;&#x2F;12factor.net&#x2F;" rel="nofollow">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems! -> 我已经构建人工智能代理有一段时间了。在尝试了所有框架并与许多使用 AI 构建系统的创始人交谈后，我注意到了一些有趣的事情：大多数投入生产的 AI 代理实际上并不具备代理功能。<p>因此，我开始记录我在构建生产级人工智能系统方面所学到的知识：<a href="https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>.这是一套用于构建由 LLM 驱动的软件的原则，这些软件的可靠性足以让生产型客户放心使用。<p>秉承 Heroku&#x27;12 Factor Apps（<a href="https:&#x2F;&#x2F;12factor.net&#x2F; "rel="nofollow">https:&#x2F;&#x2F;12factor.net&#x2F;</a>）的精神，这些原则侧重于使 LLM 应用程序更加可靠、可扩展和可维护的工程实践。<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn't get things past the 70-80% reliability bar with out-of-the-box tools.而那些成功的公司则倾向于从代理构建中汲取小型、模块化的概念，并将其融入到现有产品中，而不是从零开始。<p>完整指南详细介绍了每项原则，并提供了可遵循的示例和模式。我看到这些实践在处理真实用户流量的生产系统中运行良好。<p>我将此作为一个起点进行分享--该领域发展迅速，因此这些原则将不断演变。我欢迎您提供反馈和意见，帮助我们弄清生产级人工智能系统的含义！
2025-04-17 18:13:04.473 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 12 因子代理：可靠的 LLM 应用模式
2025-04-17 18:13:04.474 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43699271
2025-04-17 18:13:04.481 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 22, 分数: 352
2025-04-17 18:13:04.481 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:13:04.482 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:13:04.482 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a9a345b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:13:04.483 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-6, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:13:04.483 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-6, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:04.664 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-5, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:04.664 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15228b86] [e94c08e9-5] Response 200 OK
2025-04-17 18:13:04.665 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-5, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:04.666 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=柯密特儿童字体}]}
2025-04-17 18:13:04.666 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Kermit: A typeface for kids -> 柯密特儿童字体
2025-04-17 18:13:04.666 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 柯密特儿童字体
2025-04-17 18:13:04.669 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704904
2025-04-17 18:13:04.677 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 25, 分数: 325
2025-04-17 18:13:04.677 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:13:04.678 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:13:04.679 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [107bc0e8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:13:04.679 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-8, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:13:04.680 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-8, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:04.689 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-6, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:04.690 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [405e7122] [785682b2-6] Response 200 OK
2025-04-17 18:13:04.690 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-6, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:04.690 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=男子不向康卡斯特付费而自建互联网服务提供商 将服务扩展到数百户家庭 (2022)}]}
2025-04-17 18:13:04.691 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022) -> 男子不向康卡斯特付费而自建互联网服务提供商 将服务扩展到数百户家庭 (2022)
2025-04-17 18:13:04.691 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 男子不向康卡斯特付费而自建互联网服务提供商 将服务扩展到数百户家庭 (2022)
2025-04-17 18:13:04.692 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43709770
2025-04-17 18:13:04.697 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 24, 分数: 466
2025-04-17 18:13:04.697 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:13:04.697 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:13:04.698 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1049b74b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:13:04.698 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-17, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:13:04.698 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-17, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:04.698 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-6, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:04.699 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a9a345b] [363f83af-6] Response 200 OK
2025-04-17 18:13:04.699 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:04.699 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-6, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:04.699 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:13:04.699 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:13:04.700 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:13:04.700 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:13:04.704 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43670921
2025-04-17 18:13:04.705 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:13:04.705 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:13:04.705 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:04.705 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f42b429] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:04.705 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-14, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:04.884 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-8, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:04.885 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [107bc0e8] [f2b988be-8] Response 200 OK
2025-04-17 18:13:04.885 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:04.885 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-8, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:04.886 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:13:04.886 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:13:04.886 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:13:04.887 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:13:04.890 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704430
2025-04-17 18:13:04.890 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: CVE Foundation
2025-04-17 18:13:04.891 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：CVE Foundation
2025-04-17 18:13:04.891 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:04.892 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [455860cc] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:04.892 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-3, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:04.900 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-17, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:04.900 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1049b74b] [18f2c40b-17] Response 200 OK
2025-04-17 18:13:04.900 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:04.900 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-17, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:04.901 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43707467,43713915,43714561,43712935,43713744,43709029,43712158,43707380,43712968,43714654,43712010,43707184,43707395,43707982,43708640,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43707712,43713270,43711562,43712997,43707291,43707452,43708585,43706791,43708976,43711044,43711199,43710206,43708974,43708002,43707296,43706920,43706858,43708402,43710557,43708747,43713586,43712501],"score":297,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:13:04.901 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43707467,43713915,43714561,43712935,43713744,43709029,43712158,43707380,43712968,43714654,43712010,43707184,43707395,43707982,43708640,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43707712,43713270,43711562,43712997,43707291,43707452,43708585,43706791,43708976,43711044,43711199,43710206,43708974,43708002,43707296,43706920,43706858,43708402,43710557,43708747,43713586,43712501],"score":297,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:13:04.901 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:13:04.901 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:13:04.904 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705632
2025-04-17 18:13:04.905 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:13:04.905 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Reproducing Hacker News writing style fingerprinting
2025-04-17 18:13:04.905 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:04.905 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e7a4563] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:04.906 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-6, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:05.239 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-14, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:05.240 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f42b429] [4066c1c6-14] Response 200 OK
2025-04-17 18:13:05.242 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-14, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:05.242 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=两步棋，AlphaGo 和李世石重新定义了未来（2016 年）}]}
2025-04-17 18:13:05.243 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016) -> 两步棋，AlphaGo 和李世石重新定义了未来（2016 年）
2025-04-17 18:13:05.243 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 两步棋，AlphaGo 和李世石重新定义了未来（2016 年）
2025-04-17 18:13:05.246 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43670921
2025-04-17 18:13:05.255 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 26, 分数: 26
2025-04-17 18:13:05.255 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:13:05.256 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:13:05.256 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3119f153] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:13:05.257 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-7, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:13:05.257 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-7, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:05.352 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-6, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:05.352 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e7a4563] [e94c08e9-6] Response 200 OK
2025-04-17 18:13:05.353 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-6, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:05.353 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=复制黑客新闻的写作风格指纹}]}
2025-04-17 18:13:05.354 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Reproducing Hacker News writing style fingerprinting -> 复制黑客新闻的写作风格指纹
2025-04-17 18:13:05.354 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 复制黑客新闻的写作风格指纹
2025-04-17 18:13:05.356 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705632
2025-04-17 18:13:05.362 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 28, 分数: 297
2025-04-17 18:13:05.362 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:13:05.362 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:13:05.362 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [746b6215] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:13:05.363 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-9, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:13:05.363 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-9, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:05.385 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-3, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:05.386 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [455860cc] [aaa59705-3] Response 200 OK
2025-04-17 18:13:05.386 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-3, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:05.387 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=CVE 基金会}]}
2025-04-17 18:13:05.387 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: CVE Foundation -> CVE 基金会
2025-04-17 18:13:05.387 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: CVE 基金会
2025-04-17 18:13:05.388 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704430
2025-04-17 18:13:05.394 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 27, 分数: 382
2025-04-17 18:13:05.879 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-9, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:05.880 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [746b6215] [f2b988be-9] Response 200 OK
2025-04-17 18:13:05.880 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:05.880 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-9, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:05.880 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":133,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:13:05.881 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":133,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:13:05.881 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:13:05.881 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:13:05.884 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43690828
2025-04-17 18:13:05.885 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: eInk Mode: Making web pages easier to read
2025-04-17 18:13:05.885 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：eInk Mode: Making web pages easier to read
2025-04-17 18:13:05.885 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:05.886 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38cee92c] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:05.886 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-7, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:05.891 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-7, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:05.891 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3119f153] [363f83af-7] Response 200 OK
2025-04-17 18:13:05.891 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:05.891 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-7, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:05.892 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:13:05.892 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:13:05.892 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:13:05.892 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:13:05.895 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678533
2025-04-17 18:13:05.895 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:13:05.895 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Query Engines: Push vs. Pull (2021)
2025-04-17 18:13:05.895 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:05.896 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [506c1232] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:05.896 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-15, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:06.380 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-7, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:06.381 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38cee92c] [785682b2-7] Response 200 OK
2025-04-17 18:13:06.383 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-7, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:06.383 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=电子墨水模式：让网页更易于阅读}]}
2025-04-17 18:13:06.384 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: eInk Mode: Making web pages easier to read -> 电子墨水模式：让网页更易于阅读
2025-04-17 18:13:06.384 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 电子墨水模式：让网页更易于阅读
2025-04-17 18:13:06.387 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43690828
2025-04-17 18:13:06.401 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 30, 分数: 133
2025-04-17 18:13:06.408 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-15, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:06.409 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [506c1232] [4066c1c6-15] Response 200 OK
2025-04-17 18:13:06.410 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-15, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:06.411 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=查询引擎：推与拉 (2021)}]}
2025-04-17 18:13:06.412 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Query Engines: Push vs. Pull (2021) -> 查询引擎：推与拉 (2021)
2025-04-17 18:13:06.412 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 查询引擎：推与拉 (2021)
2025-04-17 18:13:06.417 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678533
2025-04-17 18:13:06.428 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 29, 分数: 86
2025-04-17 18:13:06.429 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:06.429 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:13:12.435 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:13:12.435 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:13:12.436 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2d089bde] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:13:12.436 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:13:12.436 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-18, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:13:12.436 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-18, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:12.436 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:13:12.436 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23cf600f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:13:12.437 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:13:12.437 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-10, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:13:12.437 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-10, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:12.437 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:13:12.437 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27f0f0ae] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:13:12.438 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-8, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:13:12.438 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-8, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:12.639 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-18, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:12.639 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2d089bde] [18f2c40b-18] Response 200 OK
2025-04-17 18:13:12.639 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:12.639 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-18, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:12.640 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":199,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:13:12.640 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":199,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:13:12.640 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-10, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:12.640 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:13:12.640 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [23cf600f] [f2b988be-10] Response 200 OK
2025-04-17 18:13:12.640 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:13:12.641 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:12.641 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-10, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:12.641 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43713671,43713968,43707890,43708015,43711159,43711020,43709949,43712397,43710951,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43712596,43709282,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":503,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:13:12.642 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43713671,43713968,43707890,43708015,43711159,43711020,43709949,43712397,43710951,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43712596,43709282,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":503,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:13:12.642 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:13:12.642 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:13:12.644 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704596
2025-04-17 18:13:12.644 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43707719
2025-04-17 18:13:12.645 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How Nintendo bled Atari games to death
2025-04-17 18:13:12.645 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: OpenAI o3 and o4-mini
2025-04-17 18:13:12.645 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：How Nintendo bled Atari games to death
2025-04-17 18:13:12.645 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：OpenAI o3 and o4-mini
2025-04-17 18:13:12.645 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:12.645 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:12.645 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78a9a07e] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:12.645 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c0e991] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:12.646 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-7, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:12.646 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-4, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:12.649 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-8, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:12.649 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27f0f0ae] [363f83af-8] Response 200 OK
2025-04-17 18:13:12.649 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:12.649 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-8, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:12.649 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:13:12.649 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:13:12.649 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:13:12.649 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:13:12.651 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43676254
2025-04-17 18:13:12.651 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Breaking the Llama Community License
2025-04-17 18:13:12.651 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Breaking the Llama Community License
2025-04-17 18:13:12.651 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:12.652 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25221c13] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:12.652 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-8, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:13.188 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-7, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:13.189 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78a9a07e] [e94c08e9-7] Response 200 OK
2025-04-17 18:13:13.190 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-7, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:13.191 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=任天堂如何让雅达利游戏血本无归}]}
2025-04-17 18:13:13.191 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: How Nintendo bled Atari games to death -> 任天堂如何让雅达利游戏血本无归
2025-04-17 18:13:13.191 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 任天堂如何让雅达利游戏血本无归
2025-04-17 18:13:13.193 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704596
2025-04-17 18:13:13.201 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 31, 分数: 199
2025-04-17 18:13:13.201 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:13:13.201 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:13:13.202 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2429a9f2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:13:13.202 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-19, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:13:13.202 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-19, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:13.202 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-8, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:13.202 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25221c13] [785682b2-8] Response 200 OK
2025-04-17 18:13:13.203 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-8, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:13.203 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=打破拉玛社区许可证}]}
2025-04-17 18:13:13.203 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Breaking the Llama Community License -> 打破拉玛社区许可证
2025-04-17 18:13:13.203 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 打破拉玛社区许可证
2025-04-17 18:13:13.204 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43676254
2025-04-17 18:13:13.209 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 33, 分数: 133
2025-04-17 18:13:13.209 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:13:13.210 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:13:13.210 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3fa0ce3a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:13:13.210 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-11, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:13:13.211 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-11, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:13.405 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-19, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:13.406 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2429a9f2] [18f2c40b-19] Response 200 OK
2025-04-17 18:13:13.407 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:13.408 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-19, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:13.408 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43714662,43713288,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:13:13.409 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43714662,43713288,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:13:13.410 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:13:13.410 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:13:13.414 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-11, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:13.415 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3fa0ce3a] [f2b988be-11] Response 200 OK
2025-04-17 18:13:13.416 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:13.416 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-11, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:13.417 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:13:13.417 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:13:13.417 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43677862
2025-04-17 18:13:13.417 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:13:13.418 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:13:13.419 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:13:13.419 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Demolishing the Fry's Electronics in Burbank
2025-04-17 18:13:13.419 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:13.420 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f41612] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:13.421 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-16, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:13.424 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43669540
2025-04-17 18:13:13.424 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:13:13.425 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:13:13.425 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:13.425 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [b6e978f] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:13.425 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-8, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:13.846 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-8, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:13.847 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [b6e978f] [e94c08e9-8] Response 200 OK
2025-04-17 18:13:13.848 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-8, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:13.848 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=从零开始的 Nix 三角数学库}]}
2025-04-17 18:13:13.848 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Nix Trigonometric Math Library from Ground Zero -> 从零开始的 Nix 三角数学库
2025-04-17 18:13:13.849 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 从零开始的 Nix 三角数学库
2025-04-17 18:13:13.851 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43669540
2025-04-17 18:13:13.857 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 35, 分数: 43
2025-04-17 18:13:13.857 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:13:13.858 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:13:13.858 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a853273] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:13:13.858 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-9, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:13:13.859 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-9, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:13.879 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-4, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:13.879 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c0e991] [aaa59705-4] Response 200 OK
2025-04-17 18:13:13.879 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-4, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:13.881 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=OpenAI o3 和 o4-mini}]}
2025-04-17 18:13:13.881 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: OpenAI o3 and o4-mini -> OpenAI o3 和 o4-mini
2025-04-17 18:13:13.881 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: OpenAI o3 和 o4-mini
2025-04-17 18:13:13.882 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43707719
2025-04-17 18:13:13.887 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 32, 分数: 503
2025-04-17 18:13:13.887 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:13:13.887 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:13:13.887 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10e664a5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:13:13.887 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-20, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:13:13.888 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-20, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:13.888 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-16, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:13.888 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f41612] [4066c1c6-16] Response 200 OK
2025-04-17 18:13:13.889 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-16, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:13.889 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=拆除伯班克的弗莱电器店}]}
2025-04-17 18:13:13.889 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Demolishing the Fry's Electronics in Burbank -> 拆除伯班克的弗莱电器店
2025-04-17 18:13:13.889 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 拆除伯班克的弗莱电器店
2025-04-17 18:13:13.889 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43677862
2025-04-17 18:13:13.893 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 34, 分数: 125
2025-04-17 18:13:13.893 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:13:13.894 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:13:13.894 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [62b9a17a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:13:13.894 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-12, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:13:13.895 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-12, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:14.071 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-9, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:14.071 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a853273] [363f83af-9] Response 200 OK
2025-04-17 18:13:14.072 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:14.072 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-9, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:14.072 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":853,"id":43692677,"kids":[43714856,43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43713343,43693275,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43705219,43693264,43707320,43693384,43708998,43704834,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":655,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:13:14.072 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":853,"id":43692677,"kids":[43714856,43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43713343,43693275,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43705219,43693264,43707320,43693384,43708998,43704834,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":655,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:13:14.073 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:13:14.073 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:13:14.075 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43692677
2025-04-17 18:13:14.076 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:13:14.076 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:13:14.076 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:14.076 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f0c72f8] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:14.077 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-9, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:14.093 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-20, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:14.093 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10e664a5] [18f2c40b-20] Response 200 OK
2025-04-17 18:13:14.093 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:14.094 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-20, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:14.094 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:13:14.094 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:13:14.094 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:13:14.094 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:13:14.100 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705824
2025-04-17 18:13:14.100 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-12, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:14.100 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [62b9a17a] [f2b988be-12] Response 200 OK
2025-04-17 18:13:14.100 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:14.100 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: A high-throughput parser for the Zig programming language
2025-04-17 18:13:14.100 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：A high-throughput parser for the Zig programming language
2025-04-17 18:13:14.100 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:14.101 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-12, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:14.101 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:13:14.101 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:13:14.101 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1a163bf8] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:14.101 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:13:14.101 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:13:14.101 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-9, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:14.105 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714433
2025-04-17 18:13:14.107 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:13:14.107 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:13:14.107 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:14.107 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:14.107 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?
2025-04-17 18:13:14.107 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:14.108 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56588278] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:14.108 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-5, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:14.108 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31bd9fb1] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:14.109 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-17, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:14.671 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-9, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:14.671 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f0c72f8] [785682b2-9] Response 200 OK
2025-04-17 18:13:14.672 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-9, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:14.672 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=美国低估了制造业回流的难度}]}
2025-04-17 18:13:14.672 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: America underestimates the difficulty of bringing manufacturing back -> 美国低估了制造业回流的难度
2025-04-17 18:13:14.672 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 美国低估了制造业回流的难度
2025-04-17 18:13:14.673 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43692677
2025-04-17 18:13:14.681 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 36, 分数: 655
2025-04-17 18:13:14.682 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:13:14.684 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:13:14.685 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [355d26ad] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:13:14.685 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-10, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:13:14.685 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-10, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:14.716 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-9, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:14.716 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1a163bf8] [e94c08e9-9] Response 200 OK
2025-04-17 18:13:14.716 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-9, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:14.717 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Zig 编程语言的高吞吐量解析器}]}
2025-04-17 18:13:14.717 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: A high-throughput parser for the Zig programming language -> Zig 编程语言的高吞吐量解析器
2025-04-17 18:13:14.717 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Zig 编程语言的高吞吐量解析器
2025-04-17 18:13:14.719 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705824
2025-04-17 18:13:14.725 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 37, 分数: 122
2025-04-17 18:13:14.726 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:13:14.727 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:13:14.727 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4ce71b86] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:13:14.728 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-21, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:13:14.728 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-21, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:14.854 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-5, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:14.855 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56588278] [aaa59705-5] Response 200 OK
2025-04-17 18:13:14.856 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-5, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:14.857 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=PolyThink：消除幻觉的多代理人工智能系统}]}
2025-04-17 18:13:14.857 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations -> PolyThink：消除幻觉的多代理人工智能系统
2025-04-17 18:13:14.895 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-10, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:14.896 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [355d26ad] [363f83af-10] Response 200 OK
2025-04-17 18:13:14.896 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:14.896 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-10, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:14.897 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:13:14.897 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:13:14.897 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:13:14.898 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:13:14.901 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43691334
2025-04-17 18:13:14.902 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:13:14.902 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:13:14.902 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:14.902 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f688984] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:14.903 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-10, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:14.914 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-17, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:14.914 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31bd9fb1] [4066c1c6-17] Response 200 OK
2025-04-17 18:13:14.915 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-17, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:14.915 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=非常高兴地宣布 PolyThink Alpha&#x27;早期访问！我们的多智能体人工智能系统可从多个模型中获得共识驱动的准确答案，从而消除幻觉。我希望你能加入 https:&#x2F;&#x2F;www.polyth.ink&#x2F 的候补名单，因为我计划从五月份开始随机发放邀请。反馈意见将影响我们最终的发布！我也很希望得到您的想法和建议！您希望在这里看到什么？}]}
2025-04-17 18:13:14.915 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here? -> 非常高兴地宣布 PolyThink Alpha&#x27;早期访问！我们的多智能体人工智能系统可从多个模型中获得共识驱动的准确答案，从而消除幻觉。我希望你能加入 https:&#x2F;&#x2F;www.polyth.ink&#x2F 的候补名单，因为我计划从五月份开始随机发放邀请。反馈意见将影响我们最终的发布！我也很希望得到您的想法和建议！您希望在这里看到什么？
2025-04-17 18:13:14.916 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: PolyThink：消除幻觉的多代理人工智能系统
2025-04-17 18:13:14.918 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714433
2025-04-17 18:13:14.925 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 38, 分数: 5
2025-04-17 18:13:14.930 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-21, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:14.930 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4ce71b86] [18f2c40b-21] Response 200 OK
2025-04-17 18:13:14.930 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:14.931 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-21, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:14.931 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:13:14.931 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:13:14.931 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:13:14.931 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:13:14.934 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705649
2025-04-17 18:13:14.934 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:13:14.935 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Dirty tricks 6502 programmers use (2019)
2025-04-17 18:13:14.935 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:14.935 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5e44ebf4] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:14.935 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-10, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:15.385 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-10, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:15.385 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5e44ebf4] [e94c08e9-10] Response 200 OK
2025-04-17 18:13:15.386 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-10, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:15.386 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=6502 程序员使用的肮脏伎俩（2019 年）}]}
2025-04-17 18:13:15.386 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Dirty tricks 6502 programmers use (2019) -> 6502 程序员使用的肮脏伎俩（2019 年）
2025-04-17 18:13:15.386 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 6502 程序员使用的肮脏伎俩（2019 年）
2025-04-17 18:13:15.387 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705649
2025-04-17 18:13:15.393 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 40, 分数: 155
2025-04-17 18:13:15.394 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-10, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:15.394 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f688984] [785682b2-10] Response 200 OK
2025-04-17 18:13:15.395 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-10, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:15.395 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=4chan Sharty 黑客攻击和看门人电子邮件泄露}]}
2025-04-17 18:13:15.395 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: 4chan Sharty Hack And Janitor Email Leak -> 4chan Sharty 黑客攻击和看门人电子邮件泄露
2025-04-17 18:13:15.395 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 4chan Sharty 黑客攻击和看门人电子邮件泄露
2025-04-17 18:13:15.396 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43691334
2025-04-17 18:13:15.401 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 39, 分数: 674
2025-04-17 18:13:15.401 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:15.401 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:13:23.413 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:13:23.414 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:13:23.415 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [42894c27] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:13:23.416 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:13:23.416 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-13, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:13:23.417 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:13:23.417 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-13, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:23.418 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c4eba06] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:13:23.418 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:13:23.419 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-11, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:13:23.419 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-11, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:23.419 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:13:23.420 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48712757] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:13:23.421 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-22, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:13:23.422 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-22, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:23.890 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-11, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:23.890 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c4eba06] [363f83af-11] Response 200 OK
2025-04-17 18:13:23.890 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:23.891 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-11, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:23.891 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:13:23.891 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:13:23.892 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:13:23.892 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:13:23.894 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-22, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:23.895 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705065
2025-04-17 18:13:23.895 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48712757] [18f2c40b-22] Response 200 OK
2025-04-17 18:13:23.895 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:23.895 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-22, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:23.896 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":2,"id":43711393,"kids":[43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:13:23.896 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":2,"id":43711393,"kids":[43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:13:23.896 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:13:23.896 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:13:23.896 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:13:23.896 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:13:23.897 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:23.898 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:23.898 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href="https:&#x2F;&#x2F;www.jasmine.energy">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href="https:&#x2F;&#x2F;assets.jasmine.energy">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!
2025-04-17 18:13:23.898 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:23.899 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1034c167] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:23.899 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711393
2025-04-17 18:13:23.899 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a3b0e12] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:23.899 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: The Promise of Rust
2025-04-17 18:13:23.900 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：The Promise of Rust
2025-04-17 18:13:23.900 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:23.900 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [173edb07] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:23.900 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-11, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:23.900 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-6, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:23.901 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-18, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:23.908 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-13, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:23.909 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [42894c27] [f2b988be-13] Response 200 OK
2025-04-17 18:13:23.909 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:23.909 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-13, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:23.909 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":158,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:13:23.909 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":158,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:13:23.909 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:13:23.909 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:13:23.912 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43703623
2025-04-17 18:13:23.912 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:13:23.913 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：An Introduction to Stochastic Calculus (2022)
2025-04-17 18:13:23.913 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:23.913 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [356b21fd] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:23.913 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-11, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:24.533 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-11, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:24.534 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [356b21fd] [785682b2-11] Response 200 OK
2025-04-17 18:13:24.535 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-11, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:24.536 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=随机微积分导论（2022 年）}]}
2025-04-17 18:13:24.536 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: An Introduction to Stochastic Calculus (2022) -> 随机微积分导论（2022 年）
2025-04-17 18:13:24.537 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 随机微积分导论（2022 年）
2025-04-17 18:13:24.540 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43703623
2025-04-17 18:13:24.552 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 41, 分数: 158
2025-04-17 18:13:24.553 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:13:24.554 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:13:24.554 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [37d1eee8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:13:24.555 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-12, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:13:24.555 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-12, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:24.559 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-11, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:24.559 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [173edb07] [e94c08e9-11] Response 200 OK
2025-04-17 18:13:24.559 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-11, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:24.560 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=铁锈的承诺}]}
2025-04-17 18:13:24.560 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: The Promise of Rust -> 铁锈的承诺
2025-04-17 18:13:24.560 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 铁锈的承诺
2025-04-17 18:13:24.561 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711393
2025-04-17 18:13:24.567 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 43, 分数: 17
2025-04-17 18:13:24.567 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:13:24.568 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:13:24.568 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ddc125c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:13:24.568 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-23, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:13:24.569 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-23, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:24.582 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-6, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:24.583 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1034c167] [aaa59705-6] Response 200 OK
2025-04-17 18:13:24.583 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-6, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:24.584 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=启动 HN：Jasmine（YC S22）--太阳能的 REC 合规和付款自动化}]}
2025-04-17 18:13:24.585 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar -> 启动 HN：Jasmine（YC S22）--太阳能的 REC 合规和付款自动化
2025-04-17 18:13:24.766 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-12, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:24.767 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [37d1eee8] [363f83af-12] Response 200 OK
2025-04-17 18:13:24.767 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:24.768 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-12, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:24.768 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":16,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:13:24.769 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":16,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:13:24.770 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:13:24.770 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:13:24.772 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-23, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:24.773 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ddc125c] [18f2c40b-23] Response 200 OK
2025-04-17 18:13:24.774 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:24.775 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-23, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:24.775 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":98,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:13:24.776 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":98,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:13:24.776 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:13:24.777 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:13:24.778 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714133
2025-04-17 18:13:24.780 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:13:24.780 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：'Why would he take such a risk?' My censor and me
2025-04-17 18:13:24.780 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:24.781 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cdce4d6] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:24.782 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-12, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:24.782 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705796
2025-04-17 18:13:24.783 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:13:24.783 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:13:24.783 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:24.783 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [102357d0] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:24.784 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-12, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:25.045 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-18, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:25.046 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a3b0e12] [4066c1c6-18] Response 200 OK
2025-04-17 18:13:25.048 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-18, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:25.049 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Hi HN - 我们是 Nathalie、Dalton、Vince 和 Matt，我们正在推出 Jasmine Energy (<a href="https:&#x2F;&#x2F;www.jasmine.energy">https:&#x2F;&#x2F;www.jasmine.energy</a>)，这是一个帮助住宅和商业太阳能业主自动注册系统、跟踪发电量并获得可再生能源证书 (REC) 的工具。<p>REC 是清洁电力的可交易证书，由美国各地的能源市场颁发。大多数拥有屋顶或小型商用太阳能的人从未听说过它们，更不用说申领了，但它们确实存在！<p>问题是，申请和销售 RECs 的程序非常混乱--几十年前是为公用事业规模的参与者设计的，而不是为个人或小型企业设计的。<p>要注册一个系统并开始申请 RECs，您通常必须：<i>在 10 多个地区的 RECs 交易市场中导航：<p>要注册系统并开始申请 RECs，您通常需要：浏览 10 多个地区性 REC 注册机构中的一个，每个机构都有自己的文件、表格和规则；从逆变器或公用事业部门获取发电数据，将其格式化并手动提交；尝试寻找买家（通常通过经纪人或不透明的交易所）并协商付款。<p>对于单个系统而言，这需要花费数周甚至数月的时间，因此大多数人都放弃了。因此，每年都有数百万个太阳能安装项目的收入被搁置。我们是在亲眼目睹这种情况后创办茉莉能源公司的：我们中的一些人曾在能源初创企业工作过，另一些人看着父母安装太阳能设备，却从未申请过一个REC。我们的平台：我们的平台：使用人工智能从您的太阳能文件中提取元数据，并将您的系统自动注册到正确的注册表中；连接到您的逆变器，以提交发电数据并验证 REC 资格；通过合作伙伴列出待售 REC，跟踪销售过程并发放付款--所有这些都通过一个仪表板完成。<p>该领域非常适合自动化和 LLM--不是为了生成文本，而是为了（1）构建非结构化文档，（2）与没有 API 的传统政府网站进行交互，以及（3）处理重复的官僚语言。<p>需要明确的是，我们并不是要 "压榨公共资金 "或不公平地利用该系统。REC 销售发生在自愿和合规市场中（通常由企业买家和公用事业公司提供资金，而非纳税人）。茉莉花不会创造或夸大激励机制，它只是帮助人们申请已经存在但难以获得的激励机制。我们正在提高可再生能源证市场的效率。<p>可再生能源证一直是推动电网去碳化最有效、最广泛采用的激励系统之一。<p>该产品现已面向 PJM、M-RETS 和 ERCOT 地区（更多地区即将推出）的太阳能所有者上线。如果您已经拥有太阳能，您可以上传您的文档，并在<a href="https:&#x2F;&#x2F;assets.jasmine.energy">https:&#x2F;&#x2F;assets.jasmine.energy</a>开始流程。<p>我们非常欢迎来自社区的反馈--产品、市场或您认为我们应该关注的任何边缘案例。当然，我们也很乐意回答任何问题！}]}
2025-04-17 18:13:25.050 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href="https:&#x2F;&#x2F;www.jasmine.energy">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href="https:&#x2F;&#x2F;assets.jasmine.energy">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions! -> Hi HN - 我们是 Nathalie、Dalton、Vince 和 Matt，我们正在推出 Jasmine Energy (<a href="https:&#x2F;&#x2F;www.jasmine.energy">https:&#x2F;&#x2F;www.jasmine.energy</a>)，这是一个帮助住宅和商业太阳能业主自动注册系统、跟踪发电量并获得可再生能源证书 (REC) 的工具。<p>REC 是清洁电力的可交易证书，由美国各地的能源市场颁发。大多数拥有屋顶或小型商用太阳能的人从未听说过它们，更不用说申领了，但它们确实存在！<p>问题是，申请和销售 RECs 的程序非常混乱--几十年前是为公用事业规模的参与者设计的，而不是为个人或小型企业设计的。<p>要注册一个系统并开始申请 RECs，您通常必须：<i>在 10 多个地区的 RECs 交易市场中导航：<p>要注册系统并开始申请 RECs，您通常需要：浏览 10 多个地区性 REC 注册机构中的一个，每个机构都有自己的文件、表格和规则；从逆变器或公用事业部门获取发电数据，将其格式化并手动提交；尝试寻找买家（通常通过经纪人或不透明的交易所）并协商付款。<p>对于单个系统而言，这需要花费数周甚至数月的时间，因此大多数人都放弃了。因此，每年都有数百万个太阳能安装项目的收入被搁置。我们是在亲眼目睹这种情况后创办茉莉能源公司的：我们中的一些人曾在能源初创企业工作过，另一些人看着父母安装太阳能设备，却从未申请过一个REC。我们的平台：我们的平台：使用人工智能从您的太阳能文件中提取元数据，并将您的系统自动注册到正确的注册表中；连接到您的逆变器，以提交发电数据并验证 REC 资格；通过合作伙伴列出待售 REC，跟踪销售过程并发放付款--所有这些都通过一个仪表板完成。<p>该领域非常适合自动化和 LLM--不是为了生成文本，而是为了（1）构建非结构化文档，（2）与没有 API 的传统政府网站进行交互，以及（3）处理重复的官僚语言。<p>需要明确的是，我们并不是要 "压榨公共资金 "或不公平地利用该系统。REC 销售发生在自愿和合规市场中（通常由企业买家和公用事业公司提供资金，而非纳税人）。茉莉花不会创造或夸大激励机制，它只是帮助人们申请已经存在但难以获得的激励机制。我们正在提高可再生能源证市场的效率。<p>可再生能源证一直是推动电网去碳化最有效、最广泛采用的激励系统之一。<p>该产品现已面向 PJM、M-RETS 和 ERCOT 地区（更多地区即将推出）的太阳能所有者上线。如果您已经拥有太阳能，您可以上传您的文档，并在<a href="https:&#x2F;&#x2F;assets.jasmine.energy">https:&#x2F;&#x2F;assets.jasmine.energy</a>开始流程。<p>我们非常欢迎来自社区的反馈--产品、市场或您认为我们应该关注的任何边缘案例。当然，我们也很乐意回答任何问题！
2025-04-17 18:13:25.050 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 启动 HN：Jasmine（YC S22）--太阳能的 REC 合规和付款自动化
2025-04-17 18:13:25.055 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705065
2025-04-17 18:13:25.068 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 42, 分数: 39
2025-04-17 18:13:25.069 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:13:25.069 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:13:25.069 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77c3dbcd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:13:25.070 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-14, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:13:25.070 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-14, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:25.280 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-14, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:25.280 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77c3dbcd] [f2b988be-14] Response 200 OK
2025-04-17 18:13:25.280 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:25.281 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-14, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:25.281 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:13:25.282 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:13:25.282 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:13:25.283 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:13:25.288 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710761
2025-04-17 18:13:25.289 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:13:25.289 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求："Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:13:25.290 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:25.290 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:25.290 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href="https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system" rel="nofollow">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href="https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll" rel="nofollow">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href="https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>
2025-04-17 18:13:25.290 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:25.290 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [33e0a88] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:25.291 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74bcd3a] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:25.291 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-7, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:25.291 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-19, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:25.395 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-12, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:25.396 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cdce4d6] [785682b2-12] Response 200 OK
2025-04-17 18:13:25.396 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-12, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:25.396 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=他为什么要冒这样的风险？我和我的审查员}]}
2025-04-17 18:13:25.397 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: 'Why would he take such a risk?' My censor and me -> 他为什么要冒这样的风险？我和我的审查员
2025-04-17 18:13:25.397 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 他为什么要冒这样的风险？我和我的审查员
2025-04-17 18:13:25.398 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714133
2025-04-17 18:13:25.405 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 44, 分数: 16
2025-04-17 18:13:25.405 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:13:25.406 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:13:25.406 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60ef0199] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:13:25.406 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-13, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:13:25.406 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-13, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:25.468 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-12, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:25.469 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [102357d0] [e94c08e9-12] Response 200 OK
2025-04-17 18:13:25.470 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-12, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:25.471 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=科学，无尽的前沿》（1945 年）[pdf］}]}
2025-04-17 18:13:25.471 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Science, the Endless Frontier (1945) [pdf] -> 科学，无尽的前沿》（1945 年）[pdf］
2025-04-17 18:13:25.471 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 科学，无尽的前沿》（1945 年）[pdf］
2025-04-17 18:13:25.476 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705796
2025-04-17 18:13:25.485 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 45, 分数: 98
2025-04-17 18:13:25.485 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:13:25.486 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:13:25.486 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [380f878c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:13:25.487 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-24, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:13:25.487 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-24, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:25.617 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-13, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:25.618 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60ef0199] [363f83af-13] Response 200 OK
2025-04-17 18:13:25.618 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:25.619 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-13, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:25.620 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:13:25.620 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:13:25.621 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:13:25.621 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:13:25.626 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711227
2025-04-17 18:13:25.627 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:13:25.628 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:13:25.628 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:25.628 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f7037d5] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:25.628 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-13, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:25.692 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-24, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:25.693 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [380f878c] [18f2c40b-24] Response 200 OK
2025-04-17 18:13:25.693 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:25.693 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-24, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:25.694 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:13:25.694 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:13:25.694 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:13:25.695 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:13:25.698 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705144
2025-04-17 18:13:25.699 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:13:25.699 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:13:25.699 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:25.699 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:25.699 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href="https:&#x2F;&#x2F;unikraft.cloud&#x2F;" rel="nofollow">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd
2025-04-17 18:13:25.699 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:25.700 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7684ab71] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:25.701 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-13, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:25.701 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d31ad73] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:25.831 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-7, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:25.832 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [33e0a88] [aaa59705-7] Response 200 OK
2025-04-17 18:13:25.833 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-7, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:25.834 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text="动物馆"：实验室动物饲养员偶然发现一个秘密 [小说]}]}
2025-04-17 18:13:25.834 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction] -> "动物馆"：实验室动物饲养员偶然发现一个秘密 [小说]
2025-04-17 18:13:26.442 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-13, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:26.443 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f7037d5] [785682b2-13] Response 200 OK
2025-04-17 18:13:26.444 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-13, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:26.445 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=微软研究人员开发出可在 CPU 上运行的超高效人工智能模型}]}
2025-04-17 18:13:26.445 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs -> 微软研究人员开发出可在 CPU 上运行的超高效人工智能模型
2025-04-17 18:13:26.445 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 微软研究人员开发出可在 CPU 上运行的超高效人工智能模型
2025-04-17 18:13:26.450 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711227
2025-04-17 18:13:26.460 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 47, 分数: 127
2025-04-17 18:13:26.460 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:13:26.461 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:13:26.461 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [67d3fa04] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:13:26.461 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-15, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:13:26.462 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-15, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:26.474 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [607bd5d3-1, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:26.667 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-15, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:26.668 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [67d3fa04] [f2b988be-15] Response 200 OK
2025-04-17 18:13:26.668 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:26.669 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-15, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:26.670 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:13:26.670 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:13:26.670 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:13:26.671 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:13:26.674 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43679831
2025-04-17 18:13:26.675 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Four Kinds of Optimisation (2023)
2025-04-17 18:13:26.675 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Four Kinds of Optimisation (2023)
2025-04-17 18:13:26.675 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:26.675 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d7279f7] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:26.675 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-8, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:26.792 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-13, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:26.792 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7684ab71] [e94c08e9-13] Response 200 OK
2025-04-17 18:13:26.794 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-13, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:26.795 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=显示 HN：我们在统一内核（开放源码软件 Apache 2.0）上安装了 Chromium}]}
2025-04-17 18:13:26.795 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0) -> 显示 HN：我们在统一内核（开放源码软件 Apache 2.0）上安装了 Chromium
2025-04-17 18:13:26.860 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-19, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:26.861 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74bcd3a] [4066c1c6-19] Response 200 OK
2025-04-17 18:13:26.861 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-19, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:26.862 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=我想HN的朋友们会喜欢我写的这篇关于大学实验动物饲养员的故事。在报道有关科学的文章时，作为一名普通的生物学观察者，我对前沿生物医学研究的热情与这种研究经常涉及饲养动物以便让它们染上疾病并杀死它们的事实之间的矛盾一直困扰着我。<p>在大流行病期间，我在撰写一篇关于免疫系统的文章时，这种反差给我留下了最深刻的印象。[1] 与我交谈的一位科学家告诉我，他把仓鼠放在保温盘上，轻轻地把它们抱起来--总之，对它们关怀备至--然后为它们的死亡感到悲痛。当然，了解科维虫感染时的免疫反应是一项有意义的事业。<p>2023年，当我读到这篇文章[2]时，我得到了另一个更直接的启发：<p>&gt; <i>除了Sions所经历的症状外，那些处理实验动物的人可能会面临失眠、慢性身体疾病、僵尸般的缺乏同情心，在极端情况下，还会出现严重的抑郁、药物滥用和自杀念头。根据最近的研究，多达十分之九的从业人员会在职业生涯的某个阶段患上 "同情疲劳症"，这一比例是医院重症监护室工作人员的两倍多。这也是动物护理人员辞职的主要原因之一。</i><p>这给我留下了深刻的印象，同时也为我塑造了一个人物形象：被人遗忘的、有些悲惨的活体动物园工作人员。<p>这个故事显然对事实进行了许多自由发挥--它是虚构的--但我也试图将它建立在现实的基础上，而那些你可能会认为是我编造的东西（断头台、第一段中疯狂的VR球体），我并没有编造。<p>希望你喜欢！如果不出意外，我希望你会喜欢我的朋友本-史密斯（Ben Smith）[3]绘制的插图：<a href="https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system" rel="nofollow">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]：<a href="https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll" rel="nofollow">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]：<a href="https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>。}]}
2025-04-17 18:13:26.862 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href="https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system" rel="nofollow">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href="https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll" rel="nofollow">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href="https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a> -> 我想HN的朋友们会喜欢我写的这篇关于大学实验动物饲养员的故事。在报道有关科学的文章时，作为一名普通的生物学观察者，我对前沿生物医学研究的热情与这种研究经常涉及饲养动物以便让它们染上疾病并杀死它们的事实之间的矛盾一直困扰着我。<p>在大流行病期间，我在撰写一篇关于免疫系统的文章时，这种反差给我留下了最深刻的印象。[1] 与我交谈的一位科学家告诉我，他把仓鼠放在保温盘上，轻轻地把它们抱起来--总之，对它们关怀备至--然后为它们的死亡感到悲痛。当然，了解科维虫感染时的免疫反应是一项有意义的事业。<p>2023年，当我读到这篇文章[2]时，我得到了另一个更直接的启发：<p>&gt; <i>除了Sions所经历的症状外，那些处理实验动物的人可能会面临失眠、慢性身体疾病、僵尸般的缺乏同情心，在极端情况下，还会出现严重的抑郁、药物滥用和自杀念头。根据最近的研究，多达十分之九的从业人员会在职业生涯的某个阶段患上 "同情疲劳症"，这一比例是医院重症监护室工作人员的两倍多。这也是动物护理人员辞职的主要原因之一。</i><p>这给我留下了深刻的印象，同时也为我塑造了一个人物形象：被人遗忘的、有些悲惨的活体动物园工作人员。<p>这个故事显然对事实进行了许多自由发挥--它是虚构的--但我也试图将它建立在现实的基础上，而那些你可能会认为是我编造的东西（断头台、第一段中疯狂的VR球体），我并没有编造。<p>希望你喜欢！如果不出意外，我希望你会喜欢我的朋友本-史密斯（Ben Smith）[3]绘制的插图：<a href="https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system" rel="nofollow">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]：<a href="https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll" rel="nofollow">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]：<a href="https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;" rel="nofollow">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>。
2025-04-17 18:13:26.863 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: "动物馆"：实验室动物饲养员偶然发现一个秘密 [小说]
2025-04-17 18:13:26.865 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710761
2025-04-17 18:13:26.872 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 46, 分数: 44
2025-04-17 18:13:26.873 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:13:26.873 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:13:26.873 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20d9876a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:13:26.874 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-14, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:13:26.874 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-14, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:27.085 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-14, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:27.086 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20d9876a] [363f83af-14] Response 200 OK
2025-04-17 18:13:27.086 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:27.086 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-14, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:27.087 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:13:27.087 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:13:27.087 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:13:27.088 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:13:27.091 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704853
2025-04-17 18:13:27.092 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:13:27.093 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - 翻译请求：Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:13:27.093 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:27.094 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ef3878b] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:27.094 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-14, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:27.320 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-8, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:27.321 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d7279f7] [aaa59705-8] Response 200 OK
2025-04-17 18:13:27.322 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-8, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:27.323 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=四种优化（2023 年）}]}
2025-04-17 18:13:27.323 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Four Kinds of Optimisation (2023) -> 四种优化（2023 年）
2025-04-17 18:13:27.323 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 四种优化（2023 年）
2025-04-17 18:13:27.325 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43679831
2025-04-17 18:13:27.332 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 49, 分数: 38
2025-04-17 18:13:27.900 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-14, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:27.900 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ef3878b] [785682b2-14] Response 200 OK
2025-04-17 18:13:27.902 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-14, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:27.902 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=赫伯：功能强大、无缝的 HTML 感知 ERB 解析和工具}]}
2025-04-17 18:13:27.903 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Herb: Powerful and seamless HTML-aware ERB parsing and tooling -> 赫伯：功能强大、无缝的 HTML 感知 ERB 解析和工具
2025-04-17 18:13:27.903 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 赫伯：功能强大、无缝的 HTML 感知 ERB 解析和工具
2025-04-17 18:13:27.908 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704853
2025-04-17 18:13:27.919 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 50, 分数: 110
2025-04-17 18:13:28.020 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [607bd5d3-1, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:28.021 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d31ad73] [607bd5d3-1] Response 200 OK
2025-04-17 18:13:28.022 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [607bd5d3-1, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:28.023 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=我们一直在构建基础架构，以便为人工智能代理安装浏览器。最初，我们将其构建为运行 Chromium 的温暖 Docker 容器池[0]，并提供：<p>- Chrome DevTools 协议（用于 Playwright&#x2F;Puppeteer）<p>- noVNC（用于实时查看）<p>我们关注 unikernel 空间已有一段时间，因此决定看看能否将我们的镜像放到其中。我们选择了 Unikraft Cloud[1]。它的表现如下：<p>- 启动时间：10-20ms（相比之下，Docker 容器的启动时间约为 5s）<p>- 空闲时的 CPU&#x2F;内存消耗接近 0<p>- 激活时仍有约 8GB 内存（headful Chromium）<p>潜在用例：<p>- 长期运行任务期间的待机模式：unikernels 可在 X 秒不活动后休眠，从而降低时钟时间成本<p>- 会话重用：Auth&#x2F;会话 cookie 可持续数小时&#x2F;天。基本上，只要 cookie 有效<p>- 冷启动速度：适合低延迟、基于事件的处理<p>- 我们已将其开源为 Apache 2.0！欢迎分叉或提交问题&#x2F; PR。www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href="https:&#x2F;&#x2F;unikraft.cloud&#x2F;" rel="nofollow">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] 感谢 Unikraft 云团队 @fhuici @nderjung @razvandeax 帮助我们解决这个问题（我们没有任何关联）<p>[3] (OPs) @rgarcia @juecd}]}
2025-04-17 18:13:28.024 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href="https:&#x2F;&#x2F;unikraft.cloud&#x2F;" rel="nofollow">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd -> 我们一直在构建基础架构，以便为人工智能代理安装浏览器。最初，我们将其构建为运行 Chromium 的温暖 Docker 容器池[0]，并提供：<p>- Chrome DevTools 协议（用于 Playwright&#x2F;Puppeteer）<p>- noVNC（用于实时查看）<p>我们关注 unikernel 空间已有一段时间，因此决定看看能否将我们的镜像放到其中。我们选择了 Unikraft Cloud[1]。它的表现如下：<p>- 启动时间：10-20ms（相比之下，Docker 容器的启动时间约为 5s）<p>- 空闲时的 CPU&#x2F;内存消耗接近 0<p>- 激活时仍有约 8GB 内存（headful Chromium）<p>潜在用例：<p>- 长期运行任务期间的待机模式：unikernels 可在 X 秒不活动后休眠，从而降低时钟时间成本<p>- 会话重用：Auth&#x2F;会话 cookie 可持续数小时&#x2F;天。基本上，只要 cookie 有效<p>- 冷启动速度：适合低延迟、基于事件的处理<p>- 我们已将其开源为 Apache 2.0！欢迎分叉或提交问题&#x2F; PR。www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href="https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href="https:&#x2F;&#x2F;unikraft.cloud&#x2F;" rel="nofollow">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] 感谢 Unikraft 云团队 @fhuici @nderjung @razvandeax 帮助我们解决这个问题（我们没有任何关联）<p>[3] (OPs) @rgarcia @juecd
2025-04-17 18:13:28.024 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 显示 HN：我们在统一内核（开放源码软件 Apache 2.0）上安装了 Chromium
2025-04-17 18:13:28.029 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705144
2025-04-17 18:13:28.040 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 48, 分数: 115
2025-04-17 18:13:28.040 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:28.041 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:13:33.701 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-1, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:13:33.701 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-1, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:33.889 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-1, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:13:33.889 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-1, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:33.906 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-1, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:33.906 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [565251eb] [dd89a227-1] Response 200 OK
2025-04-17 18:13:33.906 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:33.907 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-1, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:33.907 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":190,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43714517,43712692,43713112,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":385,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:13:33.907 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":190,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43714517,43712692,43713112,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":385,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:13:33.908 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:13:33.908 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:13:33.914 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:13:33.924 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 3, 分数: 385
2025-04-17 18:13:33.924 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:13:33.924 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:13:33.925 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [a6d9f7d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:13:33.925 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-25, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:13:33.925 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-25, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:33.958 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-1, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:13:33.958 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-1, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:34.120 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-1, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.121 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [44db549c] [a964096b-1] Response 200 OK
2025-04-17 18:13:34.121 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.121 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-1, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:34.121 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":3,"id":43714594,"kids":[43714858,43714794,43714790],"score":15,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:13:34.121 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":3,"id":43714594,"kids":[43714858,43714794,43714790],"score":15,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:13:34.121 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:13:34.121 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:13:34.124 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:13:34.127 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-25, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.127 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [a6d9f7d] [18f2c40b-25] Response 200 OK
2025-04-17 18:13:34.127 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.128 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-25, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:34.128 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":4,"id":43714004,"kids":[43714642],"score":30,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:13:34.128 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":4,"id":43714004,"kids":[43714642],"score":30,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:13:34.128 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:13:34.128 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:13:34.130 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:13:34.131 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 15
2025-04-17 18:13:34.131 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:13:34.131 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:13:34.132 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b88efa3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:13:34.132 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-16, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:13:34.132 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-16, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:34.133 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 5, 分数: 30
2025-04-17 18:13:34.133 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:13:34.133 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:13:34.133 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c05fe43] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:13:34.134 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-15, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:13:34.134 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-15, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:34.161 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-1, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.161 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e546cdf] [4dd22e8a-1] Response 200 OK
2025-04-17 18:13:34.161 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.161 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-1, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:34.161 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:13:34.161 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:13:34.162 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:13:34.162 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:13:34.164 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:13:34.166 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 86
2025-04-17 18:13:34.166 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:13:34.166 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:13:34.166 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e092d3e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:13:34.167 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-2, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:13:34.167 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-2, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:34.335 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-16, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.335 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b88efa3] [f2b988be-16] Response 200 OK
2025-04-17 18:13:34.335 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.336 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-16, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:34.336 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714783,43714252],"score":49,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:13:34.336 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714783,43714252],"score":49,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:13:34.336 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:13:34.336 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:13:34.339 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:13:34.344 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-15, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.344 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c05fe43] [363f83af-15] Response 200 OK
2025-04-17 18:13:34.344 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.344 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-15, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:34.344 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":2,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:13:34.344 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":2,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:13:34.344 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:13:34.344 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:13:34.345 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 6, 分数: 49
2025-04-17 18:13:34.345 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:13:34.345 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:13:34.345 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [16db7d79] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:13:34.346 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-2, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:13:34.346 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-2, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:34.346 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:13:34.347 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 7, 分数: 7
2025-04-17 18:13:34.347 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:13:34.348 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:13:34.348 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15f280d9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:13:34.348 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-26, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:13:34.348 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-26, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:34.369 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-2, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.370 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e092d3e] [dd89a227-2] Response 200 OK
2025-04-17 18:13:34.370 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.370 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-2, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:34.371 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":3,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:13:34.371 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":3,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:13:34.371 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:13:34.371 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:13:34.374 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714619
2025-04-17 18:13:34.374 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:13:34.374 [reactor-http-nio-10] INFO  c.e.h.service.TranslationService - 翻译请求：Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:13:34.374 [reactor-http-nio-10] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:34.375 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49b38060] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:34.375 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-14, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:34.551 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-26, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.551 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15f280d9] [18f2c40b-26] Response 200 OK
2025-04-17 18:13:34.551 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.552 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-26, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:34.552 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43714052,43708229,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":422,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:13:34.552 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43714052,43708229,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":422,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:13:34.553 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:13:34.553 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:13:34.557 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:13:34.562 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 10, 分数: 422
2025-04-17 18:13:34.579 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-2, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:34.579 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [16db7d79] [a964096b-2] Response 200 OK
2025-04-17 18:13:34.579 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:34.579 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-2, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:34.579 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":39,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43676796,43714140],"score":44,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:13:34.580 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":39,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43676796,43714140],"score":44,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:13:34.580 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:13:34.580 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:13:34.583 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:13:34.590 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 9, 分数: 44
2025-04-17 18:13:34.949 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-14, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:34.950 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49b38060] [e94c08e9-14] Response 200 OK
2025-04-17 18:13:34.950 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-14, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:34.950 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=日本 "最弱武士军阀 "为何至今受人敬仰}]}
2025-04-17 18:13:34.951 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day -> 日本 "最弱武士军阀 "为何至今受人敬仰
2025-04-17 18:13:34.951 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 日本 "最弱武士军阀 "为何至今受人敬仰
2025-04-17 18:13:34.953 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714619
2025-04-17 18:13:34.957 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 8, 分数: 3
2025-04-17 18:13:34.957 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:34.957 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:13:36.973 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:13:36.975 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:13:36.976 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c4a514b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:13:36.976 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:13:36.977 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-2, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:13:36.978 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:13:36.978 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-2, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:36.978 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [228daab2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:13:36.979 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:13:36.979 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-17, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:13:36.980 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-17, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:36.980 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:13:36.981 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [26b23a3b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:13:36.982 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-16, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:13:36.982 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-16, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.180 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-2, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.181 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c4a514b] [4dd22e8a-2] Response 200 OK
2025-04-17 18:13:37.182 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.182 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-2, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.183 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":51,"id":43679906,"kids":[43713172,43713565,43712651,43712793,43714072,43713518,43712753,43712785],"score":114,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:13:37.183 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":51,"id":43679906,"kids":[43713172,43713565,43712651,43712793,43714072,43713518,43712753,43712785],"score":114,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:13:37.184 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-17, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.184 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:13:37.184 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [228daab2] [f2b988be-17] Response 200 OK
2025-04-17 18:13:37.184 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:13:37.185 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.186 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-17, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.186 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:13:37.187 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:13:37.187 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:13:37.188 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:13:37.191 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:13:37.191 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-16, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.193 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:13:37.193 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [26b23a3b] [363f83af-16] Response 200 OK
2025-04-17 18:13:37.193 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.194 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-16, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.195 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:13:37.195 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:13:37.195 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:13:37.195 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:13:37.195 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 12, 分数: 1
2025-04-17 18:13:37.196 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:13:37.196 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:13:37.197 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20f8922] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:13:37.197 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:13:37.197 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-3, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:13:37.197 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-3, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.200 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 11, 分数: 114
2025-04-17 18:13:37.200 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:13:37.200 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:13:37.200 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3460c30d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:13:37.200 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-27, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:13:37.201 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-27, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.202 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 13, 分数: 20
2025-04-17 18:13:37.202 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:13:37.202 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:13:37.202 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b03d78c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:13:37.202 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-3, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:13:37.202 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-3, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.397 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-3, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.397 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20f8922] [dd89a227-3] Response 200 OK
2025-04-17 18:13:37.397 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.397 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-3, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.398 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43714841,43710093,43711158,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43714244,43713807,43708649,43712178,43709844,43711413,43709527,43711717,43714266,43711165,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":437,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:13:37.398 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43714841,43710093,43711158,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43714244,43713807,43708649,43712178,43709844,43711413,43709527,43711717,43714266,43711165,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":437,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:13:37.398 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:13:37.398 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:13:37.401 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:13:37.407 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 14, 分数: 437
2025-04-17 18:13:37.407 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:13:37.408 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:13:37.408 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2205f3d2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:13:37.408 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-18, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:13:37.408 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-18, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.410 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-27, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.410 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3460c30d] [18f2c40b-27] Response 200 OK
2025-04-17 18:13:37.410 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.411 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-27, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:37.411 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43714056,43711522,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":154,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:13:37.411 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43714056,43711522,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":154,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:13:37.411 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:13:37.412 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:13:37.414 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:13:37.420 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 15, 分数: 154
2025-04-17 18:13:37.420 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714041
2025-04-17 18:13:37.420 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714041.json
2025-04-17 18:13:37.420 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [ed9c1b7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714041.json
2025-04-17 18:13:37.420 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-3, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714041.json, method=GET}
2025-04-17 18:13:37.420 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-3, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.432 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-3, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.432 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b03d78c] [a964096b-3] Response 200 OK
2025-04-17 18:13:37.432 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.432 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-3, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.433 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":1,"id":43678144,"kids":[43678721],"score":15,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:13:37.433 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":1,"id":43678144,"kids":[43678721],"score":15,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:13:37.433 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:13:37.433 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:13:37.434 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:13:37.440 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 16, 分数: 15
2025-04-17 18:13:37.440 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:13:37.441 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:13:37.441 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ce836ae] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:13:37.441 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-17, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:13:37.442 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-17, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.612 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-18, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.612 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2205f3d2] [f2b988be-18] Response 200 OK
2025-04-17 18:13:37.613 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.613 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-18, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.613 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":578,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43714668,43708319,43710859,43708992,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43713637,43712127,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":470,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:13:37.614 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":578,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43714668,43708319,43710859,43708992,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43713637,43712127,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":470,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:13:37.614 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:13:37.615 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:13:37.619 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:13:37.621 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-3, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.621 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [ed9c1b7] [4dd22e8a-3] Response 200 OK
2025-04-17 18:13:37.621 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.622 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-3, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.622 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"BerislavLopac","descendants":39,"id":43714041,"kids":[43714776,43714867,43714333,43714637,43714569,43714234],"score":31,"time":1744875248,"title":"The Halting Problem is a terrible example of NP-Harder","type":"story","url":"https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/"}
2025-04-17 18:13:37.622 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"BerislavLopac","descendants":39,"id":43714041,"kids":[43714776,43714867,43714333,43714637,43714569,43714234],"score":31,"time":1744875248,"title":"The Halting Problem is a terrible example of NP-Harder","type":"story","url":"https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/"}
2025-04-17 18:13:37.622 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714041, by=BerislavLopac, title=The Halting Problem is a terrible example of NP-Harder, url=https://buttondown.com/hillelwayne/archive/the-halting-problem-is-a-terrible-example-of-np/, type=story, time=1744875248
2025-04-17 18:13:37.622 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714041, 标题: The Halting Problem is a terrible example of NP-Harder
2025-04-17 18:13:37.625 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714041
2025-04-17 18:13:37.627 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 17, 分数: 470
2025-04-17 18:13:37.627 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:13:37.628 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:13:37.628 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a7b0a09] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:13:37.629 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-4, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:13:37.629 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-4, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:37.631 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714041, 排名: 18, 分数: 31
2025-04-17 18:13:37.651 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-17, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.651 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ce836ae] [363f83af-17] Response 200 OK
2025-04-17 18:13:37.651 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.651 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-17, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.651 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:13:37.651 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:13:37.652 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:13:37.652 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:13:37.654 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:13:37.665 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 19, 分数: 14
2025-04-17 18:13:37.832 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-4, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:37.832 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a7b0a09] [dd89a227-4] Response 200 OK
2025-04-17 18:13:37.833 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:37.834 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-4, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:37.834 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":2,"id":43713140,"kids":[43714602],"score":20,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:13:37.835 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":2,"id":43713140,"kids":[43714602],"score":20,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:13:37.835 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:13:37.836 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:13:37.837 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:13:37.844 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 20, 分数: 20
2025-04-17 18:13:37.844 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:37.844 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:13:38.056 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714125
2025-04-17 18:13:38.058 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:13:38.059 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [201261ca] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:13:38.060 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:13:38.061 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-28, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714125.json, method=GET}
2025-04-17 18:13:38.061 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-28, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:38.061 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:13:38.062 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ed58bb8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:13:38.062 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:13:38.063 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-4, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:13:38.063 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:13:38.063 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2aea0aba] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:13:38.063 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-4, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:38.064 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-19, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:13:38.064 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-19, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:38.265 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-28, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:38.265 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [201261ca] [18f2c40b-28] Response 200 OK
2025-04-17 18:13:38.266 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:38.267 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-28, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:38.267 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"thunderbong","descendants":1,"id":43714125,"kids":[43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:13:38.268 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"thunderbong","descendants":1,"id":43714125,"kids":[43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:13:38.268 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-19, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:38.268 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714125, by=thunderbong, title=How the Merchants of Ifriqiya Coded Commerce Before Silicon, url=https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af, type=story, time=1744876083
2025-04-17 18:13:38.269 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2aea0aba] [f2b988be-19] Response 200 OK
2025-04-17 18:13:38.269 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714125, 标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:13:38.269 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:38.271 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-19, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:38.271 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":17,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:13:38.272 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":17,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:13:38.272 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:13:38.272 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:13:38.277 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714125
2025-04-17 18:13:38.277 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714269
2025-04-17 18:13:38.278 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:13:38.278 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:13:38.278 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:13:38.278 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：Bring Back RSS Feeds to Browsers
2025-04-17 18:13:38.278 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:38.278 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:38.278 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [187e4cb0] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:38.278 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4580098a] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:38.279 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-20, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:38.279 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-9, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:38.294 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-4, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:38.294 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ed58bb8] [a964096b-4] Response 200 OK
2025-04-17 18:13:38.294 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:38.294 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-4, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:38.294 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:13:38.294 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:13:38.295 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:13:38.295 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:13:38.298 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43706118
2025-04-17 18:13:38.299 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:13:38.299 [reactor-http-nio-9] INFO  c.e.h.service.TranslationService - 翻译请求：Future Chips Will Be Hotter Than Ever
2025-04-17 18:13:38.299 [reactor-http-nio-9] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:38.299 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54590f5c] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:38.299 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-15, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:38.728 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-20, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:38.728 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [187e4cb0] [4066c1c6-20] Response 200 OK
2025-04-17 18:13:38.729 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-20, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:38.729 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=将 RSS 源带回浏览器}]}
2025-04-17 18:13:38.729 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Bring Back RSS Feeds to Browsers -> 将 RSS 源带回浏览器
2025-04-17 18:13:38.729 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 将 RSS 源带回浏览器
2025-04-17 18:13:38.731 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714269
2025-04-17 18:13:38.737 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 53, 分数: 17
2025-04-17 18:13:38.737 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:13:38.737 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:13:38.737 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [148b688a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:13:38.738 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-4, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:13:38.738 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-4, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:38.756 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-9, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:38.756 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4580098a] [aaa59705-9] Response 200 OK
2025-04-17 18:13:38.757 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-9, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:38.757 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=伊夫里基亚商人如何在硅谷之前编码商业}]}
2025-04-17 18:13:38.757 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: How the Merchants of Ifriqiya Coded Commerce Before Silicon -> 伊夫里基亚商人如何在硅谷之前编码商业
2025-04-17 18:13:38.757 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 伊夫里基亚商人如何在硅谷之前编码商业
2025-04-17 18:13:38.757 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-15, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:38.758 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54590f5c] [785682b2-15] Response 200 OK
2025-04-17 18:13:38.758 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-15, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:38.759 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=未来芯片将比以往更热}]}
2025-04-17 18:13:38.759 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714125
2025-04-17 18:13:38.759 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Future Chips Will Be Hotter Than Ever -> 未来芯片将比以往更热
2025-04-17 18:13:38.760 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 未来芯片将比以往更热
2025-04-17 18:13:38.762 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43706118
2025-04-17 18:13:38.765 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714125, 排名: 51, 分数: 9
2025-04-17 18:13:38.765 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:13:38.766 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:13:38.766 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [120ac7d3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:13:38.767 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 52, 分数: 59
2025-04-17 18:13:38.767 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713814
2025-04-17 18:13:38.767 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:13:38.767 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fab5f0d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:13:38.768 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-18, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:13:38.768 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-5, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713814.json, method=GET}
2025-04-17 18:13:38.768 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-18, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:38.768 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-5, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:38.942 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-4, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:38.942 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [148b688a] [4dd22e8a-4] Response 200 OK
2025-04-17 18:13:38.943 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:38.943 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-4, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:38.944 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:13:38.944 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:13:38.945 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:13:38.945 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:13:38.951 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710986
2025-04-17 18:13:38.952 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:13:38.952 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:13:38.952 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:38.953 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [76c95a96] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:38.953 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [607bd5d3-2, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:38.969 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-5, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:38.970 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fab5f0d] [dd89a227-5] Response 200 OK
2025-04-17 18:13:38.970 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:38.970 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-5, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:38.970 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:13:38.971 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:13:38.971 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713814, by=yomaytk, title=Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator, url=https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39, type=story, time=1744872494
2025-04-17 18:13:38.971 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713814, 标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:13:38.973 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713814
2025-04-17 18:13:38.975 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:13:38.975 [reactor-http-nio-10] INFO  c.e.h.service.TranslationService - 翻译请求：Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:13:38.975 [reactor-http-nio-10] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:38.975 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:38.975 [reactor-http-nio-10] INFO  c.e.h.service.TranslationService - 翻译请求：This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href="https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!
2025-04-17 18:13:38.975 [reactor-http-nio-10] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:38.976 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [165c974] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:38.976 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e94dd4b] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:38.976 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-15, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:38.976 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-21, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:38.985 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-18, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:38.985 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [120ac7d3] [363f83af-18] Response 200 OK
2025-04-17 18:13:38.985 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:38.986 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-18, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:38.986 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:13:38.986 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:13:38.987 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:13:38.987 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:13:38.990 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 18:13:38.997 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 55, 分数: 216
2025-04-17 18:13:38.997 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:13:38.998 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:13:38.998 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e0ba7ac] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:13:38.998 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-20, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:13:38.998 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-20, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:39.203 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-20, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:39.203 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e0ba7ac] [f2b988be-20] Response 200 OK
2025-04-17 18:13:39.203 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:39.204 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-20, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:39.204 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":111,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:13:39.205 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":111,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:13:39.205 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:13:39.205 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:13:39.210 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43703682
2025-04-17 18:13:39.210 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: A Postmortem of a Startup
2025-04-17 18:13:39.211 [reactor-http-nio-5] INFO  c.e.h.service.TranslationService - 翻译请求：A Postmortem of a Startup
2025-04-17 18:13:39.211 [reactor-http-nio-5] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:39.211 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c34b4ce] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:39.211 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-10, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:39.371 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [607bd5d3-2, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:39.372 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [76c95a96] [607bd5d3-2] Response 200 OK
2025-04-17 18:13:39.373 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [607bd5d3-2, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:39.374 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Kotlin 101：类型类速解}]}
2025-04-17 18:13:39.375 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Kotlin 101: Type Classes Quickly Explained -> Kotlin 101：类型类速解
2025-04-17 18:13:39.375 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Kotlin 101：类型类速解
2025-04-17 18:13:39.378 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710986
2025-04-17 18:13:39.391 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 54, 分数: 18
2025-04-17 18:13:39.392 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:13:39.392 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:13:39.393 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [93d7bee] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:13:39.393 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-29, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:13:39.393 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-29, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:39.471 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-15, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:39.471 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [165c974] [e94c08e9-15] Response 200 OK
2025-04-17 18:13:39.472 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-15, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:39.472 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=显示 HN：Elfconv - 从 Linux 应用程序到高性能 WASM 二进制翻译器}]}
2025-04-17 18:13:39.472 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator -> 显示 HN：Elfconv - 从 Linux 应用程序到高性能 WASM 二进制翻译器
2025-04-17 18:13:39.599 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-29, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:39.599 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [93d7bee] [18f2c40b-29] Response 200 OK
2025-04-17 18:13:39.600 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:39.600 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-29, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:39.600 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:13:39.601 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:13:39.601 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:13:39.601 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:13:39.607 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43700633
2025-04-17 18:13:39.609 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:13:39.610 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:13:39.610 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:39.611 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75628ff] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:39.612 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [785682b2-16, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:39.651 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-10, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:39.652 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c34b4ce] [aaa59705-10] Response 200 OK
2025-04-17 18:13:39.653 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-10, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:39.654 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=一家初创企业的后记}]}
2025-04-17 18:13:39.654 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: A Postmortem of a Startup -> 一家初创企业的后记
2025-04-17 18:13:39.655 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 一家初创企业的后记
2025-04-17 18:13:39.658 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43703682
2025-04-17 18:13:39.668 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 57, 分数: 150
2025-04-17 18:13:39.668 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:13:39.668 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:13:39.669 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3adc911] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:13:39.669 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-5, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:13:39.670 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-5, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:39.901 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-5, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:39.902 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3adc911] [a964096b-5] Response 200 OK
2025-04-17 18:13:39.902 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:39.903 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-5, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:39.904 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:13:39.904 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:13:39.905 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:13:39.905 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:13:39.912 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43677122
2025-04-17 18:13:39.913 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:13:39.913 [reactor-http-nio-9] INFO  c.e.h.service.TranslationService - 翻译请求：Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:13:39.913 [reactor-http-nio-9] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:39.913 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [17f7e99e] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:39.914 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [607bd5d3-3, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:39.963 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-21, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:39.964 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e94dd4b] [4066c1c6-21] Response 200 OK
2025-04-17 18:13:39.965 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-21, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:39.966 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=本帖介绍 elfconv，它是一种二进制翻译器，可将 Linux 应用程序转换为 WebAssembly：<a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>最近，性能有了显著提高。在我们的 LINPACK 基准测试中，由 elfconv 从 ELF&#x2F;AArch64 生成的 Wasm 现在的运行性能大约是直接从源代码编译的 Wasm 的 60-80%！此外，与在浏览器中运行的 QEMU 相比，它的性能大约提高了 68 倍。<p>基准测试：<a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>浏览器中的 QEMU：<a href="https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>请尝试一下，并随时提交任何问题或 pull 请求！}]}
2025-04-17 18:13:39.966 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href="https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests! -> 本帖介绍 elfconv，它是一种二进制翻译器，可将 Linux 应用程序转换为 WebAssembly：<a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>最近，性能有了显著提高。在我们的 LINPACK 基准测试中，由 elfconv 从 ELF&#x2F;AArch64 生成的 Wasm 现在的运行性能大约是直接从源代码编译的 Wasm 的 60-80%！此外，与在浏览器中运行的 QEMU 相比，它的性能大约提高了 68 倍。<p>基准测试：<a href="https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>浏览器中的 QEMU：<a href="https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>请尝试一下，并随时提交任何问题或 pull 请求！
2025-04-17 18:13:39.967 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 显示 HN：Elfconv - 从 Linux 应用程序到高性能 WASM 二进制翻译器
2025-04-17 18:13:39.970 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713814
2025-04-17 18:13:39.978 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713814, 排名: 56, 分数: 10
2025-04-17 18:13:39.978 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 18:13:39.979 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:13:39.979 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d42e1bc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:13:39.979 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-5, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 18:13:39.980 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-5, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:40.086 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-16, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:40.087 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75628ff] [785682b2-16] Response 200 OK
2025-04-17 18:13:40.088 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [785682b2-16, L:/10.64.127.133:64698 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:40.089 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=马尔可夫链蒙特卡洛》（Markov Chain Monte Carlo Without All the Bullshit）（2015 年}]}
2025-04-17 18:13:40.089 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Markov Chain Monte Carlo Without All the Bullshit (2015) -> 马尔可夫链蒙特卡洛》（Markov Chain Monte Carlo Without All the Bullshit）（2015 年
2025-04-17 18:13:40.089 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 马尔可夫链蒙特卡洛》（Markov Chain Monte Carlo Without All the Bullshit）（2015 年
2025-04-17 18:13:40.092 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43700633
2025-04-17 18:13:40.098 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 58, 分数: 217
2025-04-17 18:13:40.180 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-5, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:40.181 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d42e1bc] [4dd22e8a-5] Response 200 OK
2025-04-17 18:13:40.181 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:40.181 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-5, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:40.182 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:13:40.182 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:13:40.182 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 18:13:40.182 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:13:40.186 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678909
2025-04-17 18:13:40.188 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:13:40.188 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - 翻译请求：Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:13:40.188 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:13:40.189 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [688b56d4] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:13:40.189 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [e94c08e9-16, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:13:40.416 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [607bd5d3-3, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:40.417 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [17f7e99e] [607bd5d3-3] Response 200 OK
2025-04-17 18:13:40.417 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [607bd5d3-3, L:/10.64.127.133:64716 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:40.418 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=斐波那契哈希算法：被世界遗忘的优化算法}]}
2025-04-17 18:13:40.418 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Fibonacci Hashing: The Optimization That the World Forgot -> 斐波那契哈希算法：被世界遗忘的优化算法
2025-04-17 18:13:40.418 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 斐波那契哈希算法：被世界遗忘的优化算法
2025-04-17 18:13:40.420 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43677122
2025-04-17 18:13:40.428 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 59, 分数: 126
2025-04-17 18:13:40.617 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-16, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:13:40.618 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [688b56d4] [e94c08e9-16] Response 200 OK
2025-04-17 18:13:40.619 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [e94c08e9-16, L:/10.64.127.133:64704 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:13:40.620 [reactor-http-nio-6] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=使用 -fsanitize=undefined 和 Picolibc 的乐趣}]}
2025-04-17 18:13:40.620 [reactor-http-nio-6] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Fun with -fsanitize=undefined and Picolibc -> 使用 -fsanitize=undefined 和 Picolibc 的乐趣
2025-04-17 18:13:40.620 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 使用 -fsanitize=undefined 和 Picolibc 的乐趣
2025-04-17 18:13:40.623 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678909
2025-04-17 18:13:40.629 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 60, 分数: 111
2025-04-17 18:13:40.630 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:40.630 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:13:40.632 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻数量超过最大限制，开始清理...
2025-04-17 18:13:40.638 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 删除 59 条旧新闻
2025-04-17 18:13:41.850 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:13:41.852 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:13:41.852 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b49a006] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:13:41.853 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:13:41.853 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-6, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:13:41.854 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-6, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:41.854 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:13:41.855 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [658e531f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:13:41.855 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:13:41.856 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-19, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:13:41.856 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:13:41.856 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-19, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:41.856 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61b1cb76] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:13:41.857 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-21, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:13:41.857 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-21, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.056 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-6, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.056 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b49a006] [dd89a227-6] Response 200 OK
2025-04-17 18:13:42.056 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.057 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-6, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.057 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43714522,43713972,43714103,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:13:42.057 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43714522,43713972,43714103,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:13:42.057 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:13:42.058 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:13:42.060 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:13:42.061 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-21, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.062 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61b1cb76] [f2b988be-21] Response 200 OK
2025-04-17 18:13:42.062 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.062 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-21, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.062 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":353,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:13:42.062 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":353,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:13:42.063 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:13:42.063 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:13:42.065 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:13:42.065 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-19, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.065 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [658e531f] [363f83af-19] Response 200 OK
2025-04-17 18:13:42.065 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.065 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-19, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.066 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":195,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:13:42.066 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":195,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:13:42.066 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:13:42.066 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:13:42.068 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:13:42.068 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 21, 分数: 124
2025-04-17 18:13:42.068 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:13:42.068 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:13:42.068 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [278a6240] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:13:42.069 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-30, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:13:42.069 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-30, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.070 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 23, 分数: 353
2025-04-17 18:13:42.070 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:13:42.070 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:13:42.070 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [19149e86] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:13:42.071 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-6, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:13:42.071 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-6, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.074 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 22, 分数: 195
2025-04-17 18:13:42.074 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:13:42.074 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:13:42.074 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49e852c2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:13:42.074 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-6, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:13:42.074 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-6, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.272 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-30, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.272 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [278a6240] [18f2c40b-30] Response 200 OK
2025-04-17 18:13:42.272 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.273 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-30, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:42.273 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43712005,43713856,43714657,43712350,43711999,43714281,43714232,43711929,43712661,43711749,43713686,43713460,43712922,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43713380,43712634,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:13:42.273 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43712005,43713856,43714657,43712350,43711999,43714281,43714232,43711929,43712661,43711749,43713686,43713460,43712922,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43713380,43712634,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:13:42.273 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:13:42.273 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:13:42.275 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:13:42.283 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 24, 分数: 331
2025-04-17 18:13:42.283 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:13:42.284 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:13:42.284 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47e80ed1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:13:42.284 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-7, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:13:42.285 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-6, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.285 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-7, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.285 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49e852c2] [4dd22e8a-6] Response 200 OK
2025-04-17 18:13:42.285 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.285 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-6, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.285 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":154,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43714770,43710094,43707582,43706889,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43713542,43705667,43713886,43705658,43705959,43708803,43713665,43710306,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43713025,43706007,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:13:42.285 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":154,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43714770,43710094,43707582,43706889,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43713542,43705667,43713886,43705658,43705959,43708803,43713665,43710306,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43713025,43706007,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:13:42.286 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:13:42.286 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:13:42.287 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:13:42.292 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 26, 分数: 325
2025-04-17 18:13:42.292 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:13:42.292 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:13:42.292 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2274f55c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:13:42.293 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-22, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:13:42.293 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-22, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.301 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-6, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.301 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [19149e86] [a964096b-6] Response 200 OK
2025-04-17 18:13:42.301 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.301 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-6, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.301 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:13:42.301 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:13:42.301 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:13:42.301 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:13:42.303 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:13:42.309 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 25, 分数: 466
2025-04-17 18:13:42.309 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:13:42.309 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:13:42.310 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15586751] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:13:42.310 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-20, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:13:42.310 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-20, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.485 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-7, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.485 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47e80ed1] [dd89a227-7] Response 200 OK
2025-04-17 18:13:42.486 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.486 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-7, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.486 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:13:42.486 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:13:42.486 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:13:42.487 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:13:42.490 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704430
2025-04-17 18:13:42.491 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: CVE Foundation
2025-04-17 18:13:42.491 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: CVE 基金会
2025-04-17 18:13:42.492 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704430
2025-04-17 18:13:42.496 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 27, 分数: 382
2025-04-17 18:13:42.497 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:13:42.497 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:13:42.497 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [770bc535] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:13:42.498 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-31, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:13:42.498 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-31, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:42.498 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-22, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.499 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2274f55c] [f2b988be-22] Response 200 OK
2025-04-17 18:13:42.499 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.499 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-22, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.499 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:13:42.499 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:13:42.499 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:13:42.499 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:13:42.501 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43670921
2025-04-17 18:13:42.502 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:13:42.502 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 两步棋，AlphaGo 和李世石重新定义了未来（2016 年）
2025-04-17 18:13:42.503 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43670921
2025-04-17 18:13:42.507 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 28, 分数: 26
2025-04-17 18:13:42.520 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-20, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.520 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15586751] [363f83af-20] Response 200 OK
2025-04-17 18:13:42.521 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.521 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-20, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:42.521 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43707467,43713915,43712968,43714561,43712935,43713744,43709029,43712158,43707380,43714654,43712010,43707184,43707395,43707982,43708640,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43707712,43713270,43711562,43712997,43707291,43707452,43708585,43706791,43708976,43711044,43711199,43710206,43708974,43708002,43707296,43706920,43706858,43708402,43710557,43708747,43713586,43712501],"score":297,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:13:42.521 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43707467,43713915,43712968,43714561,43712935,43713744,43709029,43712158,43707380,43714654,43712010,43707184,43707395,43707982,43708640,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43707712,43713270,43711562,43712997,43707291,43707452,43708585,43706791,43708976,43711044,43711199,43710206,43708974,43708002,43707296,43706920,43706858,43708402,43710557,43708747,43713586,43712501],"score":297,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:13:42.521 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:13:42.521 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:13:42.523 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705632
2025-04-17 18:13:42.524 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:13:42.524 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 复制黑客新闻的写作风格指纹
2025-04-17 18:13:42.524 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705632
2025-04-17 18:13:42.529 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 29, 分数: 297
2025-04-17 18:13:42.700 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-31, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:42.700 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [770bc535] [18f2c40b-31] Response 200 OK
2025-04-17 18:13:42.700 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:42.701 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-31, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:42.701 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:13:42.702 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:13:42.703 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:13:42.703 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:13:42.710 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678533
2025-04-17 18:13:42.711 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:13:42.712 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 查询引擎：推与拉 (2021)
2025-04-17 18:13:42.714 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678533
2025-04-17 18:13:42.724 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 30, 分数: 86
2025-04-17 18:13:42.725 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:42.725 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:13:48.727 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:13:48.729 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:13:48.730 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [63b0a089] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:13:48.730 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:13:48.731 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-7, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:13:48.731 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-7, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:48.731 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:13:48.732 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d0e75bd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:13:48.733 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:13:48.733 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-7, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:13:48.734 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-7, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:48.734 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:13:48.735 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52198494] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:13:48.736 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-8, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:13:48.736 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-8, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:48.935 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-7, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:48.936 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [63b0a089] [4dd22e8a-7] Response 200 OK
2025-04-17 18:13:48.936 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:48.937 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-7, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:48.937 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":133,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:13:48.937 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":133,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:13:48.937 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:13:48.938 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:13:48.938 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-8, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:48.939 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52198494] [dd89a227-8] Response 200 OK
2025-04-17 18:13:48.939 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:48.939 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-8, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:48.940 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43713671,43707890,43713968,43708015,43711159,43711020,43709949,43712397,43710951,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43712596,43709282,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":503,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:13:48.940 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43713671,43707890,43713968,43708015,43711159,43711020,43709949,43712397,43710951,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43712596,43709282,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":503,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:13:48.940 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:13:48.941 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:13:48.941 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43690828
2025-04-17 18:13:48.942 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43707719
2025-04-17 18:13:48.942 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: eInk Mode: Making web pages easier to read
2025-04-17 18:13:48.943 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 电子墨水模式：让网页更易于阅读
2025-04-17 18:13:48.943 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: OpenAI o3 and o4-mini
2025-04-17 18:13:48.943 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: OpenAI o3 和 o4-mini
2025-04-17 18:13:48.943 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43690828
2025-04-17 18:13:48.944 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43707719
2025-04-17 18:13:48.950 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 33, 分数: 503
2025-04-17 18:13:48.950 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:13:48.950 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:13:48.951 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 31, 分数: 133
2025-04-17 18:13:48.951 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c31b1d4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:13:48.951 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:13:48.951 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-23, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:13:48.951 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-23, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:48.951 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:13:48.952 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ab9d620] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:13:48.952 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-21, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:13:48.952 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-21, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:48.966 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-7, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:48.966 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d0e75bd] [a964096b-7] Response 200 OK
2025-04-17 18:13:48.966 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:48.966 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-7, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:48.966 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":199,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:13:48.966 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":199,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:13:48.967 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:13:48.967 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:13:48.968 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704596
2025-04-17 18:13:48.969 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How Nintendo bled Atari games to death
2025-04-17 18:13:48.969 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 任天堂如何让雅达利游戏血本无归
2025-04-17 18:13:48.969 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704596
2025-04-17 18:13:48.973 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 32, 分数: 199
2025-04-17 18:13:48.973 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:13:48.974 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:13:48.974 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d22274e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:13:48.975 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-32, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:13:48.975 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-32, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:49.157 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-23, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.157 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c31b1d4] [f2b988be-23] Response 200 OK
2025-04-17 18:13:49.157 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.157 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-23, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:49.158 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:13:49.158 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:13:49.158 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:13:49.158 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:13:49.160 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43676254
2025-04-17 18:13:49.161 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Breaking the Llama Community License
2025-04-17 18:13:49.161 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 打破拉玛社区许可证
2025-04-17 18:13:49.161 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43676254
2025-04-17 18:13:49.162 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-21, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.162 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ab9d620] [363f83af-21] Response 200 OK
2025-04-17 18:13:49.162 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.163 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-21, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:49.163 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43714662,43713288,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:13:49.163 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43714662,43713288,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:13:49.163 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:13:49.163 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:13:49.165 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43677862
2025-04-17 18:13:49.165 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:13:49.165 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 拆除伯班克的弗莱电器店
2025-04-17 18:13:49.165 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43677862
2025-04-17 18:13:49.166 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 34, 分数: 133
2025-04-17 18:13:49.166 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:13:49.167 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:13:49.167 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3793392f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:13:49.167 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-8, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:13:49.167 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-8, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:49.169 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 35, 分数: 125
2025-04-17 18:13:49.169 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:13:49.170 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:13:49.170 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2dce0972] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:13:49.170 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-9, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:13:49.170 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-9, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:49.178 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-32, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.178 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d22274e] [18f2c40b-32] Response 200 OK
2025-04-17 18:13:49.178 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.179 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-32, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:49.179 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:13:49.179 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:13:49.179 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:13:49.179 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:13:49.181 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43669540
2025-04-17 18:13:49.181 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:13:49.181 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 从零开始的 Nix 三角数学库
2025-04-17 18:13:49.182 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43669540
2025-04-17 18:13:49.185 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 36, 分数: 43
2025-04-17 18:13:49.185 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:13:49.185 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:13:49.185 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b1a6854] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:13:49.185 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-8, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:13:49.185 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-8, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:49.368 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-8, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.369 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3793392f] [4dd22e8a-8] Response 200 OK
2025-04-17 18:13:49.369 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.370 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-8, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:49.370 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-9, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.370 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43714856,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43705219,43693264,43693384,43707320,43708998,43704834,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:13:49.370 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43714856,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43705219,43693264,43693384,43707320,43708998,43704834,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:13:49.370 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2dce0972] [dd89a227-9] Response 200 OK
2025-04-17 18:13:49.371 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:13:49.371 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.371 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:13:49.371 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-9, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:49.371 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:13:49.371 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:13:49.371 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:13:49.371 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:13:49.373 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705824
2025-04-17 18:13:49.373 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43692677
2025-04-17 18:13:49.374 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: A high-throughput parser for the Zig programming language
2025-04-17 18:13:49.374 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:13:49.374 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Zig 编程语言的高吞吐量解析器
2025-04-17 18:13:49.374 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 美国低估了制造业回流的难度
2025-04-17 18:13:49.374 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705824
2025-04-17 18:13:49.374 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43692677
2025-04-17 18:13:49.379 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 37, 分数: 656
2025-04-17 18:13:49.379 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:13:49.380 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:13:49.380 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5397ff3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:13:49.380 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 38, 分数: 122
2025-04-17 18:13:49.380 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-24, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:13:49.380 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-24, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:49.417 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-8, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.417 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b1a6854] [a964096b-8] Response 200 OK
2025-04-17 18:13:49.418 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.418 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-8, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:49.419 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:13:49.419 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:13:49.420 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:13:49.420 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:13:49.424 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714433
2025-04-17 18:13:49.425 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:13:49.425 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:49.425 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: PolyThink：消除幻觉的多代理人工智能系统
2025-04-17 18:13:49.426 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714433
2025-04-17 18:13:49.432 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 39, 分数: 5
2025-04-17 18:13:49.584 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-24, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:49.584 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5397ff3] [f2b988be-24] Response 200 OK
2025-04-17 18:13:49.584 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:49.585 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-24, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:49.585 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:13:49.585 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:13:49.586 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:13:49.586 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:13:49.589 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43691334
2025-04-17 18:13:49.589 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:13:49.589 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 4chan Sharty 黑客攻击和看门人电子邮件泄露
2025-04-17 18:13:49.590 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43691334
2025-04-17 18:13:49.596 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 40, 分数: 674
2025-04-17 18:13:49.596 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:49.596 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:13:57.609 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:13:57.610 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:13:57.612 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24b35924] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:13:57.612 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:13:57.612 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-22, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:13:57.614 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:13:57.614 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-22, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:57.614 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2dc9424] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:13:57.615 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:13:57.616 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-33, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:13:57.616 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:13:57.617 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-33, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:57.617 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [155d39cb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:13:57.618 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-9, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:13:57.618 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-9, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:57.819 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-33, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:57.819 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2dc9424] [18f2c40b-33] Response 200 OK
2025-04-17 18:13:57.820 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:57.820 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-33, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:57.821 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":158,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:13:57.821 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":158,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:13:57.821 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:13:57.821 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:13:57.823 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-22, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:57.824 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24b35924] [363f83af-22] Response 200 OK
2025-04-17 18:13:57.824 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:57.824 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-22, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:57.824 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:13:57.824 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:13:57.824 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:13:57.824 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43703623
2025-04-17 18:13:57.825 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:13:57.825 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:13:57.825 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 随机微积分导论（2022 年）
2025-04-17 18:13:57.825 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43703623
2025-04-17 18:13:57.826 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705649
2025-04-17 18:13:57.826 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:13:57.827 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 6502 程序员使用的肮脏伎俩（2019 年）
2025-04-17 18:13:57.827 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705649
2025-04-17 18:13:57.830 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 42, 分数: 158
2025-04-17 18:13:57.830 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:13:57.831 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:13:57.831 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1ef2c4ee] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:13:57.831 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-10, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:13:57.831 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-10, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:57.831 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-9, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:57.832 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [155d39cb] [4dd22e8a-9] Response 200 OK
2025-04-17 18:13:57.832 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 41, 分数: 155
2025-04-17 18:13:57.832 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:57.832 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:13:57.832 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-9, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:57.832 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:13:57.832 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:13:57.832 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:13:57.832 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d64d5c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:13:57.832 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:13:57.832 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-9, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:13:57.832 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:13:57.832 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-9, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:57.834 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705065
2025-04-17 18:13:57.835 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:13:57.835 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:57.835 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 启动 HN：Jasmine（YC S22）--太阳能的 REC 合规和付款自动化
2025-04-17 18:13:57.835 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705065
2025-04-17 18:13:57.839 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 43, 分数: 39
2025-04-17 18:13:57.839 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:13:57.840 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:13:57.840 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39d2a92d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:13:57.840 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-25, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:13:57.840 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-25, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:58.032 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-10, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.033 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1ef2c4ee] [dd89a227-10] Response 200 OK
2025-04-17 18:13:58.034 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.034 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-10, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:58.034 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":2,"id":43711393,"kids":[43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:13:58.034 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":2,"id":43711393,"kids":[43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:13:58.035 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:13:58.035 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:13:58.041 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711393
2025-04-17 18:13:58.043 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: The Promise of Rust
2025-04-17 18:13:58.043 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 铁锈的承诺
2025-04-17 18:13:58.044 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-25, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.044 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39d2a92d] [f2b988be-25] Response 200 OK
2025-04-17 18:13:58.044 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711393
2025-04-17 18:13:58.045 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.045 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-25, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:58.046 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":98,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:13:58.046 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":98,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:13:58.047 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:13:58.047 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:13:58.056 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705796
2025-04-17 18:13:58.058 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:13:58.058 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 科学，无尽的前沿》（1945 年）[pdf］
2025-04-17 18:13:58.059 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705796
2025-04-17 18:13:58.059 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 44, 分数: 17
2025-04-17 18:13:58.059 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:13:58.060 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:13:58.060 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [549c5ddd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:13:58.061 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-34, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:13:58.061 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-34, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:58.064 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-9, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.064 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d64d5c] [a964096b-9] Response 200 OK
2025-04-17 18:13:58.064 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.065 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-9, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:58.065 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":16,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:13:58.065 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":16,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:13:58.065 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 46, 分数: 98
2025-04-17 18:13:58.065 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:13:58.065 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:13:58.065 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:13:58.066 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:13:58.066 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18641c8d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:13:58.066 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-23, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:13:58.067 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-23, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:58.067 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714133
2025-04-17 18:13:58.068 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:13:58.068 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 他为什么要冒这样的风险？我和我的审查员
2025-04-17 18:13:58.069 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714133
2025-04-17 18:13:58.073 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 45, 分数: 16
2025-04-17 18:13:58.074 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:13:58.074 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:13:58.074 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1744fcf0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:13:58.075 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-10, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:13:58.075 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-10, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:58.271 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-34, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.272 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [549c5ddd] [18f2c40b-34] Response 200 OK
2025-04-17 18:13:58.272 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.272 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-34, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:13:58.273 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:13:58.273 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:13:58.273 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:13:58.273 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:13:58.277 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-23, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.277 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18641c8d] [363f83af-23] Response 200 OK
2025-04-17 18:13:58.277 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.277 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-23, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:58.278 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:13:58.278 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:13:58.278 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710761
2025-04-17 18:13:58.278 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:13:58.278 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:13:58.280 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:13:58.280 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:58.280 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: "动物馆"：实验室动物饲养员偶然发现一个秘密 [小说]
2025-04-17 18:13:58.282 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710761
2025-04-17 18:13:58.282 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711227
2025-04-17 18:13:58.283 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:13:58.284 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 微软研究人员开发出可在 CPU 上运行的超高效人工智能模型
2025-04-17 18:13:58.284 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711227
2025-04-17 18:13:58.289 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 47, 分数: 44
2025-04-17 18:13:58.289 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:13:58.289 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:13:58.289 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e2faba5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:13:58.290 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 48, 分数: 127
2025-04-17 18:13:58.290 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-11, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:13:58.290 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-10, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.290 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-11, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:13:58.290 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1744fcf0] [4dd22e8a-10] Response 200 OK
2025-04-17 18:13:58.290 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.291 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-10, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:58.291 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:13:58.291 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:13:58.291 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:13:58.291 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:13:58.292 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705144
2025-04-17 18:13:58.293 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:13:58.293 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:13:58.294 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 显示 HN：我们在统一内核（开放源码软件 Apache 2.0）上安装了 Chromium
2025-04-17 18:13:58.294 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705144
2025-04-17 18:13:58.297 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 49, 分数: 115
2025-04-17 18:13:58.493 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-11, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:13:58.493 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e2faba5] [dd89a227-11] Response 200 OK
2025-04-17 18:13:58.494 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:13:58.494 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-11, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:13:58.495 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:13:58.495 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:13:58.496 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:13:58.496 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:13:58.503 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43679831
2025-04-17 18:13:58.504 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Four Kinds of Optimisation (2023)
2025-04-17 18:13:58.505 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 四种优化（2023 年）
2025-04-17 18:13:58.506 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43679831
2025-04-17 18:13:58.512 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 50, 分数: 38
2025-04-17 18:13:58.513 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:13:58.513 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:14:08.521 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:14:08.522 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:14:08.522 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ec3f215] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:14:08.522 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714125
2025-04-17 18:14:08.523 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-26, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:14:08.523 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:14:08.523 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [700413bd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:14:08.523 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-26, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.523 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:14:08.523 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-10, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714125.json, method=GET}
2025-04-17 18:14:08.523 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-10, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.523 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:14:08.524 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [743b9965] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:14:08.524 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-35, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:14:08.524 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-35, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.726 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-35, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:08.727 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [743b9965] [18f2c40b-35] Response 200 OK
2025-04-17 18:14:08.727 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-26, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:08.727 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:08.727 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ec3f215] [f2b988be-26] Response 200 OK
2025-04-17 18:14:08.727 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:08.728 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-35, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:14:08.728 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:14:08.728 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:14:08.728 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-26, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:08.728 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:14:08.729 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:14:08.728 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:14:08.729 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:14:08.729 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:14:08.729 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:14:08.732 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704853
2025-04-17 18:14:08.732 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43706118
2025-04-17 18:14:08.733 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:14:08.733 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:14:08.733 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 赫伯：功能强大、无缝的 HTML 感知 ERB 解析和工具
2025-04-17 18:14:08.733 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 未来芯片将比以往更热
2025-04-17 18:14:08.733 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704853
2025-04-17 18:14:08.733 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43706118
2025-04-17 18:14:08.738 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 53, 分数: 59
2025-04-17 18:14:08.739 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:14:08.739 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 51, 分数: 110
2025-04-17 18:14:08.739 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:14:08.739 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78bac73f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:14:08.739 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:14:08.739 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientConnect - [363f83af-24, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:14:08.740 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:14:08.740 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-24, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.740 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d85a545] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:14:08.740 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-11, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:14:08.740 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-11, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.753 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-10, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:08.753 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [700413bd] [a964096b-10] Response 200 OK
2025-04-17 18:14:08.753 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:08.754 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-10, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:08.754 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"thunderbong","descendants":1,"id":43714125,"kids":[43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:14:08.754 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"thunderbong","descendants":1,"id":43714125,"kids":[43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:14:08.754 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714125, by=thunderbong, title=How the Merchants of Ifriqiya Coded Commerce Before Silicon, url=https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af, type=story, time=1744876083
2025-04-17 18:14:08.755 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714125, 标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:14:08.757 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714125
2025-04-17 18:14:08.758 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:14:08.758 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 伊夫里基亚商人如何在硅谷之前编码商业
2025-04-17 18:14:08.759 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714125
2025-04-17 18:14:08.763 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714125, 排名: 52, 分数: 9
2025-04-17 18:14:08.763 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:14:08.764 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:14:08.764 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5d39a30f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:14:08.764 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [dd89a227-12, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:14:08.764 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-12, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.940 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-11, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:08.941 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d85a545] [4dd22e8a-11] Response 200 OK
2025-04-17 18:14:08.941 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:08.941 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-11, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:08.941 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:14:08.941 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:14:08.941 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:14:08.941 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:14:08.944 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710986
2025-04-17 18:14:08.945 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:14:08.945 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Kotlin 101：类型类速解
2025-04-17 18:14:08.946 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710986
2025-04-17 18:14:08.950 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-24, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:08.950 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78bac73f] [363f83af-24] Response 200 OK
2025-04-17 18:14:08.950 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:08.951 [reactor-http-nio-6] DEBUG r.n.http.client.HttpClientOperations - [363f83af-24, L:/10.64.127.133:64695 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:08.951 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":17,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:14:08.951 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":17,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:14:08.951 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:14:08.951 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:14:08.953 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 55, 分数: 18
2025-04-17 18:14:08.953 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:14:08.953 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714269
2025-04-17 18:14:08.953 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:14:08.954 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69d9e90f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:14:08.954 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:14:08.954 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [f2b988be-27, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:14:08.954 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 将 RSS 源带回浏览器
2025-04-17 18:14:08.954 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-27, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.955 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714269
2025-04-17 18:14:08.958 [reactor-http-nio-6] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 54, 分数: 17
2025-04-17 18:14:08.958 [reactor-http-nio-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713814
2025-04-17 18:14:08.959 [reactor-http-nio-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:14:08.959 [reactor-http-nio-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c8416ef] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:14:08.959 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [18f2c40b-36, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713814.json, method=GET}
2025-04-17 18:14:08.960 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-36, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:08.968 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-12, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:08.968 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5d39a30f] [dd89a227-12] Response 200 OK
2025-04-17 18:14:08.968 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:08.968 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [dd89a227-12, L:/10.64.127.133:64717 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:08.968 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:14:08.969 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:14:08.969 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:14:08.969 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:14:08.971 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43692476
2025-04-17 18:14:08.972 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:14:08.973 [reactor-http-nio-10] INFO  c.e.h.service.TranslationService - 翻译请求：Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:14:08.973 [reactor-http-nio-10] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:14:08.973 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:14:08.973 [reactor-http-nio-10] INFO  c.e.h.service.TranslationService - 翻译请求：Hey HN, we’re building mrge (<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!
2025-04-17 18:14:08.973 [reactor-http-nio-10] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:14:08.973 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41f929c9] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:14:08.974 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [aaa59705-11, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:14:08.974 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e249fa4] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:14:08.974 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4066c1c6-22, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:14:09.157 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-27, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:09.157 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69d9e90f] [f2b988be-27] Response 200 OK
2025-04-17 18:14:09.158 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:09.158 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [f2b988be-27, L:/10.64.127.133:64694 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:09.158 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":111,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:14:09.158 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":111,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:14:09.158 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:14:09.158 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:14:09.160 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43703682
2025-04-17 18:14:09.161 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: A Postmortem of a Startup
2025-04-17 18:14:09.161 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 一家初创企业的后记
2025-04-17 18:14:09.162 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43703682
2025-04-17 18:14:09.162 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-36, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:09.163 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c8416ef] [18f2c40b-36] Response 200 OK
2025-04-17 18:14:09.163 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:09.163 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [18f2c40b-36, L:/10.64.127.133:64598 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:14:09.163 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:14:09.163 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:14:09.163 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713814, by=yomaytk, title=Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator, url=https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39, type=story, time=1744872494
2025-04-17 18:14:09.163 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713814, 标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:14:09.165 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713814
2025-04-17 18:14:09.166 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:14:09.166 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:14:09.166 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 显示 HN：Elfconv - 从 Linux 应用程序到高性能 WASM 二进制翻译器
2025-04-17 18:14:09.166 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713814
2025-04-17 18:14:09.166 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 57, 分数: 150
2025-04-17 18:14:09.166 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:14:09.167 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:14:09.167 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b0893f6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:14:09.167 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [a964096b-11, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:14:09.168 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-11, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:09.171 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713814, 排名: 58, 分数: 10
2025-04-17 18:14:09.172 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:14:09.172 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:14:09.172 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7cd2b88e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:14:09.172 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [4dd22e8a-12, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:14:09.172 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-12, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:14:09.434 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-11, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:09.434 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-12, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:14:09.435 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b0893f6] [a964096b-11] Response 200 OK
2025-04-17 18:14:09.435 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7cd2b88e] [4dd22e8a-12] Response 200 OK
2025-04-17 18:14:09.435 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:09.435 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:14:09.435 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [a964096b-11, L:/10.64.127.133:64718 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:09.435 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4dd22e8a-12, L:/10.64.127.133:64719 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 18:14:09.435 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:14:09.436 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:14:09.435 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:14:09.436 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:14:09.436 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:14:09.436 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:14:09.436 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:14:09.437 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:14:09.439 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43700633
2025-04-17 18:14:09.440 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:14:09.440 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 马尔可夫链蒙特卡洛》（Markov Chain Monte Carlo Without All the Bullshit）（2015 年
2025-04-17 18:14:09.440 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43677122
2025-04-17 18:14:09.440 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43700633
2025-04-17 18:14:09.441 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:14:09.441 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 斐波那契哈希算法：被世界遗忘的优化算法
2025-04-17 18:14:09.441 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43677122
2025-04-17 18:14:09.446 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 59, 分数: 217
2025-04-17 18:14:09.447 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 60, 分数: 126
2025-04-17 18:14:09.530 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-11, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:14:09.530 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41f929c9] [aaa59705-11] Response 200 OK
2025-04-17 18:14:09.531 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [aaa59705-11, L:/10.64.127.133:64705 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:14:09.531 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=启动 HN：mrge.io (YC X25) - 代码审查光标}]}
2025-04-17 18:14:09.532 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Launch HN: mrge.io (YC X25) – Cursor for code review -> 启动 HN：mrge.io (YC X25) - 代码审查光标
2025-04-17 18:14:09.995 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-22, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:14:09.996 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e249fa4] [4066c1c6-22] Response 200 OK
2025-04-17 18:14:09.998 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [4066c1c6-22, L:/10.64.127.133:64607 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:14:09.999 [reactor-http-nio-4] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=嘿，HN，我们正在构建 mrge（<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>），这是一个人工智能代码审查平台，可帮助团队更快地合并代码并减少错误。我们的早期用户包括 Better Auth、Cal.com 和 n8n-团队，他们每天都要处理大量的 PR。<p>以下是演示视频：<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>我们（Allis 和 Paul）是工程师，在上一家初创公司共事时就遇到了这个问题。代码审查很快就成为了我们最大的瓶颈--尤其是当我们开始更多地使用人工智能来编写代码时。我们有更多的 PR 需要审核，人工智能编写的细微错误会在不经意间溜走，而我们（人类）越来越发现自己在没有深入理解变更的情况下就对 PR 盖上橡皮图章。<p>我们正在构建 mrge 来帮助解决这个问题。其工作原理如下：<p>1.通过我们的 Github 应用程序，点击两下即可连接您的 GitHub 仓库（也可选择下载我们的桌面应用程序）。Gitlab 支持正在路线图上！<p>2.人工智能审查：当您打开 PR 时，我们的人工智能会在一个短暂而安全的容器中直接审核您的更改。它不仅能了解该 PR 的上下文，还能了解您的整个代码库，因此它能捕捉模式并直接在更改的行上留下注释。审查完成后，沙箱会被拆除，您的代码也会被删除，出于显而易见的原因，我们不会存储这些代码。 <p>3.人性化的审查工作流程：跳转到我们的 Web 应用程序（它就像 Linear，但适用于 PR）。<p>人工智能审查员的工作方式有点像 Cursor，它使用与开发人员相同的工具来浏览代码库，比如跳转到定义或在代码中搜索。<p>但是，与 Cursor 不同的是，mrge 不能在本地集成开发环境或编辑器中运行，这给我们带来了很大的挑战。<p>无论您何时打开 PR，mrge 都会克隆您的版本库，并在一个安全、隔离的临时沙箱中检查您的分支。  我们为该沙箱提供了 shell 访问权限和语言服务器协议 (LSP) 服务器。然后，人工智能审查员会审查您的代码，完全像人类审查员那样浏览代码库--使用 shell 命令和常用的编辑器功能，如&quot;转到定义&quot;或&quot;查找引用&quot;。<p> 我们知道基于云的审查并不适合所有人，尤其是在安全性或合规性要求本地部署的情况下。但是云方法使我们能够在没有本地 GPU 设置的情况下运行 SOTA AI 模型，并为整个团队的每个 PR 提供一致、单一的 AI 审核。<p>该平台本身完全专注于让<i>人工</i>代码审核变得更容易。一个重要的灵感来源于注重生产力的应用程序，如 Linear 或 Superhuman，这些产品展示了深思熟虑的设计对日常工作流程的影响有多大。<p> 这也是我们构建桌面应用程序的原因之一。<p> 除性能外，我们关注的主要问题是如何让人类更轻松地阅读和理解代码。例如，传统的审核工具会按字母顺序排列更改的文件，这就迫使审核人员找出审核更改的顺序。而在 mrge 中，文件会根据逻辑关系自动分组和排序，让审核人员能够立即投入工作。<p>我们认为，编码的未来并不在于人工智能取代人类，而在于为我们提供更好的工具，让我们能够快速理解高层次的变更，并抽象出越来越多的代码本身。随着代码量的不断增加，这种转变将变得越来越重要。<p>您现在就可以注册（<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>）。mrge 目前是免费的，因为我们还处于早期阶段。我们以后的计划是按席位向闭源项目收费，并继续免费向开源项目提供 mrge！}]}
2025-04-17 18:14:09.999 [reactor-http-nio-4] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Hey HN, we’re building mrge (<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback! -> 嘿，HN，我们正在构建 mrge（<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>），这是一个人工智能代码审查平台，可帮助团队更快地合并代码并减少错误。我们的早期用户包括 Better Auth、Cal.com 和 n8n-团队，他们每天都要处理大量的 PR。<p>以下是演示视频：<a href="https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>我们（Allis 和 Paul）是工程师，在上一家初创公司共事时就遇到了这个问题。代码审查很快就成为了我们最大的瓶颈--尤其是当我们开始更多地使用人工智能来编写代码时。我们有更多的 PR 需要审核，人工智能编写的细微错误会在不经意间溜走，而我们（人类）越来越发现自己在没有深入理解变更的情况下就对 PR 盖上橡皮图章。<p>我们正在构建 mrge 来帮助解决这个问题。其工作原理如下：<p>1.通过我们的 Github 应用程序，点击两下即可连接您的 GitHub 仓库（也可选择下载我们的桌面应用程序）。Gitlab 支持正在路线图上！<p>2.人工智能审查：当您打开 PR 时，我们的人工智能会在一个短暂而安全的容器中直接审核您的更改。它不仅能了解该 PR 的上下文，还能了解您的整个代码库，因此它能捕捉模式并直接在更改的行上留下注释。审查完成后，沙箱会被拆除，您的代码也会被删除，出于显而易见的原因，我们不会存储这些代码。 <p>3.人性化的审查工作流程：跳转到我们的 Web 应用程序（它就像 Linear，但适用于 PR）。<p>人工智能审查员的工作方式有点像 Cursor，它使用与开发人员相同的工具来浏览代码库，比如跳转到定义或在代码中搜索。<p>但是，与 Cursor 不同的是，mrge 不能在本地集成开发环境或编辑器中运行，这给我们带来了很大的挑战。<p>无论您何时打开 PR，mrge 都会克隆您的版本库，并在一个安全、隔离的临时沙箱中检查您的分支。  我们为该沙箱提供了 shell 访问权限和语言服务器协议 (LSP) 服务器。然后，人工智能审查员会审查您的代码，完全像人类审查员那样浏览代码库--使用 shell 命令和常用的编辑器功能，如&quot;转到定义&quot;或&quot;查找引用&quot;。<p> 我们知道基于云的审查并不适合所有人，尤其是在安全性或合规性要求本地部署的情况下。但是云方法使我们能够在没有本地 GPU 设置的情况下运行 SOTA AI 模型，并为整个团队的每个 PR 提供一致、单一的 AI 审核。<p>该平台本身完全专注于让<i>人工</i>代码审核变得更容易。一个重要的灵感来源于注重生产力的应用程序，如 Linear 或 Superhuman，这些产品展示了深思熟虑的设计对日常工作流程的影响有多大。<p> 这也是我们构建桌面应用程序的原因之一。<p> 除性能外，我们关注的主要问题是如何让人类更轻松地阅读和理解代码。例如，传统的审核工具会按字母顺序排列更改的文件，这就迫使审核人员找出审核更改的顺序。而在 mrge 中，文件会根据逻辑关系自动分组和排序，让审核人员能够立即投入工作。<p>我们认为，编码的未来并不在于人工智能取代人类，而在于为我们提供更好的工具，让我们能够快速理解高层次的变更，并抽象出越来越多的代码本身。随着代码量的不断增加，这种转变将变得越来越重要。<p>您现在就可以注册（<a href="https:&#x2F;&#x2F;www.mrge.io&#x2F;home">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>）。mrge 目前是免费的，因为我们还处于早期阶段。我们以后的计划是按席位向闭源项目收费，并继续免费向开源项目提供 mrge！
2025-04-17 18:14:10.000 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 启动 HN：mrge.io (YC X25) - 代码审查光标
2025-04-17 18:14:10.001 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43692476
2025-04-17 18:14:10.010 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 56, 分数: 216
2025-04-17 18:14:10.011 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:14:10.011 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:14:10.013 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻数量超过最大限制，开始清理...
2025-04-17 18:14:10.022 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 删除 34 条旧新闻
2025-04-17 18:25:54.878 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-17 18:25:54.881 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-04-17 18:25:56.959 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-17 18:25:56.960 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-17 18:25:56.963 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-17 18:26:55.510 [main] INFO  m.p.s.DotenvPropertySource - Initializing Dotenv with DotenvConfig{directory=null, filename=null, ignoreIfMalformed=false, ignoreIfMissing=true, systemProperties=false, prefix=null}
2025-04-17 18:26:55.519 [main] INFO  c.e.h.HackerCNewsApplication - Starting HackerCNewsApplication using Java 21.0.4 with PID 12584 (C:\Users\littletiger\Desktop\HackerCNews\backend\target\classes started by littletiger in C:\Users\littletiger\Desktop\HackerCNews\backend)
2025-04-17 18:26:55.519 [main] DEBUG c.e.h.HackerCNewsApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-17 18:26:55.520 [main] INFO  c.e.h.HackerCNewsApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-17 18:26:56.005 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-17 18:26:56.006 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-17 18:26:56.118 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 1 JPA repository interface.
2025-04-17 18:26:56.132 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-17 18:26:56.133 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-17 18:26:56.145 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.hacker_cnews.repository.NewsItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-17 18:26:56.145 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-04-17 18:26:56.884 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-17 18:26:56.906 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-17 18:26:57.039 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@312a738d
2025-04-17 18:26:57.040 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-17 18:26:57.078 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-17 18:26:57.079 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-04-17 18:26:57.696 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-17 18:26:57.705 [main] INFO  c.e.hacker_cnews.config.DotenvConfig - DotenvConfig is deprecated and will be removed in future versions
2025-04-17 18:26:57.705 [main] INFO  c.e.hacker_cnews.config.DotenvConfig - Please use PropertiesConfig instead
2025-04-17 18:26:57.710 [main] INFO  c.e.h.config.PropertiesConfig - Successfully loaded 6 properties, non-sensitive keys: [REDIS_HOST, REDIS_PORT, MYSQL_USERNAME]
2025-04-17 18:26:58.286 [main] INFO  c.e.h.service.HackerNewsService - HackerNewsService 初始化完成，使用基本URL: https://hacker-news.firebaseio.com/v0
2025-04-17 18:26:58.644 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080 (http)
2025-04-17 18:26:58.657 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:26:58.657 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:26:58.660 [main] INFO  c.e.h.HackerCNewsApplication - Started HackerCNewsApplication in 3.542 seconds (process running for 3.798)
2025-04-17 18:26:58.689 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:26:58.697 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [35d92a27] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:27:20.881 [reactor-http-nio-5] INFO  c.e.h.controller.TestController - 开始手动更新新闻数据
2025-04-17 18:27:20.882 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:27:20.882 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:27:20.882 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:27:20.883 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cff62f1] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:27:41.909 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-1, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:27:41.916 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-1, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:27:42.234 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-1, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:27:42.237 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [35d92a27] [62f84a85-1] Response 200 OK
2025-04-17 18:27:42.240 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:27:42.250 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-1, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:27:42.279 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:27:42.279 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:27:42.280 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:27:42.281 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:27:42.285 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:27:42.288 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:27:42.288 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32d5e23f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:27:42.288 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:27:42.289 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-2, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:27:42.289 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-2, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:27:42.289 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:27:42.290 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [338fb9e0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:27:42.290 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:27:42.291 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:27:42.291 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a82d44e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:27:42.596 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-2, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:27:42.597 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32d5e23f] [62f84a85-2] Response 200 OK
2025-04-17 18:27:42.597 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:27:42.599 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-2, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:27:42.599 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":103,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:27:42.600 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":103,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:27:42.643 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:27:42.643 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:27:42.687 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:27:42.736 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 182
2025-04-17 18:27:42.736 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:27:42.737 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:27:42.737 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45ceb4a7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:27:43.751 [reactor-http-nio-5] INFO  c.e.h.controller.TestController - 开始手动更新新闻数据
2025-04-17 18:27:43.752 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:27:43.752 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:27:43.752 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:27:43.753 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24ca7e84] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:27:43.753 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-3, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:27:43.753 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-3, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:27:44.066 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-3, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:27:44.067 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24ca7e84] [62f84a85-3] Response 200 OK
2025-04-17 18:27:44.067 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:27:44.067 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-3, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:27:44.068 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:27:44.068 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:27:44.069 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:27:44.069 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:27:44.070 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:27:44.071 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:27:44.072 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1caa9fd5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:27:44.072 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:27:44.072 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-4, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:27:44.073 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-4, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:27:44.073 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:27:44.073 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1652f4a5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:27:44.074 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:27:44.074 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:27:44.075 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b4c1183] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:27:44.379 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-4, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:27:44.380 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1caa9fd5] [62f84a85-4] Response 200 OK
2025-04-17 18:27:44.380 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:27:44.381 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-4, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:27:44.381 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":103,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:27:44.381 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":103,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:27:44.382 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:27:44.382 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:27:44.387 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:27:44.389 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 182
2025-04-17 18:27:44.389 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:27:44.390 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:27:44.390 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74cf863b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:28:01.464 [reactor-http-nio-5] INFO  c.e.h.controller.TestController - 开始手动更新新闻数据
2025-04-17 18:28:01.465 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:28:01.465 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:28:01.466 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:28:01.466 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54b5b6c2] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:28:01.467 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-5, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:28:01.467 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-5, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:01.779 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-5, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:01.780 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54b5b6c2] [62f84a85-5] Response 200 OK
2025-04-17 18:28:01.780 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:01.780 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-5, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:01.781 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:28:01.781 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:28:01.781 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:28:01.781 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:28:01.782 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:28:01.783 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:28:01.784 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56f50861] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:28:01.784 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:28:01.785 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-6, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:28:01.785 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-6, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:01.785 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:28:01.785 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c0d6311] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:28:01.786 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:28:01.787 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:28:01.787 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [190ff6f4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:28:02.090 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-6, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:02.090 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56f50861] [62f84a85-6] Response 200 OK
2025-04-17 18:28:02.090 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:02.091 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-6, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:02.091 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":104,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:28:02.091 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":104,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:28:02.091 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:28:02.091 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:28:02.094 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:28:02.096 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 182
2025-04-17 18:28:02.096 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:28:02.097 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:28:02.097 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [682a3598] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:28:03.230 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-1, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:28:03.230 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-1, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:03.452 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-1, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:03.453 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cff62f1] [871f309e-1] Response 200 OK
2025-04-17 18:28:03.453 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:03.454 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-1, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:03.454 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:28:03.454 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:28:03.454 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:28:03.455 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:28:03.455 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:28:03.456 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:28:03.456 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [264b69c2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:28:03.457 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:28:03.457 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-7, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:28:03.457 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-7, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:03.457 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:28:03.457 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [288c837b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:28:03.458 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:28:03.458 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-2, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:28:03.458 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-2, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:03.458 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:28:03.458 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2cb302b2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:28:03.663 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-2, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:03.664 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [288c837b] [871f309e-2] Response 200 OK
2025-04-17 18:28:03.664 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:03.664 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-2, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:03.664 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:03.664 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:03.665 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:28:03.665 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:28:03.668 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:28:03.677 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 19
2025-04-17 18:28:03.677 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:28:03.677 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:28:03.677 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a6e811b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:28:03.762 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-7, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:03.763 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [264b69c2] [62f84a85-7] Response 200 OK
2025-04-17 18:28:03.763 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:03.764 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-7, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:03.765 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":104,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:28:03.765 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":104,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714611,43714593,43714850,43714887,43714751,43714739,43714597,43714436,43714434,43714661,43714786],"score":182,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:28:03.765 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:28:03.766 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:28:03.770 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:28:03.772 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 182
2025-04-17 18:28:03.772 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:28:03.772 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:03.772 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [597d0152] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:03.773 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-3, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:28:03.773 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-3, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:03.978 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-3, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:03.979 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [597d0152] [871f309e-3] Response 200 OK
2025-04-17 18:28:03.979 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:03.979 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-3, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:03.979 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:03.980 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:03.980 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:28:03.980 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:28:03.982 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:28:03.989 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 5, 分数: 32
2025-04-17 18:28:03.989 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:28:03.989 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:03.990 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bb17085] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:03.990 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-8, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:28:03.990 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-8, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:04.295 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-8, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:04.296 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bb17085] [62f84a85-8] Response 200 OK
2025-04-17 18:28:04.296 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:04.296 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-8, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:04.297 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:04.297 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:04.297 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:28:04.298 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:28:04.301 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 18:28:04.309 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 6, 分数: 6
2025-04-17 18:28:04.310 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:28:04.311 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:04.311 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10781161] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:04.312 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-4, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:28:04.312 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-4, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:04.517 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-4, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:04.518 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10781161] [871f309e-4] Response 200 OK
2025-04-17 18:28:04.518 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:04.519 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-4, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:04.519 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:04.519 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:04.520 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:28:04.520 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:28:04.524 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:28:04.537 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 7, 分数: 51
2025-04-17 18:28:04.537 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:28:04.538 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:04.538 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10de68e4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:04.539 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-9, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:28:04.539 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-9, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:04.844 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-9, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:04.844 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10de68e4] [62f84a85-9] Response 200 OK
2025-04-17 18:28:04.844 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:04.845 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-9, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:04.845 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:04.845 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:04.845 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:28:04.845 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:28:04.848 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:28:04.855 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 8, 分数: 7
2025-04-17 18:28:04.855 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:28:04.856 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:04.856 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bd7446e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:04.856 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-5, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:28:04.857 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-5, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:05.063 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-5, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:05.064 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bd7446e] [871f309e-5] Response 200 OK
2025-04-17 18:28:05.064 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:05.065 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-5, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:05.065 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":3,"id":43678144,"kids":[43714948,43714891,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:05.065 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":3,"id":43678144,"kids":[43714948,43714891,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:05.065 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:28:05.065 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:28:05.068 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:28:05.075 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 9, 分数: 28
2025-04-17 18:28:05.075 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:28:05.076 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:05.076 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [680cdd66] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:05.076 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-10, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:28:05.076 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-10, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:05.381 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-10, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:05.382 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [680cdd66] [62f84a85-10] Response 200 OK
2025-04-17 18:28:05.382 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:05.382 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-10, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:05.382 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:05.383 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:05.383 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:28:05.383 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:28:05.386 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:28:05.392 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 10, 分数: 423
2025-04-17 18:28:24.610 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-1, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:28:24.610 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-1, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:24.622 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-1, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:28:24.622 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-1, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:24.819 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-1, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:24.819 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [338fb9e0] [5a8bcf5d-1] Response 200 OK
2025-04-17 18:28:24.820 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:24.820 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-1, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:24.820 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:24.820 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:24.821 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:28:24.821 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:28:24.824 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:28:24.826 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 19
2025-04-17 18:28:24.826 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:28:24.827 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:24.827 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5575754f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:24.828 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-6, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:28:24.828 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-6, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:24.831 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-1, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:24.831 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a82d44e] [59bdea3c-1] Response 200 OK
2025-04-17 18:28:24.831 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:24.831 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-1, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:24.831 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:24.831 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:24.832 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:28:24.832 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:28:24.834 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:28:24.839 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 3, 分数: 388
2025-04-17 18:28:24.840 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:28:24.840 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:24.840 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60be8887] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:24.841 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-11, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:28:24.841 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-11, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:25.033 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-6, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.034 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5575754f] [871f309e-6] Response 200 OK
2025-04-17 18:28:25.034 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.034 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-6, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.034 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:25.035 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:25.035 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:28:25.035 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:28:25.037 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:28:25.040 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 5, 分数: 32
2025-04-17 18:28:25.040 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:28:25.041 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:25.041 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [8d8a62e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:25.041 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-2, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:28:25.041 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-2, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:25.144 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-11, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.145 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60be8887] [62f84a85-11] Response 200 OK
2025-04-17 18:28:25.145 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.145 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-11, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.145 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:25.145 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:25.146 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:28:25.146 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:28:25.149 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 18:28:25.151 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 6, 分数: 6
2025-04-17 18:28:25.151 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:28:25.151 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:25.152 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32c9238d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:25.152 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-2, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:28:25.153 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-2, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:25.251 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-2, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.252 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [8d8a62e] [5a8bcf5d-2] Response 200 OK
2025-04-17 18:28:25.253 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.253 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-2, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.254 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:25.254 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:25.255 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:28:25.256 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:28:25.260 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:28:25.262 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 7, 分数: 51
2025-04-17 18:28:25.262 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:28:25.263 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:25.263 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [248f72e7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:25.263 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-7, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:28:25.264 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-7, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:25.362 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-2, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.362 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32c9238d] [59bdea3c-2] Response 200 OK
2025-04-17 18:28:25.362 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.362 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-2, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.363 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:25.363 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:25.364 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:28:25.364 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:28:25.367 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:28:25.369 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 8, 分数: 7
2025-04-17 18:28:25.369 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:28:25.370 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:25.370 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12408399] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:25.370 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-12, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:28:25.371 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-12, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:25.420 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-1, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:28:25.421 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-1, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:25.469 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-7, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.470 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [248f72e7] [871f309e-7] Response 200 OK
2025-04-17 18:28:25.470 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.470 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-7, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.471 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":3,"id":43678144,"kids":[43714948,43714891,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:25.471 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":3,"id":43678144,"kids":[43714948,43714891,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:25.471 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:28:25.471 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:28:25.475 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:28:25.476 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 9, 分数: 28
2025-04-17 18:28:25.677 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-12, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.678 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12408399] [62f84a85-12] Response 200 OK
2025-04-17 18:28:25.678 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.679 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-12, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.680 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:25.680 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:25.681 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:28:25.681 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:28:25.687 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:28:25.690 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 10, 分数: 423
2025-04-17 18:28:25.775 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-1, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:25.775 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45ceb4a7] [33875a63-1] Response 200 OK
2025-04-17 18:28:25.776 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:25.776 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-1, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:25.776 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:25.776 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:25.777 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:28:25.777 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:28:25.780 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:28:25.782 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 86
2025-04-17 18:28:25.782 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:25.782 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:28:26.385 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-1, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:28:26.386 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-1, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:26.590 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-1, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:26.591 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b4c1183] [9f3e7707-1] Response 200 OK
2025-04-17 18:28:26.591 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:26.592 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-1, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:26.593 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:26.593 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:26.594 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:28:26.594 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:28:26.600 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:28:26.602 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 3, 分数: 388
2025-04-17 18:28:26.603 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:28:26.603 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:26.603 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ce0e72d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:26.604 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-3, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:28:26.604 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-3, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:26.670 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-1, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:28:26.670 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-1, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:26.812 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-3, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:26.813 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ce0e72d] [5a8bcf5d-3] Response 200 OK
2025-04-17 18:28:26.813 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:26.814 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-3, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:26.815 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:26.815 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:26.815 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:28:26.816 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:28:26.821 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:28:26.822 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 5, 分数: 32
2025-04-17 18:28:26.823 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:28:26.823 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:26.823 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f7fc401] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:26.824 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-3, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:28:26.824 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-3, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:26.896 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-1, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:28:26.897 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-1, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:26.973 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-1, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:26.974 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1652f4a5] [b0b770dd-1] Response 200 OK
2025-04-17 18:28:26.974 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:26.974 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-1, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:26.975 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:26.975 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:26.975 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:28:26.975 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:28:26.978 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:28:26.980 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 19
2025-04-17 18:28:26.981 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:28:26.981 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:26.981 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [94b8dfa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:26.982 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-8, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:28:26.982 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-8, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:27.034 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-3, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:27.035 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f7fc401] [59bdea3c-3] Response 200 OK
2025-04-17 18:28:27.035 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:27.036 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-3, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:27.037 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:27.037 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:27.038 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:28:27.038 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:28:27.045 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 18:28:27.049 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 6, 分数: 6
2025-04-17 18:28:27.049 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:28:27.050 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:27.050 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b3fc969] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:27.051 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-13, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:28:27.051 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-13, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:27.129 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-1, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:27.130 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74cf863b] [7c5c6837-1] Response 200 OK
2025-04-17 18:28:27.130 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:27.131 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-1, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:27.131 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:27.131 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:27.132 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:28:27.132 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:28:27.135 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:28:27.137 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 86
2025-04-17 18:28:27.137 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:28:27.137 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:27.138 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [411e912d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:27.138 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-2, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:28:27.138 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-2, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:27.190 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-8, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:27.190 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [94b8dfa] [871f309e-8] Response 200 OK
2025-04-17 18:28:27.190 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:27.191 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-8, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:27.191 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:27.191 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:27.192 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:28:27.192 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:28:27.195 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:28:27.197 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 7, 分数: 51
2025-04-17 18:28:27.197 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:28:27.197 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:27.197 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c157eb2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:27.198 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-2, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:28:27.198 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-2, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:27.356 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-13, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:27.356 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b3fc969] [62f84a85-13] Response 200 OK
2025-04-17 18:28:27.357 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:27.357 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-13, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:27.357 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:27.357 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:27.358 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:28:27.358 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:28:27.361 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:28:27.363 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 8, 分数: 7
2025-04-17 18:28:27.401 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-2, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:27.401 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c157eb2] [9f3e7707-2] Response 200 OK
2025-04-17 18:28:27.401 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:27.401 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-2, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:27.402 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:27.402 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:27.402 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:28:27.404 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:28:27.407 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:28:27.409 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 10, 分数: 423
2025-04-17 18:28:27.492 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-2, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:27.493 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [411e912d] [33875a63-2] Response 200 OK
2025-04-17 18:28:27.493 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:27.493 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-2, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:27.493 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":3,"id":43678144,"kids":[43714948,43714891,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:27.494 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":3,"id":43678144,"kids":[43714948,43714891,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:27.494 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:28:27.494 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:28:27.497 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:28:27.499 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 9, 分数: 28
2025-04-17 18:28:27.499 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:27.499 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:28:27.793 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:28:27.794 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:27.794 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [33485837] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:27.795 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:28:27.795 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-4, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:28:27.795 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-4, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:27.795 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:27.795 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d8fb02e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:27.796 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:28:27.796 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-2, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:28:27.796 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-2, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:27.796 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:27.796 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39b03347] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:27.797 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-4, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:28:27.797 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-4, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.004 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-4, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.004 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [33485837] [5a8bcf5d-4] Response 200 OK
2025-04-17 18:28:28.004 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-4, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.004 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.005 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39b03347] [59bdea3c-4] Response 200 OK
2025-04-17 18:28:28.005 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.005 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-4, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.005 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-4, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.005 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:28.005 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:28.005 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713172,43713565,43712651,43714072,43712793,43713518,43712753,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:28.006 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713172,43713565,43712651,43714072,43712793,43713518,43712753,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:28.006 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:28:28.006 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:28:28.006 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:28:28.006 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:28:28.008 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:28:28.010 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:28:28.014 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 13, 分数: 1
2025-04-17 18:28:28.014 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:28:28.015 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:28.015 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5283fc92] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:28.016 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 11, 分数: 116
2025-04-17 18:28:28.016 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-2, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:28:28.016 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:28:28.016 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-2, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.016 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:28.016 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64ff4a05] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:28.017 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-9, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:28:28.017 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-9, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.100 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-2, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.101 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d8fb02e] [b0b770dd-2] Response 200 OK
2025-04-17 18:28:28.101 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.101 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-2, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.101 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:28.101 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:28.101 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:28:28.102 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:28:28.105 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:28:28.113 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 12, 分数: 438
2025-04-17 18:28:28.113 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:28:28.113 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:28.114 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d5117f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:28.114 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-14, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:28:28.114 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-14, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.229 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-9, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.230 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64ff4a05] [871f309e-9] Response 200 OK
2025-04-17 18:28:28.230 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.230 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-9, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.230 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:28.231 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:28.231 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:28:28.231 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:28:28.234 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:28:28.240 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 15, 分数: 155
2025-04-17 18:28:28.240 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:28:28.241 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:28.241 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51120590] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:28.242 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-3, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:28:28.242 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-3, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.250 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-2, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.250 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5283fc92] [7c5c6837-2] Response 200 OK
2025-04-17 18:28:28.250 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.250 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-2, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.250 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:28.251 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:28.251 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:28:28.251 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:28:28.253 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:28:28.260 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 14, 分数: 20
2025-04-17 18:28:28.260 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:28:28.260 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:28.260 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cb1a786] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:28.261 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-3, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:28:28.261 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-3, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.420 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-14, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.421 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d5117f] [62f84a85-14] Response 200 OK
2025-04-17 18:28:28.421 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.421 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-14, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.421 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":471,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:28.422 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":471,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:28.422 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:28:28.422 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:28:28.424 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:28:28.431 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 16, 分数: 471
2025-04-17 18:28:28.431 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:28:28.432 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:28.432 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f5dc182] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:28.432 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-5, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:28:28.433 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-5, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.443 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-3, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.443 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51120590] [9f3e7707-3] Response 200 OK
2025-04-17 18:28:28.443 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.444 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-3, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.444 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:28.449 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:28.449 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:28:28.449 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:28:28.451 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:28:28.460 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 17, 分数: 14
2025-04-17 18:28:28.460 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:28:28.461 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:28.461 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4af2e8e7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:28.461 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-5, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:28:28.461 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-5, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:28.616 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-3, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.617 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cb1a786] [33875a63-3] Response 200 OK
2025-04-17 18:28:28.617 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.618 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-3, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.619 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:28.619 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:28.620 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:28:28.620 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:28:28.623 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:28:28.631 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 18, 分数: 45
2025-04-17 18:28:28.641 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-5, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.641 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f5dc182] [59bdea3c-5] Response 200 OK
2025-04-17 18:28:28.641 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.642 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-5, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.642 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:28.642 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:28.643 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:28:28.643 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:28:28.645 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:28:28.651 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 19, 分数: 22
2025-04-17 18:28:28.668 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-5, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:28.669 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4af2e8e7] [5a8bcf5d-5] Response 200 OK
2025-04-17 18:28:28.669 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:28.669 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-5, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:28.670 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:28.670 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:28.670 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:28:28.670 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:28:28.673 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:28:28.677 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 20, 分数: 124
2025-04-17 18:28:28.678 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:28.678 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:28:29.500 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:28:29.502 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:29.502 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [16ee6b47] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:29.503 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:28:29.504 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-3, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:28:29.504 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-3, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:29.504 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:29.505 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [182987ea] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:29.505 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:28:29.505 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-10, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:28:29.506 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-10, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:29.506 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:29.507 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c160037] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:29.507 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-3, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:28:29.508 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-3, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:29.712 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-10, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:29.712 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [182987ea] [871f309e-10] Response 200 OK
2025-04-17 18:28:29.713 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:29.714 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-10, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:29.714 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:29.715 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:29.716 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:28:29.716 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:28:29.721 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:28:29.723 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 12, 分数: 438
2025-04-17 18:28:29.723 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:28:29.723 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:29.724 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [485b0c77] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:29.724 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-15, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:28:29.725 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-15, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:29.742 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-3, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:29.742 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c160037] [7c5c6837-3] Response 200 OK
2025-04-17 18:28:29.742 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:29.743 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-3, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:29.743 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:29.743 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:29.743 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:28:29.743 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:28:29.747 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:28:29.749 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 13, 分数: 1
2025-04-17 18:28:29.749 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:28:29.749 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:29.749 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f30708f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:29.750 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-4, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:28:29.750 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-4, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:29.808 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-3, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:29.808 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [16ee6b47] [b0b770dd-3] Response 200 OK
2025-04-17 18:28:29.808 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:29.808 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-3, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:29.809 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713172,43713565,43712651,43714072,43712793,43713518,43712753,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:29.809 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713172,43713565,43712651,43714072,43712793,43713518,43712753,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:29.809 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:28:29.809 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:28:29.814 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:28:29.816 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 11, 分数: 116
2025-04-17 18:28:29.817 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:28:29.817 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:29.817 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f3af388] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:29.818 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-4, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:28:29.818 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-4, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:29.959 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-4, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:29.960 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f30708f] [9f3e7707-4] Response 200 OK
2025-04-17 18:28:29.960 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:29.961 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-4, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:29.962 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:29.962 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:29.964 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:28:29.964 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:28:29.970 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:28:29.972 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 15, 分数: 155
2025-04-17 18:28:29.972 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:28:29.973 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:29.973 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32f79c86] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:29.973 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-6, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:28:29.974 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-6, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:30.030 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-15, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:30.031 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [485b0c77] [62f84a85-15] Response 200 OK
2025-04-17 18:28:30.032 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:30.033 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-15, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:30.033 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:30.033 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:30.034 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:28:30.034 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:28:30.041 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:28:30.043 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 14, 分数: 20
2025-04-17 18:28:30.043 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:28:30.043 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:30.044 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77d95c54] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:30.044 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-6, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:28:30.045 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-6, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:30.173 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-4, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:30.174 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f3af388] [33875a63-4] Response 200 OK
2025-04-17 18:28:30.175 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:30.176 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-4, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:30.176 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":471,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:30.176 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":471,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:30.177 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:28:30.177 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:28:30.180 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:28:30.182 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 16, 分数: 471
2025-04-17 18:28:30.182 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:28:30.182 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:30.182 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [465d533a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:30.183 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-11, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:28:30.183 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-11, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:30.184 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-6, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:30.184 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32f79c86] [59bdea3c-6] Response 200 OK
2025-04-17 18:28:30.184 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:30.185 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-6, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:30.185 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:30.185 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:30.185 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:28:30.186 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:28:30.187 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:28:30.188 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 17, 分数: 14
2025-04-17 18:28:30.189 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:28:30.189 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:30.189 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31f18c11] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:30.190 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-4, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:28:30.190 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-4, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:30.252 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-6, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:30.253 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77d95c54] [5a8bcf5d-6] Response 200 OK
2025-04-17 18:28:30.253 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:30.254 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-6, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:30.254 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:30.255 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:30.255 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:28:30.255 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:28:30.258 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:28:30.259 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 18, 分数: 45
2025-04-17 18:28:30.389 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-11, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:30.390 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [465d533a] [871f309e-11] Response 200 OK
2025-04-17 18:28:30.390 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:30.390 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-11, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:30.390 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:30.391 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:30.391 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:28:30.391 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:28:30.393 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:28:30.395 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 19, 分数: 22
2025-04-17 18:28:30.423 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-4, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:30.423 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [31f18c11] [7c5c6837-4] Response 200 OK
2025-04-17 18:28:30.423 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:30.423 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-4, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:30.424 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:30.424 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:30.424 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:28:30.424 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:28:30.427 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:28:30.428 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 20, 分数: 124
2025-04-17 18:28:30.429 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:30.429 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:28:32.690 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:28:32.690 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:32.691 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54aa20ef] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:32.691 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:28:32.691 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-4, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:28:32.692 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:32.692 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-4, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:32.692 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5a6dc40a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:32.692 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:28:32.692 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-5, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:28:32.692 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:32.692 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-5, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:32.692 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5e524b9f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:32.693 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-16, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:28:32.693 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-16, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:33.867 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-5, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:33.867 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5a6dc40a] [9f3e7707-5] Response 200 OK
2025-04-17 18:28:33.869 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:33.869 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-5, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:33.869 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:33.869 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:33.870 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:28:33.870 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:28:33.873 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:28:33.882 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 22, 分数: 355
2025-04-17 18:28:33.882 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:28:33.882 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:33.883 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1acde19a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:33.883 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-5, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:28:33.883 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-5, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:33.946 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-4, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:33.946 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-16, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:33.946 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54aa20ef] [b0b770dd-4] Response 200 OK
2025-04-17 18:28:33.947 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5e524b9f] [62f84a85-16] Response 200 OK
2025-04-17 18:28:33.947 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:33.947 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:33.947 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-4, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:33.948 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-16, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:33.948 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:33.948 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:33.948 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:33.949 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:28:33.949 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:33.950 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:28:33.950 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:28:33.950 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:28:33.952 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:28:33.953 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:28:33.960 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 21, 分数: 196
2025-04-17 18:28:33.960 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:28:33.961 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:33.961 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [355b72] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:33.961 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 23, 分数: 331
2025-04-17 18:28:33.961 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:28:33.961 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-7, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:28:33.961 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-7, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:33.962 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:33.962 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3b0df769] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:33.962 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-7, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:28:33.962 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-7, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.169 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-7, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.169 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3b0df769] [5a8bcf5d-7] Response 200 OK
2025-04-17 18:28:34.170 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.170 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-7, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.170 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:34.170 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-7, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.170 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [355b72] [59bdea3c-7] Response 200 OK
2025-04-17 18:28:34.171 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.170 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:34.171 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-7, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.171 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:34.171 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:34.171 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:28:34.171 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:28:34.172 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:28:34.172 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:28:34.174 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:28:34.174 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704430
2025-04-17 18:28:34.181 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 25, 分数: 325
2025-04-17 18:28:34.181 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:28:34.182 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:34.182 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [636b1260] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:34.182 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-12, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:28:34.183 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-12, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.237 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-5, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.238 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1acde19a] [33875a63-5] Response 200 OK
2025-04-17 18:28:34.238 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.238 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-5, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.238 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:34.238 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:34.238 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:28:34.239 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:28:34.241 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:28:34.246 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 24, 分数: 466
2025-04-17 18:28:34.247 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:28:34.247 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:34.247 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [c9b91d2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:34.248 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-5, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:28:34.248 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-5, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.390 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-12, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.390 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [636b1260] [871f309e-12] Response 200 OK
2025-04-17 18:28:34.390 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.390 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-12, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.391 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:34.391 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:34.391 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:28:34.391 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:28:34.393 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705632
2025-04-17 18:28:34.429 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: CVE Foundation
2025-04-17 18:28:34.429 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:28:34.431 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:28:34.431 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: CVE 基金会
2025-04-17 18:28:34.431 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 复制黑客新闻的写作风格指纹
2025-04-17 18:28:34.431 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:34.432 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [129ee1e1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:34.432 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:28:34.432 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-6, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:28:34.433 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:34.433 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-6, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.433 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c590dc2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:34.433 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:28:34.433 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-5, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:28:34.434 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-5, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.434 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:34.434 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18668a91] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:34.434 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-17, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:28:34.434 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-17, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.452 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704430
2025-04-17 18:28:34.452 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705632
2025-04-17 18:28:34.463 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 26, 分数: 382
2025-04-17 18:28:34.463 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:28:34.464 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:34.464 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74e8a184] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:34.464 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-8, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:28:34.464 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 27, 分数: 300
2025-04-17 18:28:34.464 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-8, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.465 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:28:34.465 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:34.465 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [645a8b92] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:34.465 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-6, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:28:34.465 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-6, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.483 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-5, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.483 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [c9b91d2] [7c5c6837-5] Response 200 OK
2025-04-17 18:28:34.483 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.484 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-5, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.484 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:34.484 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:34.484 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:28:34.484 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:28:34.486 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678533
2025-04-17 18:28:34.487 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:28:34.488 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 查询引擎：推与拉 (2021)
2025-04-17 18:28:34.488 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678533
2025-04-17 18:28:34.492 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 28, 分数: 86
2025-04-17 18:28:34.635 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-6, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.636 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [129ee1e1] [9f3e7707-6] Response 200 OK
2025-04-17 18:28:34.636 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.637 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-6, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.637 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:34.637 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:34.638 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:28:34.638 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:28:34.642 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:28:34.647 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 21, 分数: 196
2025-04-17 18:28:34.647 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:28:34.648 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:34.648 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b1d6d92] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:34.649 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-8, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:28:34.649 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-8, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.672 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-8, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.672 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74e8a184] [59bdea3c-8] Response 200 OK
2025-04-17 18:28:34.673 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.673 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-8, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.673 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:34.674 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:34.674 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:28:34.674 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:28:34.677 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43670921
2025-04-17 18:28:34.678 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:28:34.678 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 两步棋，AlphaGo 和李世石重新定义了未来（2016 年）
2025-04-17 18:28:34.678 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43670921
2025-04-17 18:28:34.684 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 29, 分数: 26
2025-04-17 18:28:34.737 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-5, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.737 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c590dc2] [b0b770dd-5] Response 200 OK
2025-04-17 18:28:34.737 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.738 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-5, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.738 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:34.738 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:34.738 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:28:34.738 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:28:34.740 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-17, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.741 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18668a91] [62f84a85-17] Response 200 OK
2025-04-17 18:28:34.741 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.741 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-17, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.741 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:28:34.741 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:34.741 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:34.742 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:28:34.742 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:28:34.744 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:28:34.744 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 22, 分数: 355
2025-04-17 18:28:34.744 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:28:34.744 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:34.744 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [553d9bb6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:34.745 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-13, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:28:34.745 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-13, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.746 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 23, 分数: 331
2025-04-17 18:28:34.746 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:28:34.746 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:34.747 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ae5a84f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:34.747 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-6, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:28:34.747 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-6, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.821 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-6, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.822 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [645a8b92] [33875a63-6] Response 200 OK
2025-04-17 18:28:34.822 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.822 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-6, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.823 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:34.823 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:34.823 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:28:34.823 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:28:34.826 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43690828
2025-04-17 18:28:34.827 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: eInk Mode: Making web pages easier to read
2025-04-17 18:28:34.827 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 电子墨水模式：让网页更易于阅读
2025-04-17 18:28:34.828 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43690828
2025-04-17 18:28:34.833 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 30, 分数: 136
2025-04-17 18:28:34.833 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:34.833 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:28:34.855 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-8, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.856 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b1d6d92] [5a8bcf5d-8] Response 200 OK
2025-04-17 18:28:34.856 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.857 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-8, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.857 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:34.857 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:34.857 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:28:34.857 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:28:34.861 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:28:34.861 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 24, 分数: 466
2025-04-17 18:28:34.861 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:28:34.863 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:34.863 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [613d4b3b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:34.863 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-7, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:28:34.863 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-7, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.952 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-13, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.953 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [553d9bb6] [871f309e-13] Response 200 OK
2025-04-17 18:28:34.953 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.954 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-13, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.955 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:34.955 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:34.956 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:28:34.957 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:28:34.962 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:28:34.964 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 25, 分数: 325
2025-04-17 18:28:34.964 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:28:34.965 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:34.965 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [55baf376] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:34.966 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-9, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:28:34.966 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-9, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:34.981 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-6, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:34.981 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ae5a84f] [7c5c6837-6] Response 200 OK
2025-04-17 18:28:34.982 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:34.982 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-6, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:34.982 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:34.982 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:34.983 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:28:34.983 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:28:34.985 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 18:28:34.987 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 26, 分数: 382
2025-04-17 18:28:34.987 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:28:34.988 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:34.988 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c728986] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:34.988 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-6, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:28:34.989 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-6, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:35.066 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-7, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:35.067 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [613d4b3b] [9f3e7707-7] Response 200 OK
2025-04-17 18:28:35.067 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:35.068 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-7, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:35.068 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:35.069 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:35.070 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:28:35.070 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:28:35.077 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 18:28:35.080 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 27, 分数: 300
2025-04-17 18:28:35.080 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:28:35.080 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:35.081 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [529c5ed8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:35.081 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-18, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:28:35.081 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-18, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:35.175 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-9, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:35.175 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [55baf376] [59bdea3c-9] Response 200 OK
2025-04-17 18:28:35.175 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:35.176 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-9, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:35.176 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:35.176 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:35.177 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:28:35.177 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:28:35.180 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 18:28:35.182 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 28, 分数: 86
2025-04-17 18:28:35.291 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-6, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:35.292 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c728986] [b0b770dd-6] Response 200 OK
2025-04-17 18:28:35.292 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:35.292 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-6, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:35.293 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:35.293 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:35.293 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:28:35.293 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:28:35.296 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 18:28:35.302 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 29, 分数: 26
2025-04-17 18:28:35.387 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-18, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:35.387 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [529c5ed8] [62f84a85-18] Response 200 OK
2025-04-17 18:28:35.387 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:35.388 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-18, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:35.388 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:35.388 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:35.388 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:28:35.388 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:28:35.391 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 18:28:35.392 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 30, 分数: 136
2025-04-17 18:28:35.392 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:35.392 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:28:40.837 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:28:40.839 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:28:40.840 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [133d0aa6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:28:40.841 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:28:40.841 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-7, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:28:40.842 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-7, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:40.842 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:28:40.843 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7158caaa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:28:40.843 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:28:40.844 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-9, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:28:40.844 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-9, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:40.844 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:28:40.845 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d94506b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:28:40.846 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-14, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:28:40.847 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-14, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.053 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-9, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.054 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-14, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.054 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7158caaa] [5a8bcf5d-9] Response 200 OK
2025-04-17 18:28:41.054 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d94506b] [871f309e-14] Response 200 OK
2025-04-17 18:28:41.055 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.055 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.056 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-9, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.056 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-14, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.056 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:28:41.057 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:28:41.057 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:28:41.057 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:28:41.058 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:28:41.058 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:28:41.059 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:28:41.059 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:28:41.062 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43676254
2025-04-17 18:28:41.063 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Breaking the Llama Community License
2025-04-17 18:28:41.063 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 打破拉玛社区许可证
2025-04-17 18:28:41.063 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43707719
2025-04-17 18:28:41.064 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43676254
2025-04-17 18:28:41.065 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: OpenAI o3 and o4-mini
2025-04-17 18:28:41.065 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: OpenAI o3 和 o4-mini
2025-04-17 18:28:41.066 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43707719
2025-04-17 18:28:41.071 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 33, 分数: 133
2025-04-17 18:28:41.071 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:28:41.072 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:28:41.072 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 32, 分数: 504
2025-04-17 18:28:41.072 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27e45e58] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:28:41.072 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:28:41.072 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-7, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:28:41.072 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-7, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.072 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:28:41.072 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c9cd7ff] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:28:41.073 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-8, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:28:41.073 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-8, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.196 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-7, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.196 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [133d0aa6] [33875a63-7] Response 200 OK
2025-04-17 18:28:41.198 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.198 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-7, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.198 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:28:41.198 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:28:41.199 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:28:41.199 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:28:41.204 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704596
2025-04-17 18:28:41.205 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How Nintendo bled Atari games to death
2025-04-17 18:28:41.205 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 任天堂如何让雅达利游戏血本无归
2025-04-17 18:28:41.206 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704596
2025-04-17 18:28:41.210 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 31, 分数: 200
2025-04-17 18:28:41.210 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:28:41.210 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:28:41.211 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [408dbab6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:28:41.211 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-10, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:28:41.211 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-10, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.278 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-8, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.278 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c9cd7ff] [9f3e7707-8] Response 200 OK
2025-04-17 18:28:41.278 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.279 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-8, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.279 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:28:41.279 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:28:41.279 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:28:41.280 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:28:41.282 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43692677
2025-04-17 18:28:41.283 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:28:41.283 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 美国低估了制造业回流的难度
2025-04-17 18:28:41.284 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43692677
2025-04-17 18:28:41.288 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 35, 分数: 656
2025-04-17 18:28:41.288 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:28:41.289 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:28:41.289 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [11984cb2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:28:41.289 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-7, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:28:41.290 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-7, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.307 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-7, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.308 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27e45e58] [7c5c6837-7] Response 200 OK
2025-04-17 18:28:41.308 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.308 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-7, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.308 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:28:41.308 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:28:41.309 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:28:41.309 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:28:41.311 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43677862
2025-04-17 18:28:41.312 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:28:41.312 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 拆除伯班克的弗莱电器店
2025-04-17 18:28:41.312 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43677862
2025-04-17 18:28:41.316 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 34, 分数: 125
2025-04-17 18:28:41.317 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:28:41.317 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:28:41.317 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f821cc9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:28:41.318 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-19, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:28:41.318 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-19, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.394 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:28:41.395 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:28:41.395 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [168cc758] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:28:41.396 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:28:41.396 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-10, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:28:41.396 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-10, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.397 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:28:41.397 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [184b3bf9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:28:41.397 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:28:41.397 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-15, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:28:41.398 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-15, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.398 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:28:41.398 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c74ac28] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:28:41.398 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-8, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:28:41.399 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-8, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.419 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-10, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.419 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [408dbab6] [59bdea3c-10] Response 200 OK
2025-04-17 18:28:41.420 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.420 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-10, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.420 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:28:41.420 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:28:41.421 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:28:41.421 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:28:41.423 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43669540
2025-04-17 18:28:41.424 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:28:41.424 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 从零开始的 Nix 三角数学库
2025-04-17 18:28:41.426 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43669540
2025-04-17 18:28:41.431 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 36, 分数: 43
2025-04-17 18:28:41.431 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:28:41.432 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:28:41.432 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7e94f7ad] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:28:41.433 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-9, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:28:41.433 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-9, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.593 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-7, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.593 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [11984cb2] [b0b770dd-7] Response 200 OK
2025-04-17 18:28:41.594 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.594 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-7, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.594 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:28:41.594 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:28:41.595 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:28:41.595 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:28:41.598 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705824
2025-04-17 18:28:41.598 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: A high-throughput parser for the Zig programming language
2025-04-17 18:28:41.598 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Zig 编程语言的高吞吐量解析器
2025-04-17 18:28:41.599 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705824
2025-04-17 18:28:41.601 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-10, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.602 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [168cc758] [5a8bcf5d-10] Response 200 OK
2025-04-17 18:28:41.602 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.602 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-10, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.602 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:28:41.602 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:28:41.602 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:28:41.603 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:28:41.604 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-15, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.604 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [184b3bf9] [871f309e-15] Response 200 OK
2025-04-17 18:28:41.604 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.604 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 37, 分数: 122
2025-04-17 18:28:41.604 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-15, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.604 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:28:41.604 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:28:41.604 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:28:41.605 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:28:41.605 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:28:41.605 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:28:41.605 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 18:28:41.605 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3cd16b6b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:28:41.606 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-8, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:28:41.606 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-8, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.606 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 18:28:41.607 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 31, 分数: 200
2025-04-17 18:28:41.607 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:28:41.607 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:28:41.607 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1835c405] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:28:41.608 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 32, 分数: 504
2025-04-17 18:28:41.608 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:28:41.608 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-11, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:28:41.608 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-11, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.608 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:28:41.608 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [ed9ae48] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:28:41.608 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-8, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:28:41.608 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-8, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.621 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-19, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.622 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f821cc9] [62f84a85-19] Response 200 OK
2025-04-17 18:28:41.622 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.622 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-19, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.622 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:28:41.623 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:28:41.623 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:28:41.623 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:28:41.625 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43691334
2025-04-17 18:28:41.626 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:28:41.626 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 4chan Sharty 黑客攻击和看门人电子邮件泄露
2025-04-17 18:28:41.627 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43691334
2025-04-17 18:28:41.632 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 38, 分数: 674
2025-04-17 18:28:41.633 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-9, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.633 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7e94f7ad] [9f3e7707-9] Response 200 OK
2025-04-17 18:28:41.633 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.633 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-9, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.634 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:28:41.634 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:28:41.634 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:28:41.634 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:28:41.635 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714433
2025-04-17 18:28:41.637 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:28:41.637 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:28:41.637 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: PolyThink：消除幻觉的多代理人工智能系统
2025-04-17 18:28:41.638 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714433
2025-04-17 18:28:41.641 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 39, 分数: 5
2025-04-17 18:28:41.754 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-8, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.755 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c74ac28] [33875a63-8] Response 200 OK
2025-04-17 18:28:41.755 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.755 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-8, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.756 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:28:41.756 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:28:41.757 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:28:41.758 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:28:41.764 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 18:28:41.768 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 33, 分数: 133
2025-04-17 18:28:41.768 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:28:41.768 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:28:41.768 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38252e04] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:28:41.769 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-11, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:28:41.769 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-11, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.815 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-11, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.815 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1835c405] [59bdea3c-11] Response 200 OK
2025-04-17 18:28:41.816 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.817 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-11, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.817 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:28:41.818 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:28:41.818 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:28:41.818 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:28:41.820 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 18:28:41.822 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 34, 分数: 125
2025-04-17 18:28:41.822 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:28:41.823 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:28:41.823 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fca7122] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:28:41.823 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-16, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:28:41.824 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-16, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.838 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-8, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.838 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3cd16b6b] [7c5c6837-8] Response 200 OK
2025-04-17 18:28:41.839 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.839 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-8, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.840 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:28:41.840 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:28:41.840 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:28:41.840 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:28:41.843 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705649
2025-04-17 18:28:41.844 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:28:41.844 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 6502 程序员使用的肮脏伎俩（2019 年）
2025-04-17 18:28:41.845 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705649
2025-04-17 18:28:41.852 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 40, 分数: 155
2025-04-17 18:28:41.852 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:41.852 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:28:41.915 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-8, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.916 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [ed9ae48] [b0b770dd-8] Response 200 OK
2025-04-17 18:28:41.916 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.917 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-8, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.918 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:28:41.918 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:28:41.919 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:28:41.920 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:28:41.927 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 18:28:41.930 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 35, 分数: 656
2025-04-17 18:28:41.930 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:28:41.930 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:28:41.931 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74f3ce06] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:28:41.931 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-20, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:28:41.931 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-20, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:41.976 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-11, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:41.976 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38252e04] [5a8bcf5d-11] Response 200 OK
2025-04-17 18:28:41.976 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:41.976 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-11, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:41.977 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:28:41.977 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:28:41.977 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:28:41.977 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:28:41.979 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 18:28:41.981 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 36, 分数: 43
2025-04-17 18:28:41.981 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:28:41.981 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:28:41.982 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [380352e5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:28:41.982 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-10, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:28:41.983 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-10, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:42.030 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-16, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:42.030 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fca7122] [871f309e-16] Response 200 OK
2025-04-17 18:28:42.030 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:42.031 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-16, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:42.032 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:28:42.032 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:28:42.032 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:28:42.033 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:28:42.035 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 18:28:42.037 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 37, 分数: 122
2025-04-17 18:28:42.037 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:28:42.037 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:28:42.037 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [467a22c2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:28:42.038 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-9, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:28:42.038 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-9, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:42.186 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-10, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:42.188 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [380352e5] [9f3e7707-10] Response 200 OK
2025-04-17 18:28:42.188 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:42.189 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-10, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:42.190 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:28:42.190 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:28:42.190 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:28:42.191 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:28:42.198 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714433
2025-04-17 18:28:42.201 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 39, 分数: 5
2025-04-17 18:28:42.237 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-20, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:42.237 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74f3ce06] [62f84a85-20] Response 200 OK
2025-04-17 18:28:42.238 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:42.238 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-20, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:42.238 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:28:42.238 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:28:42.238 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:28:42.238 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:28:42.240 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 18:28:42.242 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 38, 分数: 674
2025-04-17 18:28:42.392 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-9, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:42.393 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [467a22c2] [33875a63-9] Response 200 OK
2025-04-17 18:28:42.393 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:42.393 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-9, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:42.393 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:28:42.394 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:28:42.394 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:28:42.394 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:28:42.396 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 18:28:42.398 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 40, 分数: 155
2025-04-17 18:28:42.398 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:42.398 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:28:44.122 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-1, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:28:44.123 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-1, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.335 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-1, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:44.336 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [190ff6f4] [38a6d94b-1] Response 200 OK
2025-04-17 18:28:44.337 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:44.338 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-1, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:44.339 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:44.340 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:44.340 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:28:44.341 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:28:44.346 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:28:44.349 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 3, 分数: 388
2025-04-17 18:28:44.349 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:28:44.350 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:44.350 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a319fa3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:28:44.350 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-12, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:28:44.351 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-12, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.437 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-1, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:28:44.437 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-1, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.493 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-1, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:28:44.494 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-1, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.558 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-12, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:44.559 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a319fa3] [59bdea3c-12] Response 200 OK
2025-04-17 18:28:44.559 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:44.560 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-12, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:44.561 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:44.561 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":6,"id":43714004,"kids":[43714642,43714906],"score":32,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:28:44.562 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:28:44.562 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:28:44.567 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:28:44.569 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 5, 分数: 32
2025-04-17 18:28:44.570 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:28:44.570 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:44.571 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c0a1cb1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:28:44.571 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-9, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:28:44.571 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-9, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.638 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-1, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:44.639 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [682a3598] [96848813-1] Response 200 OK
2025-04-17 18:28:44.639 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:44.640 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-1, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:44.641 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:44.641 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:44.642 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:28:44.642 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:28:44.650 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:28:44.653 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 86
2025-04-17 18:28:44.653 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:28:44.654 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:44.654 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1268a3a5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:28:44.654 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-9, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:28:44.654 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-9, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.805 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-9, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:44.805 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c0a1cb1] [7c5c6837-9] Response 200 OK
2025-04-17 18:28:44.805 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:44.806 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-9, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:44.806 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:44.806 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":6,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:28:44.807 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:28:44.807 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:28:44.809 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 18:28:44.810 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 6, 分数: 6
2025-04-17 18:28:44.811 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:28:44.811 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:44.811 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53b7b86d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:28:44.812 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-12, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:28:44.812 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-12, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.850 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-1, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:44.851 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c0d6311] [c2a016cf-1] Response 200 OK
2025-04-17 18:28:44.851 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:44.852 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-1, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:44.852 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:44.852 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":19,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:28:44.853 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:28:44.853 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:28:44.858 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:28:44.860 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 19
2025-04-17 18:28:44.860 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:28:44.860 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:44.861 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c5ffe18] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:28:44.861 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-17, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:28:44.861 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-17, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:44.959 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-9, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:44.960 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1268a3a5] [b0b770dd-9] Response 200 OK
2025-04-17 18:28:44.960 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:44.961 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-9, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:44.961 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:44.962 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":51,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:28:44.962 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:28:44.963 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:28:44.966 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:28:44.968 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 7, 分数: 51
2025-04-17 18:28:44.968 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:28:44.968 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:44.968 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ff04484] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:28:44.968 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-11, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:28:44.969 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-11, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:45.021 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-12, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:45.021 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53b7b86d] [5a8bcf5d-12] Response 200 OK
2025-04-17 18:28:45.022 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:45.023 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-12, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:45.023 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:45.023 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":7,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:28:45.024 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:28:45.025 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:28:45.031 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:28:45.034 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 8, 分数: 7
2025-04-17 18:28:45.068 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-17, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:45.069 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c5ffe18] [871f309e-17] Response 200 OK
2025-04-17 18:28:45.070 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:45.070 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-17, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:45.071 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":4,"id":43678144,"kids":[43714955,43714891,43714948,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:45.071 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":4,"id":43678144,"kids":[43714955,43714891,43714948,43678721],"score":28,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:28:45.072 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:28:45.073 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:28:45.076 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:28:45.077 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 9, 分数: 28
2025-04-17 18:28:45.171 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-11, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:45.172 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ff04484] [9f3e7707-11] Response 200 OK
2025-04-17 18:28:45.172 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:45.173 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-11, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:45.173 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:45.174 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43714052,43708372,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":423,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:28:45.174 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:28:45.176 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:28:45.182 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:28:45.186 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 10, 分数: 423
2025-04-17 18:28:45.186 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:45.186 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:28:45.941 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-1, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:28:45.941 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-1, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:46.115 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-1, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:28:46.115 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-1, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:46.173 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-1, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:46.174 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2cb302b2] [c930552c-1] Response 200 OK
2025-04-17 18:28:46.174 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:46.174 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-1, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:46.174 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:46.175 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43714517,43713604,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":388,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:28:46.175 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:28:46.175 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:28:46.177 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:28:46.179 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 3, 分数: 388
2025-04-17 18:28:46.318 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-1, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:46.319 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a6e811b] [961d0eeb-1] Response 200 OK
2025-04-17 18:28:46.319 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:46.320 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-1, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:46.321 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:46.321 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":86,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:28:46.321 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:28:46.322 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:28:46.327 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:28:46.330 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 86
2025-04-17 18:28:46.331 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:46.331 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:28:47.187 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:28:47.188 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:47.189 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7cb2ba15] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:47.190 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:28:47.190 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-21, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:28:47.190 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:47.190 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-21, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.191 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [dcadc54] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:47.191 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:28:47.191 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-10, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:28:47.191 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-10, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.192 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:47.192 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d840303] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:47.193 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-2, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:28:47.194 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-2, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.402 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-2, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.403 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d840303] [38a6d94b-2] Response 200 OK
2025-04-17 18:28:47.403 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:47.404 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-2, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:47.405 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:47.405 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:47.406 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:28:47.406 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:28:47.413 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:28:47.417 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 13, 分数: 1
2025-04-17 18:28:47.417 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:28:47.417 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:47.417 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49b8d80d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:47.418 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-13, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:28:47.418 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-13, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.495 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-21, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.495 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7cb2ba15] [62f84a85-21] Response 200 OK
2025-04-17 18:28:47.496 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:47.496 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-21, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:47.496 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:47.497 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:47.497 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:28:47.497 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:28:47.501 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:28:47.503 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 11, 分数: 116
2025-04-17 18:28:47.503 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:28:47.503 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:47.504 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39d07a70] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:47.504 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-2, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:28:47.504 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-2, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.550 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-10, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.551 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [dcadc54] [33875a63-10] Response 200 OK
2025-04-17 18:28:47.551 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:47.552 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-10, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:47.552 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:47.553 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:47.553 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:28:47.554 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:28:47.561 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:28:47.563 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 12, 分数: 438
2025-04-17 18:28:47.563 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:28:47.563 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:47.564 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2690c10b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:47.564 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-10, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:28:47.564 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-10, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.627 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-13, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.627 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49b8d80d] [59bdea3c-13] Response 200 OK
2025-04-17 18:28:47.628 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:47.628 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-13, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:47.629 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:47.629 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:47.630 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:28:47.630 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:28:47.637 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:28:47.640 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 14, 分数: 20
2025-04-17 18:28:47.640 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:28:47.640 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:47.640 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c964418] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:47.640 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-2, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:28:47.641 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-2, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.710 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-2, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.711 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39d07a70] [96848813-2] Response 200 OK
2025-04-17 18:28:47.711 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:47.712 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-2, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:47.712 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:47.712 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:47.713 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:28:47.714 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:28:47.716 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:28:47.717 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 15, 分数: 155
2025-04-17 18:28:47.718 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:28:47.718 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:47.718 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f23f309] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:47.719 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-10, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:28:47.719 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-10, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.799 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-10, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.800 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2690c10b] [7c5c6837-10] Response 200 OK
2025-04-17 18:28:47.800 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:47.801 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-10, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:47.802 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":472,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:47.802 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":472,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:47.803 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:28:47.803 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:28:47.808 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:28:47.815 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 16, 分数: 472
2025-04-17 18:28:47.815 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:28:47.815 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:47.816 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d1650b9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:47.816 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-13, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:28:47.816 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-13, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:47.998 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-2, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:47.999 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c964418] [c2a016cf-2] Response 200 OK
2025-04-17 18:28:47.999 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.000 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-2, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.001 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:48.001 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:48.002 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:28:48.002 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:28:48.006 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:28:48.008 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 17, 分数: 14
2025-04-17 18:28:48.009 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:28:48.009 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:48.009 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3184d7e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:48.010 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-18, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:28:48.010 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-18, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.025 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-10, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.025 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-13, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.025 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f23f309] [b0b770dd-10] Response 200 OK
2025-04-17 18:28:48.025 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d1650b9] [5a8bcf5d-13] Response 200 OK
2025-04-17 18:28:48.026 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.026 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.027 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-10, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.027 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-13, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.027 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:48.027 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:48.028 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:48.028 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:48.029 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:28:48.029 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:28:48.029 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:28:48.030 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:28:48.033 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:28:48.033 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:28:48.034 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 18, 分数: 45
2025-04-17 18:28:48.034 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 19, 分数: 22
2025-04-17 18:28:48.218 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-18, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.218 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3184d7e] [871f309e-18] Response 200 OK
2025-04-17 18:28:48.218 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.219 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-18, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.220 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:48.220 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:48.221 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:28:48.222 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:28:48.225 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:28:48.227 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 20, 分数: 124
2025-04-17 18:28:48.227 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:48.227 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:28:48.335 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:28:48.337 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:48.337 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e962948] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:28:48.338 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:28:48.338 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-12, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:28:48.339 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-12, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.339 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:48.340 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3051c0ea] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:28:48.341 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:28:48.341 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-2, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:28:48.342 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-2, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.342 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:48.343 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [346e4238] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:28:48.344 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-2, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:28:48.344 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-2, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.544 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-12, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.544 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e962948] [9f3e7707-12] Response 200 OK
2025-04-17 18:28:48.544 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.545 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-12, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.545 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:48.545 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":116,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:28:48.545 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:28:48.545 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:28:48.548 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:28:48.548 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-2, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.548 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [346e4238] [961d0eeb-2] Response 200 OK
2025-04-17 18:28:48.548 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.549 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-2, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.549 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:48.549 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:28:48.549 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:28:48.550 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:28:48.550 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 11, 分数: 116
2025-04-17 18:28:48.550 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:28:48.550 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:48.551 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60f8d7d8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:28:48.551 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-3, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:28:48.551 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-3, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.551 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:28:48.553 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 13, 分数: 1
2025-04-17 18:28:48.553 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:28:48.553 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:48.554 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [50556e34] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:28:48.554 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-22, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:28:48.554 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-22, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.573 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-2, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.573 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3051c0ea] [c930552c-2] Response 200 OK
2025-04-17 18:28:48.574 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.574 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-2, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.574 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:48.575 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":239,"id":43708025,"kids":[43710093,43711158,43714841,43708197,43709576,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:28:48.575 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:28:48.575 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:28:48.577 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:28:48.578 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 12, 分数: 438
2025-04-17 18:28:48.578 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:28:48.579 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:48.579 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51b2f6e6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:28:48.579 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-11, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:28:48.579 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-11, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.760 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-3, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.761 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60f8d7d8] [38a6d94b-3] Response 200 OK
2025-04-17 18:28:48.761 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.761 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-3, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.762 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:48.762 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:28:48.762 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:28:48.762 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:28:48.764 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:28:48.765 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 14, 分数: 20
2025-04-17 18:28:48.766 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:28:48.766 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:48.766 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [62454713] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:28:48.766 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-14, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:28:48.767 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-14, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.867 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-22, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.867 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [50556e34] [62f84a85-22] Response 200 OK
2025-04-17 18:28:48.868 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.868 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-22, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.869 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:48.869 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43713520,43711522,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":155,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:28:48.870 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:28:48.870 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:28:48.872 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:28:48.874 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 15, 分数: 155
2025-04-17 18:28:48.875 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:28:48.875 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:48.875 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32402621] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:28:48.876 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-3, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:28:48.876 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-3, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.935 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-11, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.935 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51b2f6e6] [33875a63-11] Response 200 OK
2025-04-17 18:28:48.935 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.936 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-11, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.936 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":472,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:48.936 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43710410,43694671,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43713637,43694148,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":472,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:28:48.937 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:28:48.937 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:28:48.939 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:28:48.941 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 16, 分数: 472
2025-04-17 18:28:48.941 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:28:48.942 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:48.942 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56e0839c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:28:48.942 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-11, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:28:48.942 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-11, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:48.976 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-14, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:48.976 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [62454713] [59bdea3c-14] Response 200 OK
2025-04-17 18:28:48.977 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:48.978 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-14, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:48.978 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:48.979 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:28:48.980 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:28:48.980 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:28:48.986 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:28:48.987 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 17, 分数: 14
2025-04-17 18:28:48.987 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:28:48.988 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:48.988 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ae573ea] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:28:48.988 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-3, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:28:48.989 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-3, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:49.078 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-3, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:49.079 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32402621] [96848813-3] Response 200 OK
2025-04-17 18:28:49.079 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:49.080 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-3, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:49.080 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:49.081 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":41,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:28:49.081 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:28:49.082 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:28:49.089 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:28:49.092 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 18, 分数: 45
2025-04-17 18:28:49.177 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-11, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:49.177 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56e0839c] [7c5c6837-11] Response 200 OK
2025-04-17 18:28:49.178 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:49.178 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-11, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:49.178 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:49.178 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":22,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:28:49.179 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:28:49.179 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:28:49.181 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:28:49.182 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 19, 分数: 22
2025-04-17 18:28:49.346 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-3, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:49.347 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ae573ea] [c2a016cf-3] Response 200 OK
2025-04-17 18:28:49.347 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:49.348 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-3, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:49.349 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:49.349 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":47,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":124,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:28:49.350 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:28:49.350 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:28:49.357 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:28:49.360 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 20, 分数: 124
2025-04-17 18:28:49.360 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:49.361 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:28:49.867 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:28:49.868 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:28:49.868 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78e99947] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:28:49.870 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:28:49.870 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-11, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:28:49.870 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:28:49.870 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-11, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:49.870 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [762e682a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:28:49.871 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:28:49.871 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-14, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:28:49.871 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-14, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:49.871 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:28:49.871 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7211f237] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:28:49.871 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-19, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:28:49.872 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-19, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.076 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-14, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.077 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [762e682a] [5a8bcf5d-14] Response 200 OK
2025-04-17 18:28:50.077 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.078 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-14, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.078 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:28:50.079 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:28:50.079 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:28:50.079 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:28:50.082 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43703623
2025-04-17 18:28:50.083 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:28:50.083 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 随机微积分导论（2022 年）
2025-04-17 18:28:50.084 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43703623
2025-04-17 18:28:50.088 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-19, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.088 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7211f237] [871f309e-19] Response 200 OK
2025-04-17 18:28:50.088 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.089 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-19, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.089 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:28:50.089 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:28:50.090 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:28:50.090 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:28:50.090 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 42, 分数: 159
2025-04-17 18:28:50.090 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:28:50.091 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:28:50.091 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69f9bb67] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:28:50.092 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-13, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:28:50.092 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-13, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.092 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705065
2025-04-17 18:28:50.094 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:28:50.094 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:28:50.094 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 启动 HN：Jasmine（YC S22）--太阳能的 REC 合规和付款自动化
2025-04-17 18:28:50.094 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705065
2025-04-17 18:28:50.099 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 43, 分数: 39
2025-04-17 18:28:50.099 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:28:50.100 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:28:50.100 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [670a9374] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:28:50.100 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-3, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:28:50.100 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-3, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.173 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-11, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.174 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78e99947] [b0b770dd-11] Response 200 OK
2025-04-17 18:28:50.174 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.175 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-11, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.176 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:28:50.176 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:28:50.177 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:28:50.177 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:28:50.180 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714133
2025-04-17 18:28:50.181 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:28:50.181 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 他为什么要冒这样的风险？我和我的审查员
2025-04-17 18:28:50.182 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714133
2025-04-17 18:28:50.186 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 41, 分数: 17
2025-04-17 18:28:50.186 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:28:50.186 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:28:50.187 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f09ee09] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:28:50.187 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-3, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:28:50.187 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-3, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.295 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-13, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.295 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69f9bb67] [9f3e7707-13] Response 200 OK
2025-04-17 18:28:50.296 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.297 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-13, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.297 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:28:50.297 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:28:50.297 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:28:50.298 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:28:50.300 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711393
2025-04-17 18:28:50.301 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: The Promise of Rust
2025-04-17 18:28:50.301 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-3, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.301 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 铁锈的承诺
2025-04-17 18:28:50.301 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [670a9374] [961d0eeb-3] Response 200 OK
2025-04-17 18:28:50.301 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.301 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-3, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.301 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:28:50.301 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711393
2025-04-17 18:28:50.301 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:28:50.302 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:28:50.302 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:28:50.303 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705796
2025-04-17 18:28:50.304 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:28:50.304 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 科学，无尽的前沿》（1945 年）[pdf］
2025-04-17 18:28:50.304 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705796
2025-04-17 18:28:50.305 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 44, 分数: 17
2025-04-17 18:28:50.306 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:28:50.306 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:28:50.306 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bc8c230] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:28:50.306 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-4, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:28:50.306 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-4, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.308 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 45, 分数: 99
2025-04-17 18:28:50.308 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:28:50.308 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:28:50.308 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68fac1b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:28:50.308 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-23, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:28:50.309 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-23, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.410 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:28:50.411 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:28:50.412 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ba8991e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:28:50.412 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:28:50.412 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-12, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:28:50.413 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-12, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.413 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:28:50.413 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [556f7c1b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:28:50.414 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:28:50.414 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-15, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:28:50.414 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-15, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.415 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:28:50.415 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5150f26e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:28:50.415 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-4, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:28:50.415 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-4, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.418 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-3, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.418 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f09ee09] [c930552c-3] Response 200 OK
2025-04-17 18:28:50.419 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.419 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-3, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.419 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:28:50.419 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:28:50.419 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:28:50.419 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:28:50.423 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714269
2025-04-17 18:28:50.424 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:28:50.424 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 将 RSS 源带回浏览器
2025-04-17 18:28:50.425 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714269
2025-04-17 18:28:50.429 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 46, 分数: 19
2025-04-17 18:28:50.430 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:28:50.430 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:28:50.430 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1dc9dfaa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:28:50.431 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-12, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:28:50.431 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-12, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.520 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-4, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.520 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bc8c230] [38a6d94b-4] Response 200 OK
2025-04-17 18:28:50.520 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.521 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-4, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.521 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:28:50.521 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:28:50.522 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:28:50.522 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:28:50.524 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710761
2025-04-17 18:28:50.526 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:28:50.526 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:28:50.526 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: "动物馆"：实验室动物饲养员偶然发现一个秘密 [小说]
2025-04-17 18:28:50.527 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710761
2025-04-17 18:28:50.531 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 47, 分数: 44
2025-04-17 18:28:50.531 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:28:50.532 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:28:50.532 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e94dd4b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:28:50.532 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-4, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:28:50.532 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-4, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.614 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-23, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.614 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68fac1b] [62f84a85-23] Response 200 OK
2025-04-17 18:28:50.615 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.615 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-23, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.616 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:28:50.616 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:28:50.619 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:28:50.619 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:28:50.621 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-15, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.621 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43705144
2025-04-17 18:28:50.622 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [556f7c1b] [59bdea3c-15] Response 200 OK
2025-04-17 18:28:50.622 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.622 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-15, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.622 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:28:50.622 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:28:50.622 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:28:50.622 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:28:50.622 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:28:50.622 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:28:50.623 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 显示 HN：我们在统一内核（开放源码软件 Apache 2.0）上安装了 Chromium
2025-04-17 18:28:50.623 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43705144
2025-04-17 18:28:50.624 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 18:28:50.625 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 42, 分数: 159
2025-04-17 18:28:50.625 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:28:50.626 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:28:50.626 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fc56ce0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:28:50.626 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-15, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:28:50.626 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-15, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.627 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 48, 分数: 115
2025-04-17 18:28:50.627 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-4, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.627 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5150f26e] [96848813-4] Response 200 OK
2025-04-17 18:28:50.627 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.628 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-4, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.628 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:28:50.628 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:28:50.628 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:28:50.628 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:28:50.629 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 18:28:50.631 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 43, 分数: 39
2025-04-17 18:28:50.631 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:28:50.631 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:28:50.631 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b73e7b6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:28:50.631 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-20, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:28:50.631 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-20, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.664 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-12, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.664 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1dc9dfaa] [7c5c6837-12] Response 200 OK
2025-04-17 18:28:50.665 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.665 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-12, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.665 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:28:50.665 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:28:50.666 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:28:50.666 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:28:50.668 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43711227
2025-04-17 18:28:50.669 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:28:50.669 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 微软研究人员开发出可在 CPU 上运行的超高效人工智能模型
2025-04-17 18:28:50.669 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43711227
2025-04-17 18:28:50.674 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 49, 分数: 127
2025-04-17 18:28:50.767 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-12, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.767 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ba8991e] [33875a63-12] Response 200 OK
2025-04-17 18:28:50.767 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.767 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-12, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.768 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:28:50.768 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:28:50.768 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:28:50.769 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:28:50.773 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 18:28:50.775 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 41, 分数: 17
2025-04-17 18:28:50.776 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:28:50.776 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:28:50.776 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [530f879d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:28:50.777 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-12, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:28:50.777 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-12, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.835 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-15, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.835 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fc56ce0] [5a8bcf5d-15] Response 200 OK
2025-04-17 18:28:50.835 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.836 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-15, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.836 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:28:50.836 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:28:50.836 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-20, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.837 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:28:50.837 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:28:50.837 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b73e7b6] [871f309e-20] Response 200 OK
2025-04-17 18:28:50.838 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.838 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-20, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.838 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:28:50.838 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:28:50.838 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:28:50.838 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:28:50.840 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 18:28:50.840 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 18:28:50.841 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 44, 分数: 17
2025-04-17 18:28:50.841 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:28:50.841 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 45, 分数: 99
2025-04-17 18:28:50.842 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:28:50.842 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cd1a8b7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:28:50.842 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:28:50.842 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-14, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:28:50.842 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:28:50.842 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-14, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.843 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fb9b066] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:28:50.843 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-4, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:28:50.843 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-4, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:50.887 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-4, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:50.888 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e94dd4b] [c2a016cf-4] Response 200 OK
2025-04-17 18:28:50.888 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:50.889 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-4, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:50.889 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:28:50.890 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:28:50.890 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:28:50.891 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:28:50.897 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43679831
2025-04-17 18:28:50.898 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Four Kinds of Optimisation (2023)
2025-04-17 18:28:50.898 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 四种优化（2023 年）
2025-04-17 18:28:50.899 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43679831
2025-04-17 18:28:50.904 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 50, 分数: 38
2025-04-17 18:28:50.904 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:50.904 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:28:51.046 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-4, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:51.046 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [fb9b066] [961d0eeb-4] Response 200 OK
2025-04-17 18:28:51.046 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:51.046 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-4, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:51.047 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:28:51.047 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:28:51.047 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:28:51.047 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:28:51.049 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 18:28:51.051 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 48, 分数: 115
2025-04-17 18:28:51.051 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:28:51.051 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:28:51.051 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25c88a14] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:28:51.052 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-4, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:28:51.052 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-4, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:51.053 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-14, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:51.053 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cd1a8b7] [9f3e7707-14] Response 200 OK
2025-04-17 18:28:51.053 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:51.053 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-14, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:51.054 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:28:51.054 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:28:51.054 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:28:51.055 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:28:51.056 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 18:28:51.058 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 47, 分数: 44
2025-04-17 18:28:51.058 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:28:51.058 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:28:51.058 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12096bf] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:28:51.058 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-5, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:28:51.058 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-5, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:51.081 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-12, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:51.081 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [530f879d] [b0b770dd-12] Response 200 OK
2025-04-17 18:28:51.081 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:51.081 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-12, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:51.082 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:28:51.082 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:28:51.082 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:28:51.082 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:28:51.083 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714269
2025-04-17 18:28:51.084 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 46, 分数: 19
2025-04-17 18:28:51.267 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-5, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:51.267 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12096bf] [38a6d94b-5] Response 200 OK
2025-04-17 18:28:51.268 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:51.268 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-5, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:51.268 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:28:51.269 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:28:51.269 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:28:51.269 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:28:51.272 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 18:28:51.275 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 50, 分数: 38
2025-04-17 18:28:51.284 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-4, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:51.284 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25c88a14] [c930552c-4] Response 200 OK
2025-04-17 18:28:51.284 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:51.285 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-4, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:51.285 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:28:51.285 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:28:51.285 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:28:51.285 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:28:51.287 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 18:28:51.289 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 49, 分数: 127
2025-04-17 18:28:51.289 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:51.289 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:28:52.228 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:28:52.229 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:52.229 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61cc22e1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:52.230 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:28:52.230 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-16, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:28:52.230 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-16, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.231 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:52.231 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f0bd0a8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:52.232 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:28:52.232 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-24, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:28:52.232 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-24, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.232 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:52.232 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b344991] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:52.232 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-5, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:28:52.232 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-5, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.434 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-5, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.434 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b344991] [96848813-5] Response 200 OK
2025-04-17 18:28:52.434 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.435 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-5, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.435 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:52.435 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:52.435 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:28:52.435 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:28:52.437 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-16, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.437 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:28:52.437 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61cc22e1] [59bdea3c-16] Response 200 OK
2025-04-17 18:28:52.437 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.438 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-16, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.438 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:52.438 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:52.439 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:28:52.439 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:28:52.439 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 23, 分数: 331
2025-04-17 18:28:52.439 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:28:52.440 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:52.440 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [8012ee5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:52.440 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-13, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:28:52.440 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-13, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.440 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:28:52.442 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 21, 分数: 196
2025-04-17 18:28:52.442 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:28:52.442 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:52.442 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18f97372] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:52.442 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-13, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:28:52.442 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-13, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.537 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-24, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.538 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f0bd0a8] [62f84a85-24] Response 200 OK
2025-04-17 18:28:52.538 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.538 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-24, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.539 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:52.539 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:52.540 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:28:52.540 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:28:52.542 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:28:52.543 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 22, 分数: 355
2025-04-17 18:28:52.543 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:28:52.544 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:52.544 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54f0bbeb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:52.544 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-21, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:28:52.544 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-21, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.675 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-13, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.675 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [8012ee5] [7c5c6837-13] Response 200 OK
2025-04-17 18:28:52.675 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.676 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-13, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.676 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:52.676 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:52.676 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:28:52.676 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:28:52.678 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:28:52.680 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 24, 分数: 466
2025-04-17 18:28:52.680 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:28:52.681 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:52.681 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2bcd574f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:52.681 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-16, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:28:52.681 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-16, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.750 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-21, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.751 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54f0bbeb] [871f309e-21] Response 200 OK
2025-04-17 18:28:52.751 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.751 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-21, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.751 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:52.751 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:52.752 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:28:52.752 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:28:52.753 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 18:28:52.755 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 26, 分数: 382
2025-04-17 18:28:52.755 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:28:52.755 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:52.756 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2212827c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:52.756 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-5, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:28:52.756 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-5, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.796 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-13, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.796 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18f97372] [33875a63-13] Response 200 OK
2025-04-17 18:28:52.797 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.797 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-13, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.797 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:52.797 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:52.797 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:28:52.798 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:28:52.800 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:28:52.802 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 25, 分数: 325
2025-04-17 18:28:52.802 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:28:52.803 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:52.803 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43e6b8ae] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:52.803 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-5, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:28:52.804 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-5, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:52.890 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-16, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:52.890 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2bcd574f] [5a8bcf5d-16] Response 200 OK
2025-04-17 18:28:52.890 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:52.890 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-16, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:52.891 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:52.891 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:52.891 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:28:52.891 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:28:52.894 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 18:28:52.895 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 27, 分数: 300
2025-04-17 18:28:52.895 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:28:52.896 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:52.896 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cda4752] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:52.896 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-15, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:28:52.897 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-15, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:53.007 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-5, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:53.007 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43e6b8ae] [961d0eeb-5] Response 200 OK
2025-04-17 18:28:53.007 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:53.008 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-5, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:53.008 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:53.008 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:53.008 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:28:53.009 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:28:53.011 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 18:28:53.012 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 29, 分数: 26
2025-04-17 18:28:53.098 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-15, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:53.098 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cda4752] [9f3e7707-15] Response 200 OK
2025-04-17 18:28:53.099 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:53.099 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-15, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:53.099 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:53.099 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:53.099 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:28:53.099 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:28:53.101 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 18:28:53.102 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 30, 分数: 136
2025-04-17 18:28:53.115 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-5, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:53.116 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2212827c] [c2a016cf-5] Response 200 OK
2025-04-17 18:28:53.116 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:53.116 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-5, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:53.117 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:53.117 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:53.117 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:28:53.117 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:28:53.119 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 18:28:53.121 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 28, 分数: 86
2025-04-17 18:28:53.121 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:53.121 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:28:53.376 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:28:53.377 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:53.377 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [59148dd1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:28:53.377 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:28:53.379 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-13, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:28:53.379 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:53.379 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-13, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:53.379 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c4561e7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:28:53.379 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:28:53.379 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-6, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:28:53.381 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-6, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:53.381 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:53.382 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6807b752] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:28:53.382 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-5, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:28:53.382 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-5, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:53.590 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-6, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:53.590 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c4561e7] [38a6d94b-6] Response 200 OK
2025-04-17 18:28:53.590 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:53.591 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-6, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:53.591 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:53.592 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:28:53.592 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:28:53.592 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:28:53.596 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:28:53.598 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 22, 分数: 355
2025-04-17 18:28:53.598 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:28:53.599 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:53.599 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [295fec95] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:28:53.600 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-6, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:28:53.600 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-6, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:53.615 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-5, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:53.615 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6807b752] [c930552c-5] Response 200 OK
2025-04-17 18:28:53.616 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:53.616 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-5, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:53.616 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:53.616 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":314,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43714657,43711999,43714281,43711929,43714232,43712661,43711749,43713686,43712922,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":331,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:28:53.616 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:28:53.616 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:28:53.618 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:28:53.621 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 23, 分数: 331
2025-04-17 18:28:53.622 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:28:53.622 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:53.623 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f197d87] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:28:53.623 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-17, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:28:53.623 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-17, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:53.682 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-13, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:53.683 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [59148dd1] [b0b770dd-13] Response 200 OK
2025-04-17 18:28:53.683 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:53.683 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-13, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:53.683 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:53.683 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43714536,43708437,43707761,43708534,43713371,43709097,43708275,43708639],"score":196,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:28:53.684 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:28:53.684 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:28:53.686 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:28:53.689 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 21, 分数: 196
2025-04-17 18:28:53.689 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:28:53.689 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:53.689 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7eefcc48] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:28:53.690 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-25, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:28:53.690 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-25, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:55.545 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-6, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:55.546 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [295fec95] [96848813-6] Response 200 OK
2025-04-17 18:28:55.546 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:55.546 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-6, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:55.547 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:55.547 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":190,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":466,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:28:55.547 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:28:55.547 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:28:55.549 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:28:55.552 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 24, 分数: 466
2025-04-17 18:28:55.552 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:28:55.552 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:55.552 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68e91082] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:28:55.553 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-14, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:28:55.553 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-14, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:55.615 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-17, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:55.615 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f197d87] [59bdea3c-17] Response 200 OK
2025-04-17 18:28:55.616 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:55.616 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-17, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:55.617 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:55.617 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43714770,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43713665,43705528,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:28:55.618 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:28:55.618 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:28:55.625 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:28:55.628 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 25, 分数: 325
2025-04-17 18:28:55.629 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:28:55.629 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:55.629 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [40a97c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:28:55.629 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-22, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:28:55.630 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-22, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:55.677 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-25, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:55.677 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7eefcc48] [62f84a85-25] Response 200 OK
2025-04-17 18:28:55.679 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:55.679 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-25, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:55.679 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:55.679 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:28:55.680 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:28:55.680 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:28:55.687 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 18:28:55.691 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 26, 分数: 382
2025-04-17 18:28:55.691 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:28:55.692 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:55.692 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [eddb85b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:28:55.693 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-14, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:28:55.693 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-14, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:55.788 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-14, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:55.789 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68e91082] [7c5c6837-14] Response 200 OK
2025-04-17 18:28:55.789 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:55.790 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-14, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:55.790 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:55.791 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43714561,43709029,43712158,43707380,43712010,43707184,43714654,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:28:55.791 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:28:55.791 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:28:55.797 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 18:28:55.800 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 27, 分数: 300
2025-04-17 18:28:55.801 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:28:55.801 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:55.802 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4221bda3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:28:55.802 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-17, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:28:55.803 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-17, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:55.842 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-22, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:55.842 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [40a97c] [871f309e-22] Response 200 OK
2025-04-17 18:28:55.843 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:55.844 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-22, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:55.844 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:55.845 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":4,"id":43678533,"kids":[43714454,43714026,43713754],"score":86,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:28:55.845 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:28:55.846 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:28:55.850 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 18:28:55.855 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 28, 分数: 86
2025-04-17 18:28:56.011 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-17, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:56.012 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4221bda3] [5a8bcf5d-17] Response 200 OK
2025-04-17 18:28:56.012 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:56.013 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-17, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:56.013 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:56.013 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":44,"id":43690828,"kids":[43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":136,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:28:56.014 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:28:56.014 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:28:56.019 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 18:28:56.021 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 30, 分数: 136
2025-04-17 18:28:56.048 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-14, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:56.049 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [eddb85b] [33875a63-14] Response 200 OK
2025-04-17 18:28:56.049 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:56.050 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-14, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:56.051 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:56.051 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:28:56.052 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:28:56.052 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:28:56.054 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 18:28:56.056 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 29, 分数: 26
2025-04-17 18:28:56.056 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:28:56.056 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:28:59.126 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:28:59.127 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:28:59.128 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [115204ad] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:28:59.128 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:28:59.129 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-6, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:28:59.129 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-6, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.129 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:28:59.130 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f95f8f7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:28:59.130 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:28:59.130 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-16, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:28:59.130 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-16, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.130 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:28:59.131 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1baa6fdd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:28:59.131 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-6, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:28:59.131 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-6, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.340 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-6, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.341 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [115204ad] [961d0eeb-6] Response 200 OK
2025-04-17 18:28:59.341 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.342 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-6, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.343 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:28:59.343 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:28:59.344 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:28:59.344 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:28:59.351 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 18:28:59.356 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 31, 分数: 200
2025-04-17 18:28:59.356 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:28:59.357 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:28:59.357 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1daecfc0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:28:59.357 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-7, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:28:59.358 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-7, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.364 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-16, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.365 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f95f8f7] [9f3e7707-16] Response 200 OK
2025-04-17 18:28:59.365 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.365 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-16, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.366 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:28:59.366 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:28:59.366 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:28:59.366 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:28:59.368 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 18:28:59.369 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 32, 分数: 504
2025-04-17 18:28:59.369 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:28:59.370 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:28:59.370 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [34fdb533] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:28:59.370 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-6, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:28:59.370 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-6, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.492 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-6, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.493 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1baa6fdd] [c2a016cf-6] Response 200 OK
2025-04-17 18:28:59.493 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.494 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-6, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.495 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:28:59.495 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:28:59.496 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:28:59.496 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:28:59.502 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 18:28:59.504 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 33, 分数: 133
2025-04-17 18:28:59.504 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:28:59.504 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:28:59.504 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bca9f35] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:28:59.505 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-14, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:28:59.505 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-14, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.585 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-7, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.586 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1daecfc0] [38a6d94b-7] Response 200 OK
2025-04-17 18:28:59.586 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.587 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-7, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.588 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:28:59.588 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:28:59.589 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:28:59.589 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:28:59.595 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 18:28:59.598 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 34, 分数: 125
2025-04-17 18:28:59.599 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:28:59.599 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:28:59.599 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [736c5c6f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:28:59.600 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-7, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:28:59.600 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-7, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.627 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-6, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.627 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [34fdb533] [c930552c-6] Response 200 OK
2025-04-17 18:28:59.627 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.627 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-6, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.628 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:28:59.628 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:28:59.628 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:28:59.628 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:28:59.630 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 18:28:59.631 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 35, 分数: 656
2025-04-17 18:28:59.631 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:28:59.632 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:28:59.632 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14cdb292] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:28:59.632 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-18, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:28:59.633 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-18, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.808 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-14, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.808 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bca9f35] [b0b770dd-14] Response 200 OK
2025-04-17 18:28:59.808 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.809 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-14, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.809 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:28:59.809 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:28:59.810 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:28:59.810 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:28:59.813 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 18:28:59.819 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 36, 分数: 43
2025-04-17 18:28:59.819 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:28:59.820 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:28:59.820 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [f9a70a7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:28:59.821 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-7, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.821 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [736c5c6f] [96848813-7] Response 200 OK
2025-04-17 18:28:59.821 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.822 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-7, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.822 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:28:59.822 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:28:59.822 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:28:59.822 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:28:59.826 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 18:28:59.828 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 37, 分数: 122
2025-04-17 18:28:59.828 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:28:59.828 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:28:59.829 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1813de40] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:28:59.838 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-15, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:28:59.839 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-15, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.840 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-26, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:28:59.841 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-26, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:28:59.841 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-18, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:28:59.841 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14cdb292] [59bdea3c-18] Response 200 OK
2025-04-17 18:28:59.842 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:28:59.842 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-18, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:28:59.842 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:28:59.842 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:28:59.842 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:28:59.842 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:28:59.846 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 18:28:59.847 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 38, 分数: 674
2025-04-17 18:29:00.075 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-15, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:00.075 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1813de40] [7c5c6837-15] Response 200 OK
2025-04-17 18:29:00.076 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:00.076 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-15, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:00.077 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:29:00.077 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:29:00.077 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:29:00.077 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:29:00.079 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 18:29:00.082 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 40, 分数: 155
2025-04-17 18:29:00.147 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-26, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:00.148 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [f9a70a7] [62f84a85-26] Response 200 OK
2025-04-17 18:29:00.148 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:00.149 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-26, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:00.149 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:29:00.150 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:29:00.151 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:29:00.151 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:29:00.155 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714433
2025-04-17 18:29:00.156 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 39, 分数: 5
2025-04-17 18:29:00.157 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:00.157 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:29:00.915 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:29:00.917 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:00.918 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [674753b4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:00.919 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:29:00.919 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-23, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:29:00.919 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-23, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:00.919 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:00.920 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28dc0f17] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:00.920 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:29:00.920 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-18, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:29:00.922 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-18, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:00.920 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:00.922 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f7ef4f6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:00.922 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-15, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:29:00.922 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-15, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.126 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-23, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.127 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [674753b4] [871f309e-23] Response 200 OK
2025-04-17 18:29:01.128 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.128 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-23, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.129 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:01.129 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:01.130 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-18, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.130 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:29:01.130 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28dc0f17] [5a8bcf5d-18] Response 200 OK
2025-04-17 18:29:01.131 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:29:01.131 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.132 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-18, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.132 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:01.133 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:01.133 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:29:01.133 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:29:01.136 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43704853
2025-04-17 18:29:01.137 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43706118
2025-04-17 18:29:01.138 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:29:01.138 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 赫伯：功能强大、无缝的 HTML 感知 ERB 解析和工具
2025-04-17 18:29:01.138 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:29:01.138 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 未来芯片将比以往更热
2025-04-17 18:29:01.139 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43704853
2025-04-17 18:29:01.139 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43706118
2025-04-17 18:29:01.144 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 51, 分数: 110
2025-04-17 18:29:01.144 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:29:01.145 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:01.145 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61692006] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:01.145 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-7, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:29:01.145 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-7, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.146 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 52, 分数: 59
2025-04-17 18:29:01.146 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:29:01.146 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:01.146 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ddbfb3f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:01.146 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-17, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:29:01.147 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-17, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.289 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-15, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.290 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f7ef4f6] [33875a63-15] Response 200 OK
2025-04-17 18:29:01.290 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.290 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-15, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.290 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:01.290 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:01.291 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:29:01.291 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:29:01.293 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43692476
2025-04-17 18:29:01.294 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:29:01.294 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:29:01.294 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 启动 HN：mrge.io (YC X25) - 代码审查光标
2025-04-17 18:29:01.295 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43692476
2025-04-17 18:29:01.301 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 53, 分数: 216
2025-04-17 18:29:01.301 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:29:01.301 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:01.301 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20000492] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:01.302 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-7, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:29:01.302 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-7, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.303 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:29:01.303 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:01.303 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5d6407f9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:01.304 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:29:01.304 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-8, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:29:01.304 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-8, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.304 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:01.304 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3890745d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:01.304 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:29:01.304 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-7, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:29:01.304 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-7, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.304 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:01.305 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c735990] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:01.305 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-15, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:29:01.305 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-15, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.348 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-7, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.349 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61692006] [961d0eeb-7] Response 200 OK
2025-04-17 18:29:01.349 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.349 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-7, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.350 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:01.350 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:01.350 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:29:01.351 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:29:01.351 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-17, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.351 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ddbfb3f] [9f3e7707-17] Response 200 OK
2025-04-17 18:29:01.351 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.352 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-17, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.352 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:01.352 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:01.352 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:29:01.352 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:29:01.354 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43703682
2025-04-17 18:29:01.355 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43700633
2025-04-17 18:29:01.355 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: A Postmortem of a Startup
2025-04-17 18:29:01.356 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:29:01.356 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 马尔可夫链蒙特卡洛》（Markov Chain Monte Carlo Without All the Bullshit）（2015 年
2025-04-17 18:29:01.356 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 一家初创企业的后记
2025-04-17 18:29:01.357 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43700633
2025-04-17 18:29:01.357 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43703682
2025-04-17 18:29:01.361 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 55, 分数: 150
2025-04-17 18:29:01.361 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 54, 分数: 217
2025-04-17 18:29:01.361 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:29:01.362 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:01.362 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45f9da9a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:01.363 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 18:29:01.363 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-8, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:29:01.363 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-8, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.363 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:01.363 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7db00f5c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:01.363 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-19, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 18:29:01.364 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-19, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.514 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-8, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.514 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5d6407f9] [38a6d94b-8] Response 200 OK
2025-04-17 18:29:01.514 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.515 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-8, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.515 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:01.515 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:01.515 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:29:01.515 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:29:01.517 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 18:29:01.518 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 51, 分数: 110
2025-04-17 18:29:01.519 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:29:01.520 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:01.520 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d9dd7f2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:01.521 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-16, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:29:01.521 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-16, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.536 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-7, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.537 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3890745d] [c930552c-7] Response 200 OK
2025-04-17 18:29:01.537 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.537 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-7, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.537 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:01.537 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:01.537 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:29:01.537 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:29:01.539 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 18:29:01.540 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 52, 分数: 59
2025-04-17 18:29:01.540 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:29:01.540 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:01.540 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ef5bec9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:01.540 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-27, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:29:01.540 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-27, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.561 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-8, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.561 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45f9da9a] [96848813-8] Response 200 OK
2025-04-17 18:29:01.561 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.561 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-8, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.562 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:01.562 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:01.562 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:29:01.562 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:29:01.563 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43677122
2025-04-17 18:29:01.564 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:29:01.564 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 斐波那契哈希算法：被世界遗忘的优化算法
2025-04-17 18:29:01.565 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43677122
2025-04-17 18:29:01.569 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 57, 分数: 126
2025-04-17 18:29:01.569 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714125
2025-04-17 18:29:01.570 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:01.570 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e8a7dc1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:01.570 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-24, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714125.json, method=GET}
2025-04-17 18:29:01.570 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-19, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.570 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-24, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.571 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7db00f5c] [59bdea3c-19] Response 200 OK
2025-04-17 18:29:01.571 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.571 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-19, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.571 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:01.571 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:01.572 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 18:29:01.572 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:29:01.573 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678909
2025-04-17 18:29:01.573 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:29:01.573 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 使用 -fsanitize=undefined 和 Picolibc 的乐趣
2025-04-17 18:29:01.574 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678909
2025-04-17 18:29:01.577 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 58, 分数: 111
2025-04-17 18:29:01.577 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713814
2025-04-17 18:29:01.578 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:29:01.578 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f38ac0a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:29:01.578 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-19, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713814.json, method=GET}
2025-04-17 18:29:01.578 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-19, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.624 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-15, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.624 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c735990] [b0b770dd-15] Response 200 OK
2025-04-17 18:29:01.624 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.625 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-15, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.625 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:01.625 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:01.626 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:29:01.626 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:29:01.628 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 18:29:01.629 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 53, 分数: 216
2025-04-17 18:29:01.629 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:29:01.630 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:01.630 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3376ce89] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:01.630 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-16, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:29:01.630 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-16, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:01.661 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-7, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:01.661 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20000492] [c2a016cf-7] Response 200 OK
2025-04-17 18:29:01.661 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:01.662 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-7, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:01.662 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:01.662 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:01.663 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:29:01.663 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:29:01.664 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43710986
2025-04-17 18:29:01.665 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:29:01.665 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Kotlin 101：类型类速解
2025-04-17 18:29:01.666 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43710986
2025-04-17 18:29:01.670 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 56, 分数: 18
2025-04-17 18:29:02.068 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:29:02.069 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:29:02.070 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [597631c2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:29:02.070 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:29:02.071 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-8, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:29:02.071 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-8, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:02.072 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:29:02.072 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [29b09bb3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:29:02.073 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:29:02.073 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-18, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:29:02.073 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-18, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:02.074 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:29:02.074 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68e5e98f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:29:02.075 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-9, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:29:02.075 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-9, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.176 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-18, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.177 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [29b09bb3] [9f3e7707-18] Response 200 OK
2025-04-17 18:29:03.177 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.177 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-18, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.177 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:29:03.177 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":461,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43713671,43708015,43711159,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:29:03.178 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:29:03.178 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:29:03.180 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-9, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.181 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68e5e98f] [38a6d94b-9] Response 200 OK
2025-04-17 18:29:03.181 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.181 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-9, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.181 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:29:03.182 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:29:03.181 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 18:29:03.182 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:29:03.182 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:29:03.183 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 32, 分数: 504
2025-04-17 18:29:03.183 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 18:29:03.183 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:29:03.184 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:29:03.184 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cdddd52] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:29:03.184 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 33, 分数: 133
2025-04-17 18:29:03.184 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:29:03.185 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-8, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:29:03.185 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:29:03.185 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [450033c1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:29:03.185 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-8, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.185 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-9, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:29:03.185 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-9, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.204 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-24, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.204 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e8a7dc1] [871f309e-24] Response 200 OK
2025-04-17 18:29:03.204 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.204 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-24, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.205 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:03.205 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:03.205 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714125, by=thunderbong, title=How the Merchants of Ifriqiya Coded Commerce Before Silicon, url=https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af, type=story, time=1744876083
2025-04-17 18:29:03.205 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714125, 标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:29:03.207 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714125
2025-04-17 18:29:03.207 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:29:03.207 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 伊夫里基亚商人如何在硅谷之前编码商业
2025-04-17 18:29:03.208 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714125
2025-04-17 18:29:03.212 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714125, 排名: 59, 分数: 9
2025-04-17 18:29:03.213 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-19, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.213 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f38ac0a] [5a8bcf5d-19] Response 200 OK
2025-04-17 18:29:03.213 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.213 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-19, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.214 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:29:03.214 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:29:03.214 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713814, by=yomaytk, title=Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator, url=https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39, type=story, time=1744872494
2025-04-17 18:29:03.214 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713814, 标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:29:03.216 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713814
2025-04-17 18:29:03.216 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:29:03.216 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译正文
2025-04-17 18:29:03.216 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 显示 HN：Elfconv - 从 Linux 应用程序到高性能 WASM 二进制翻译器
2025-04-17 18:29:03.217 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713814
2025-04-17 18:29:03.220 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713814, 排名: 60, 分数: 10
2025-04-17 18:29:03.220 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:03.220 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:29:03.223 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-8, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.223 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [597631c2] [961d0eeb-8] Response 200 OK
2025-04-17 18:29:03.223 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.223 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-8, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.223 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:29:03.223 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":200,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:29:03.223 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:29:03.223 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:29:03.224 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 18:29:03.225 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 31, 分数: 200
2025-04-17 18:29:03.225 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:29:03.226 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:29:03.226 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f9c6693] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:29:03.226 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-20, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:29:03.226 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-20, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.252 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-16, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.252 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d9dd7f2] [7c5c6837-16] Response 200 OK
2025-04-17 18:29:03.252 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.252 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-16, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.252 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:03.252 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:03.253 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:29:03.253 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:29:03.255 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 18:29:03.256 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 54, 分数: 217
2025-04-17 18:29:03.256 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:29:03.256 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:03.256 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5de87648] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:03.257 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-16, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:29:03.257 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-16, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.257 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-27, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.257 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ef5bec9] [62f84a85-27] Response 200 OK
2025-04-17 18:29:03.257 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.257 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-27, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.257 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:03.257 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:03.257 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:29:03.257 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:29:03.258 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703682
2025-04-17 18:29:03.259 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 55, 分数: 150
2025-04-17 18:29:03.259 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 18:29:03.259 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:03.260 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d0709f7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:03.260 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-8, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 18:29:03.260 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-8, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.317 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-16, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.317 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3376ce89] [33875a63-16] Response 200 OK
2025-04-17 18:29:03.317 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.318 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-16, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.318 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:03.318 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:03.318 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:29:03.318 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:29:03.320 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710986
2025-04-17 18:29:03.321 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 56, 分数: 18
2025-04-17 18:29:03.322 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714125
2025-04-17 18:29:03.322 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:03.322 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [42bcdca3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:03.323 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-10, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714125.json, method=GET}
2025-04-17 18:29:03.323 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-10, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.385 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-9, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.386 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [450033c1] [96848813-9] Response 200 OK
2025-04-17 18:29:03.386 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.386 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-9, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.386 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:29:03.386 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":854,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43714856,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43711755,43693060,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43708998,43706318,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43711094,43705288,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:29:03.386 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:29:03.387 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:29:03.388 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 18:29:03.389 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 35, 分数: 656
2025-04-17 18:29:03.390 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:29:03.390 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:29:03.390 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cd2cb97] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:29:03.391 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-19, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:29:03.391 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-19, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.421 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-8, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.422 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cdddd52] [c930552c-8] Response 200 OK
2025-04-17 18:29:03.422 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.422 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-8, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.423 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:29:03.423 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43714662,43712992,43713138,43713899,43713731,43713623,43711986,43713872,43712594,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:29:03.424 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:29:03.425 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:29:03.426 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 18:29:03.427 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 34, 分数: 125
2025-04-17 18:29:03.427 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:29:03.428 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:29:03.428 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1df75fb4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:29:03.428 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-25, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:29:03.428 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-25, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.434 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-20, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.434 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f9c6693] [59bdea3c-20] Response 200 OK
2025-04-17 18:29:03.434 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.435 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-20, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.435 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:29:03.435 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:29:03.435 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:29:03.435 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:29:03.437 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 18:29:03.437 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 36, 分数: 43
2025-04-17 18:29:03.438 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:29:03.438 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:29:03.438 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12aedffe] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:29:03.438 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-20, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:29:03.438 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-20, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.532 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-10, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.532 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [42bcdca3] [38a6d94b-10] Response 200 OK
2025-04-17 18:29:03.532 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.532 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-10, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.532 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:03.532 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:03.532 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714125, by=thunderbong, title=How the Merchants of Ifriqiya Coded Commerce Before Silicon, url=https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af, type=story, time=1744876083
2025-04-17 18:29:03.533 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714125, 标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:29:03.535 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714125
2025-04-17 18:29:03.536 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714125, 排名: 59, 分数: 9
2025-04-17 18:29:03.536 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713814
2025-04-17 18:29:03.536 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:29:03.537 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1df3c47] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713814.json
2025-04-17 18:29:03.537 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-9, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713814.json, method=GET}
2025-04-17 18:29:03.538 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-9, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.561 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-16, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.561 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5de87648] [b0b770dd-16] Response 200 OK
2025-04-17 18:29:03.561 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.562 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-16, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.562 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:03.562 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:03.562 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:29:03.562 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:29:03.564 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 18:29:03.565 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 57, 分数: 126
2025-04-17 18:29:03.596 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-19, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.597 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cd2cb97] [9f3e7707-19] Response 200 OK
2025-04-17 18:29:03.597 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.598 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-19, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.599 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:29:03.599 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:29:03.600 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:29:03.600 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:29:03.606 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 18:29:03.610 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 37, 分数: 122
2025-04-17 18:29:03.610 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:29:03.610 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:29:03.611 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14eaa49b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:29:03.611 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-17, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:29:03.611 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-17, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:03.617 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-8, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.618 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [d0709f7] [c2a016cf-8] Response 200 OK
2025-04-17 18:29:03.618 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.618 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-8, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.618 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:03.619 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:03.619 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 18:29:03.619 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:29:03.621 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678909
2025-04-17 18:29:03.622 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 58, 分数: 111
2025-04-17 18:29:03.636 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-25, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.637 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1df75fb4] [871f309e-25] Response 200 OK
2025-04-17 18:29:03.637 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.637 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-25, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.638 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:29:03.638 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:29:03.639 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:29:03.639 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:29:03.640 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 18:29:03.642 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 38, 分数: 674
2025-04-17 18:29:03.645 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-20, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.645 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12aedffe] [5a8bcf5d-20] Response 200 OK
2025-04-17 18:29:03.645 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.645 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-20, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.646 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:29:03.646 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":0,"id":43714433,"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:29:03.646 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:29:03.646 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:29:03.648 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714433
2025-04-17 18:29:03.649 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 39, 分数: 5
2025-04-17 18:29:03.739 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-9, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.740 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1df3c47] [961d0eeb-9] Response 200 OK
2025-04-17 18:29:03.740 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.740 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-9, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.740 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:29:03.740 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"yomaytk","descendants":0,"id":43713814,"score":10,"text":"This post introduces elfconv, a binary translator that converts Linux applications into WebAssembly.<p>repo: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv</a><p>Recently, performance has improved dramatically. In our LINPACK benchmark, the Wasm generated from ELF&#x2F;AArch64 by elfconv now runs at roughly 60–80% of the performance of the Wasm directly compiled from source code.<p>This shows that elfconv can produce WebAssembly with practical, real‑world performance! Furthermore, compared to QEMU running in the browser, it achieves approximately 68× the performance.<p>Benchmark test: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116\">https:&#x2F;&#x2F;github.com&#x2F;yomaytk&#x2F;elfconv&#x2F;issues&#x2F;116</a><p>QEMU in the browser: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm\">https:&#x2F;&#x2F;github.com&#x2F;ktock&#x2F;qemu-wasm</a><p>Please give it a try, and feel free to submit any issues or pull requests!","time":1744872494,"title":"Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator","type":"story","url":"https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39"}
2025-04-17 18:29:03.740 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713814, by=yomaytk, title=Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator, url=https://medium.com/nttlabs/some-performance-improvements-in-the-binary-translator-that-converts-linux-applications-c6b26945cf39, type=story, time=1744872494
2025-04-17 18:29:03.740 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713814, 标题: Show HN: Elfconv – Linux Apps to High-Performance WASM Binary Translator
2025-04-17 18:29:03.743 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713814
2025-04-17 18:29:03.744 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713814, 排名: 60, 分数: 10
2025-04-17 18:29:03.744 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:03.745 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:29:03.843 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-17, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:03.844 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14eaa49b] [7c5c6837-17] Response 200 OK
2025-04-17 18:29:03.844 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:03.845 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-17, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:03.845 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:29:03.846 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:29:03.847 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:29:03.847 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:29:03.852 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 18:29:03.853 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 40, 分数: 155
2025-04-17 18:29:03.853 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:03.853 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:29:08.170 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:29:08.171 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:29:08.172 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5fa702a0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:29:08.172 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:29:08.172 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-28, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:29:08.173 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-28, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.173 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:29:08.173 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24b45bc8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:29:08.174 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:29:08.174 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-17, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:29:08.174 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-17, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.174 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:29:08.174 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [138ec86e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:29:08.174 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-10, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:29:08.175 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-10, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.383 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-10, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.384 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [138ec86e] [96848813-10] Response 200 OK
2025-04-17 18:29:08.384 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.385 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-10, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.386 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:29:08.386 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:29:08.387 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:29:08.388 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:29:08.395 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 18:29:08.399 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 43, 分数: 39
2025-04-17 18:29:08.399 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:29:08.399 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:29:08.400 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1de18fae] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:29:08.400 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-9, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:29:08.400 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-9, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.479 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-28, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.479 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5fa702a0] [62f84a85-28] Response 200 OK
2025-04-17 18:29:08.480 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.481 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-28, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.481 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:29:08.482 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:29:08.482 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:29:08.483 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:29:08.489 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 18:29:08.492 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 41, 分数: 17
2025-04-17 18:29:08.492 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:29:08.492 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:29:08.492 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [33e61294] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:29:08.493 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-21, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:29:08.493 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-21, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.527 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-17, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.528 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24b45bc8] [33875a63-17] Response 200 OK
2025-04-17 18:29:08.528 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.529 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-17, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.530 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:29:08.530 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:29:08.531 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:29:08.531 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:29:08.537 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 18:29:08.538 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 42, 分数: 159
2025-04-17 18:29:08.539 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:29:08.539 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:29:08.539 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [101ccf5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:29:08.540 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-11, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:29:08.540 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-11, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.630 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-9, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.631 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1de18fae] [c930552c-9] Response 200 OK
2025-04-17 18:29:08.631 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.631 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-9, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.632 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:29:08.632 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:29:08.632 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:29:08.633 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:29:08.638 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 18:29:08.642 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 44, 分数: 17
2025-04-17 18:29:08.642 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:29:08.642 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:29:08.643 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [530770ce] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:29:08.643 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-17, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:29:08.643 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-17, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.703 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-21, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.704 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [33e61294] [59bdea3c-21] Response 200 OK
2025-04-17 18:29:08.704 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.705 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-21, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.705 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:29:08.706 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:29:08.706 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:29:08.707 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:29:08.713 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 18:29:08.717 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 45, 分数: 99
2025-04-17 18:29:08.717 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:29:08.717 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:29:08.718 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ede5f2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:29:08.718 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-20, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:29:08.718 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-20, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.749 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-11, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.749 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [101ccf5] [38a6d94b-11] Response 200 OK
2025-04-17 18:29:08.749 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.750 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-11, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.750 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:29:08.750 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:29:08.751 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:29:08.751 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:29:08.752 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714269
2025-04-17 18:29:08.753 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 46, 分数: 19
2025-04-17 18:29:08.753 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:29:08.753 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:29:08.753 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f0a05e2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:29:08.754 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-9, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:29:08.754 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-9, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:08.921 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-20, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:08.922 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ede5f2] [9f3e7707-20] Response 200 OK
2025-04-17 18:29:08.922 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:08.922 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-20, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:08.922 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:29:08.923 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:29:08.923 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:29:08.923 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:29:08.925 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 18:29:08.926 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 48, 分数: 115
2025-04-17 18:29:08.927 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:29:08.927 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:29:08.927 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c8de812] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:29:08.928 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-26, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:29:08.928 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-26, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:09.031 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-17, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:09.031 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [530770ce] [b0b770dd-17] Response 200 OK
2025-04-17 18:29:09.031 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:09.031 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-17, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:09.032 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:29:09.032 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:29:09.032 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:29:09.032 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:29:09.034 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 18:29:09.036 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 47, 分数: 44
2025-04-17 18:29:09.111 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-9, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:09.111 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f0a05e2] [c2a016cf-9] Response 200 OK
2025-04-17 18:29:09.111 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:09.112 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-9, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:09.112 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:29:09.112 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:29:09.112 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:29:09.112 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:29:09.115 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 18:29:09.117 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 49, 分数: 127
2025-04-17 18:29:09.133 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-26, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:09.134 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c8de812] [871f309e-26] Response 200 OK
2025-04-17 18:29:09.134 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:09.135 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-26, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:09.135 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:29:09.135 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:29:09.135 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:29:09.135 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:29:09.138 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 18:29:09.140 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 50, 分数: 38
2025-04-17 18:29:09.140 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:09.140 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:29:11.865 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:29:11.866 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:29:11.866 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [406d748d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:29:11.866 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:29:11.866 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-21, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:29:11.866 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-21, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:11.867 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:29:11.867 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d4bf8b6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:29:11.867 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:29:11.867 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-10, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:29:11.867 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-10, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:11.867 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:29:11.867 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c241de] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:29:11.868 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-18, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:29:11.868 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-18, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.069 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-10, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.069 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d4bf8b6] [961d0eeb-10] Response 200 OK
2025-04-17 18:29:12.070 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.070 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-10, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.070 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:29:12.071 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:29:12.071 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:29:12.072 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:29:12.073 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-21, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.074 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [406d748d] [5a8bcf5d-21] Response 200 OK
2025-04-17 18:29:12.074 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.074 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-21, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.074 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:29:12.074 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":17,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:29:12.076 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:29:12.076 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:29:12.076 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 18:29:12.078 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 18:29:12.078 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 42, 分数: 159
2025-04-17 18:29:12.078 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:29:12.079 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:29:12.079 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2fe317fe] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:29:12.080 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-11, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:29:12.080 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-11, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.081 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 41, 分数: 17
2025-04-17 18:29:12.081 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:29:12.082 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:29:12.082 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [633f52d8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:29:12.082 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-29, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:29:12.083 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-29, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.112 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-18, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.113 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c241de] [7c5c6837-18] Response 200 OK
2025-04-17 18:29:12.113 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.113 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-18, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.114 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:29:12.114 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:29:12.114 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:29:12.114 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:29:12.116 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 18:29:12.118 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 43, 分数: 39
2025-04-17 18:29:12.118 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:29:12.118 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:29:12.118 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5015cef0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:29:12.119 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-18, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:29:12.119 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-18, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.280 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-11, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.281 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2fe317fe] [96848813-11] Response 200 OK
2025-04-17 18:29:12.281 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.281 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-11, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.281 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:29:12.281 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":17,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:29:12.282 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:29:12.282 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:29:12.286 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 18:29:12.289 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 44, 分数: 17
2025-04-17 18:29:12.289 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:29:12.290 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:29:12.290 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e6d6059] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:29:12.291 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-10, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:29:12.291 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-10, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.389 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-29, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.389 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [633f52d8] [62f84a85-29] Response 200 OK
2025-04-17 18:29:12.389 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.390 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-29, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.390 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:29:12.391 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:29:12.391 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:29:12.391 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:29:12.395 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 18:29:12.397 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 45, 分数: 99
2025-04-17 18:29:12.397 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:29:12.397 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:29:12.398 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [13f60c5f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:29:12.398 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-22, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:29:12.398 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-22, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.474 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-18, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.475 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5015cef0] [33875a63-18] Response 200 OK
2025-04-17 18:29:12.475 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.476 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-18, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.476 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:29:12.476 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:29:12.477 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:29:12.477 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:29:12.480 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714269
2025-04-17 18:29:12.482 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 46, 分数: 19
2025-04-17 18:29:12.482 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:29:12.483 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:29:12.483 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [65ddd4d9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:29:12.483 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-12, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:29:12.483 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-12, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.529 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-10, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.530 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e6d6059] [c930552c-10] Response 200 OK
2025-04-17 18:29:12.530 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.530 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-10, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.530 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:29:12.531 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":8,"id":43710761,"kids":[43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":44,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:29:12.531 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:29:12.531 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:29:12.533 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 18:29:12.535 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 47, 分数: 44
2025-04-17 18:29:12.535 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:29:12.536 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:29:12.536 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12641a4f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:29:12.537 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-21, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:29:12.537 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-21, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:12.607 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-22, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.608 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [13f60c5f] [59bdea3c-22] Response 200 OK
2025-04-17 18:29:12.608 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.609 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-22, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.609 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:29:12.609 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:29:12.609 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:29:12.609 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:29:12.612 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 18:29:12.613 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 48, 分数: 115
2025-04-17 18:29:12.693 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-12, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.693 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [65ddd4d9] [38a6d94b-12] Response 200 OK
2025-04-17 18:29:12.693 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.694 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-12, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.694 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:29:12.694 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43712591,43711396,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:29:12.695 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:29:12.695 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:29:12.698 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 18:29:12.700 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 49, 分数: 127
2025-04-17 18:29:12.739 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-21, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:12.739 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [12641a4f] [9f3e7707-21] Response 200 OK
2025-04-17 18:29:12.740 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:12.740 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-21, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:12.740 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:29:12.740 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:29:12.741 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:29:12.741 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:29:12.744 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 18:29:12.746 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 50, 分数: 38
2025-04-17 18:29:12.746 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:12.746 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:29:19.147 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:29:19.148 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:19.148 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ea8f2cc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:19.149 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:29:19.149 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-18, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:29:19.149 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-18, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.149 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:19.149 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f5ef2d8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:19.150 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:29:19.150 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-10, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:29:19.150 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:19.150 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-10, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.150 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f3ceb84] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:19.151 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-27, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:29:19.151 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-27, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.466 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-27, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.466 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f3ceb84] [871f309e-27] Response 200 OK
2025-04-17 18:29:19.466 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.467 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-27, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.467 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:19.467 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:19.467 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:29:19.467 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:29:19.470 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 18:29:19.472 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 53, 分数: 216
2025-04-17 18:29:19.472 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:29:19.472 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:19.472 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e444a06] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:19.472 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-11, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:29:19.473 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-11, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.538 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-18, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.539 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5ea8f2cc] [b0b770dd-18] Response 200 OK
2025-04-17 18:29:19.539 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.539 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-18, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.539 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:19.539 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:19.540 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:29:19.540 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:29:19.540 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-10, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.541 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f5ef2d8] [c2a016cf-10] Response 200 OK
2025-04-17 18:29:19.541 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.541 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-10, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.542 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:19.542 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:19.542 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 18:29:19.542 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:29:19.542 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:29:19.544 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 51, 分数: 110
2025-04-17 18:29:19.544 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:29:19.544 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 18:29:19.545 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:19.545 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5bd53e07] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:19.545 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-22, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:29:19.545 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 52, 分数: 59
2025-04-17 18:29:19.545 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:29:19.545 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-22, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.546 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:19.546 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6abc6940] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:19.546 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-19, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:29:19.546 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-19, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.777 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-11, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.777 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e444a06] [961d0eeb-11] Response 200 OK
2025-04-17 18:29:19.777 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.778 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-11, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.778 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:19.778 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:19.778 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:29:19.778 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:29:19.780 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 18:29:19.781 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 54, 分数: 217
2025-04-17 18:29:19.782 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:29:19.782 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:19.782 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [426de3e7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:19.783 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-12, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:29:19.783 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-12, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.784 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-22, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.784 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5bd53e07] [5a8bcf5d-22] Response 200 OK
2025-04-17 18:29:19.784 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.784 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-22, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.784 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:19.784 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:19.785 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:29:19.785 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:29:19.786 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703682
2025-04-17 18:29:19.787 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 55, 分数: 150
2025-04-17 18:29:19.787 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 18:29:19.787 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:19.788 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [66dcfe88] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:19.788 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [62f84a85-30, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 18:29:19.788 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-30, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.797 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-19, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.797 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6abc6940] [7c5c6837-19] Response 200 OK
2025-04-17 18:29:19.797 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.797 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-19, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.798 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:19.798 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:19.798 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:29:19.798 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:29:19.800 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710986
2025-04-17 18:29:19.802 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 56, 分数: 18
2025-04-17 18:29:19.802 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714125
2025-04-17 18:29:19.803 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:19.803 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ce9a560] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:19.803 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [33875a63-19, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714125.json, method=GET}
2025-04-17 18:29:19.803 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-19, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:19.987 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-12, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:19.988 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [426de3e7] [96848813-12] Response 200 OK
2025-04-17 18:29:19.988 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:19.988 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-12, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:19.988 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:19.988 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:19.989 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:29:19.989 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:29:19.992 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 18:29:19.993 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 57, 分数: 126
2025-04-17 18:29:19.993 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679764
2025-04-17 18:29:19.993 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679764.json
2025-04-17 18:29:19.994 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [163f1bb9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679764.json
2025-04-17 18:29:19.994 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [c930552c-11, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679764.json, method=GET}
2025-04-17 18:29:19.994 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-11, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:20.121 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-30, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:20.122 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [66dcfe88] [62f84a85-30] Response 200 OK
2025-04-17 18:29:20.123 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:20.123 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [62f84a85-30, L:/10.64.127.133:65313 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:20.123 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:20.123 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:20.124 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 18:29:20.124 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:29:20.127 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678909
2025-04-17 18:29:20.128 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 58, 分数: 111
2025-04-17 18:29:20.234 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-19, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:20.234 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ce9a560] [33875a63-19] Response 200 OK
2025-04-17 18:29:20.234 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:20.235 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [33875a63-19, L:/10.64.127.133:65357 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:20.235 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:20.235 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:20.236 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714125, by=thunderbong, title=How the Merchants of Ifriqiya Coded Commerce Before Silicon, url=https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af, type=story, time=1744876083
2025-04-17 18:29:20.236 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714125, 标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:29:20.238 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714125
2025-04-17 18:29:20.239 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714125, 排名: 59, 分数: 9
2025-04-17 18:29:20.322 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-11, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:20.323 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [163f1bb9] [c930552c-11] Response 200 OK
2025-04-17 18:29:20.324 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:20.324 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [c930552c-11, L:/10.64.127.133:65368 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:20.325 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":25,"id":43679764,"kids":[43712948,43713403,43712174,43711952,43712677,43711953,43711878,43713252,43713113,43711864,43712112,43711705],"score":62,"time":1744625892,"title":"Unix files have (at least) two sizes","type":"story","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/UnixFilesTwoSizes"}
2025-04-17 18:29:20.325 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":25,"id":43679764,"kids":[43712948,43713403,43712174,43711952,43712677,43711953,43711878,43713252,43713113,43711864,43712112,43711705],"score":62,"time":1744625892,"title":"Unix files have (at least) two sizes","type":"story","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/UnixFilesTwoSizes"}
2025-04-17 18:29:20.326 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679764, by=ingve, title=Unix files have (at least) two sizes, url=https://utcc.utoronto.ca/~cks/space/blog/unix/UnixFilesTwoSizes, type=story, time=1744625892
2025-04-17 18:29:20.326 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679764, 标题: Unix files have (at least) two sizes
2025-04-17 18:29:20.331 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43679764
2025-04-17 18:29:20.332 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Unix files have (at least) two sizes
2025-04-17 18:29:20.333 [reactor-http-nio-13] INFO  c.e.h.service.TranslationService - 翻译请求：Unix files have (at least) two sizes
2025-04-17 18:29:20.333 [reactor-http-nio-13] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:29:20.335 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [749ea721] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:29:21.131 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [36b14986-1, L:/10.64.127.133:65386 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:29:21.590 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [36b14986-1, L:/10.64.127.133:65386 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:29:21.591 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [749ea721] [36b14986-1] Response 200 OK
2025-04-17 18:29:21.594 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [36b14986-1, L:/10.64.127.133:65386 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:29:21.598 [reactor-http-nio-13] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=Unix 文件（至少）有两种大小}]}
2025-04-17 18:29:21.599 [reactor-http-nio-13] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Unix files have (at least) two sizes -> Unix 文件（至少）有两种大小
2025-04-17 18:29:21.599 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: Unix 文件（至少）有两种大小
2025-04-17 18:29:21.601 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43679764
2025-04-17 18:29:21.607 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679764, 排名: 60, 分数: 62
2025-04-17 18:29:21.607 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:21.607 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:29:22.758 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:29:22.760 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:22.760 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51c91d57] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:29:22.762 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:29:22.762 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [59bdea3c-23, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:29:22.762 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:22.762 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-23, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:22.762 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3959ce8d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:29:22.763 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:29:22.763 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [38a6d94b-13, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:29:22.764 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-13, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:22.764 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:22.764 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1419a716] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:29:22.765 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [9f3e7707-22, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:29:22.765 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-22, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.004 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-23, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.004 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51c91d57] [59bdea3c-23] Response 200 OK
2025-04-17 18:29:23.004 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.005 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [59bdea3c-23, L:/10.64.127.133:65351 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.005 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:23.005 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-13, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.005 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:29:23.005 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3959ce8d] [38a6d94b-13] Response 200 OK
2025-04-17 18:29:23.005 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.005 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:29:23.006 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:29:23.006 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [38a6d94b-13, L:/10.64.127.133:65365 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.006 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:23.006 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:29:23.007 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:29:23.007 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:29:23.008 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-22, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.008 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1419a716] [9f3e7707-22] Response 200 OK
2025-04-17 18:29:23.008 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.008 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [9f3e7707-22, L:/10.64.127.133:65361 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.008 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 18:29:23.008 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 18:29:23.008 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:23.009 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43707634,43693742,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:29:23.010 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:29:23.010 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:29:23.010 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 52, 分数: 59
2025-04-17 18:29:23.010 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 51, 分数: 110
2025-04-17 18:29:23.010 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:29:23.011 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:23.011 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [55e14c6e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:29:23.011 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:29:23.012 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [871f309e-28, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:29:23.012 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:23.012 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4707c122] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:29:23.012 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-28, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.012 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 18:29:23.012 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [b0b770dd-19, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:29:23.012 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-19, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.014 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 53, 分数: 216
2025-04-17 18:29:23.014 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:29:23.014 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:23.014 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68716a19] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:29:23.015 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [c2a016cf-11, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:29:23.015 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-11, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.219 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-28, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.220 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [55e14c6e] [871f309e-28] Response 200 OK
2025-04-17 18:29:23.220 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.221 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [871f309e-28, L:/10.64.127.133:65331 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.222 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:23.222 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:29:23.223 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:29:23.223 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:29:23.228 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 18:29:23.231 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 54, 分数: 217
2025-04-17 18:29:23.231 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:29:23.231 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:23.232 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [30bb3156] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:29:23.233 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientConnect - [961d0eeb-12, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:29:23.233 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-12, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.316 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-19, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.317 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4707c122] [b0b770dd-19] Response 200 OK
2025-04-17 18:29:23.317 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.317 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [b0b770dd-19, L:/10.64.127.133:65360 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.317 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:23.317 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:29:23.318 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:29:23.318 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:29:23.322 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703682
2025-04-17 18:29:23.324 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 55, 分数: 150
2025-04-17 18:29:23.324 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 18:29:23.325 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:23.325 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [19cccd1f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:29:23.326 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [5a8bcf5d-23, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 18:29:23.326 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-23, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.386 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-11, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.387 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [68716a19] [c2a016cf-11] Response 200 OK
2025-04-17 18:29:23.387 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.388 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [c2a016cf-11, L:/10.64.127.133:65366 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.388 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:23.388 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:29:23.389 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:29:23.389 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:29:23.392 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710986
2025-04-17 18:29:23.393 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 56, 分数: 18
2025-04-17 18:29:23.393 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714125
2025-04-17 18:29:23.394 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:23.394 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4277296b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714125.json
2025-04-17 18:29:23.394 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [7c5c6837-20, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714125.json, method=GET}
2025-04-17 18:29:23.394 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-20, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.435 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-12, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.435 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [30bb3156] [961d0eeb-12] Response 200 OK
2025-04-17 18:29:23.435 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.436 [reactor-http-nio-5] DEBUG r.n.http.client.HttpClientOperations - [961d0eeb-12, L:/10.64.127.133:65369 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.436 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:23.436 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:29:23.436 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:29:23.436 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:29:23.440 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 18:29:23.441 [reactor-http-nio-5] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 57, 分数: 126
2025-04-17 18:29:23.441 [reactor-http-nio-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679764
2025-04-17 18:29:23.442 [reactor-http-nio-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679764.json
2025-04-17 18:29:23.442 [reactor-http-nio-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fa6a780] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679764.json
2025-04-17 18:29:23.443 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [96848813-13, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679764.json, method=GET}
2025-04-17 18:29:23.443 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-13, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:29:23.570 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-23, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.571 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [19cccd1f] [5a8bcf5d-23] Response 200 OK
2025-04-17 18:29:23.571 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.572 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [5a8bcf5d-23, L:/10.64.127.133:65352 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.572 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:23.572 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:29:23.573 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 18:29:23.573 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:29:23.576 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678909
2025-04-17 18:29:23.578 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 58, 分数: 111
2025-04-17 18:29:23.628 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-20, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.628 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4277296b] [7c5c6837-20] Response 200 OK
2025-04-17 18:29:23.629 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.629 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [7c5c6837-20, L:/10.64.127.133:65362 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.629 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:23.630 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"thunderbong","descendants":2,"id":43714125,"kids":[43714892,43714255],"score":9,"time":1744876083,"title":"How the Merchants of Ifriqiya Coded Commerce Before Silicon","type":"story","url":"https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af"}
2025-04-17 18:29:23.630 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714125, by=thunderbong, title=How the Merchants of Ifriqiya Coded Commerce Before Silicon, url=https://medium.com/@macvsogjc/the-forgotten-syntax-of-salt-and-gold-how-the-merchants-of-ifriqiya-coded-commerce-before-silicon-d2e8a78e09af, type=story, time=1744876083
2025-04-17 18:29:23.630 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714125, 标题: How the Merchants of Ifriqiya Coded Commerce Before Silicon
2025-04-17 18:29:23.632 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714125
2025-04-17 18:29:23.634 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714125, 排名: 59, 分数: 9
2025-04-17 18:29:23.643 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-13, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:29:23.643 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fa6a780] [96848813-13] Response 200 OK
2025-04-17 18:29:23.643 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:29:23.644 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [96848813-13, L:/10.64.127.133:65367 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:29:23.644 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":25,"id":43679764,"kids":[43712948,43713403,43712174,43711952,43712677,43711953,43711878,43713252,43713113,43711864,43712112,43711705],"score":62,"time":1744625892,"title":"Unix files have (at least) two sizes","type":"story","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/UnixFilesTwoSizes"}
2025-04-17 18:29:23.644 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":25,"id":43679764,"kids":[43712948,43713403,43712174,43711952,43712677,43711953,43711878,43713252,43713113,43711864,43712112,43711705],"score":62,"time":1744625892,"title":"Unix files have (at least) two sizes","type":"story","url":"https://utcc.utoronto.ca/~cks/space/blog/unix/UnixFilesTwoSizes"}
2025-04-17 18:29:23.645 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679764, by=ingve, title=Unix files have (at least) two sizes, url=https://utcc.utoronto.ca/~cks/space/blog/unix/UnixFilesTwoSizes, type=story, time=1744625892
2025-04-17 18:29:23.645 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679764, 标题: Unix files have (at least) two sizes
2025-04-17 18:29:23.646 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679764
2025-04-17 18:29:23.647 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679764, 排名: 60, 分数: 62
2025-04-17 18:29:23.647 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:29:23.647 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:41:58.853 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:41:58.853 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:41:58.854 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:41:58.854 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2938c8b6] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:41:59.122 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-1, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:41:59.123 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-1, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:41:59.333 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-1, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:41:59.334 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2938c8b6] [07212646-1] Response 200 OK
2025-04-17 18:41:59.334 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:41:59.335 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-1, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:41:59.336 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:41:59.337 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:41:59.337 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:41:59.338 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:41:59.339 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:41:59.340 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:41:59.340 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14527620] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:41:59.340 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:41:59.340 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:41:59.340 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-2, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:41:59.341 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bad7ddd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:41:59.341 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-2, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:41:59.342 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:41:59.342 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:41:59.342 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [250c4717] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:41:59.550 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-2, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:41:59.551 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14527620] [07212646-2] Response 200 OK
2025-04-17 18:41:59.551 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:41:59.552 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-2, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:41:59.553 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43713604,43714517,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":393,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:41:59.554 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":191,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43713604,43714517,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":393,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:41:59.554 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:41:59.555 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:41:59.561 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:41:59.572 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 1, 分数: 393
2025-04-17 18:41:59.572 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:41:59.572 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:41:59.573 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [29ed8e47] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:41:59.586 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-1, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:41:59.586 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-1, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:41:59.593 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-1, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:41:59.593 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-1, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:41:59.792 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-1, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:41:59.792 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [250c4717] [05ec9f38-1] Response 200 OK
2025-04-17 18:41:59.792 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:41:59.792 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-1, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:41:59.792 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":122,"id":43714203,"kids":[43714467,43714868,43714466,43715010,43714478,43714580,43714972,43714502,43714611,43714593,43714850,43714751,43714739,43714887,43714597,43714436,43714434,43714661,43714786],"score":201,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:41:59.792 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":122,"id":43714203,"kids":[43714467,43714868,43714466,43715010,43714478,43714580,43714972,43714502,43714611,43714593,43714850,43714751,43714739,43714887,43714597,43714436,43714434,43714661,43714786],"score":201,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:41:59.793 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:41:59.793 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:41:59.795 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:41:59.801 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 3, 分数: 201
2025-04-17 18:41:59.801 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:41:59.802 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-1, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:41:59.802 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:41:59.802 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bad7ddd] [d9a32175-1] Response 200 OK
2025-04-17 18:41:59.802 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4292fc21] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:41:59.803 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:41:59.803 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-3, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:41:59.803 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-1, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:41:59.803 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-3, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:41:59.803 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":20,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:41:59.803 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":5,"id":43714594,"kids":[43714794,43714858,43714790],"score":20,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:41:59.804 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:41:59.804 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:41:59.805 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:41:59.809 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 20
2025-04-17 18:41:59.809 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:41:59.810 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:41:59.810 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47c839a6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:41:59.810 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-2, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:41:59.810 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-2, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:41:59.818 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-1, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:41:59.818 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-1, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:00.013 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-3, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.014 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4292fc21] [07212646-3] Response 200 OK
2025-04-17 18:42:00.014 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.015 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-3, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.015 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-2, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.015 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":9,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:42:00.015 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47c839a6] [05ec9f38-2] Response 200 OK
2025-04-17 18:42:00.015 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":9,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:42:00.015 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.016 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-2, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.016 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:42:00.016 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:42:00.016 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":7,"id":43714004,"kids":[43714642,43714906],"score":36,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:42:00.016 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":7,"id":43714004,"kids":[43714642,43714906],"score":36,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:42:00.016 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:42:00.017 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:42:00.018 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 18:42:00.019 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:42:00.025 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 5, 分数: 9
2025-04-17 18:42:00.025 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:42:00.026 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:42:00.026 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1821639a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:42:00.026 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-2, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:42:00.026 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 6, 分数: 36
2025-04-17 18:42:00.027 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-2, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:00.027 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714902
2025-04-17 18:42:00.027 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-1, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.027 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 18:42:00.027 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [29ed8e47] [a0893329-1] Response 200 OK
2025-04-17 18:42:00.027 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.027 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15897a8d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 18:42:00.027 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-1, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.027 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":89,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:42:00.027 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":89,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:42:00.028 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:42:00.028 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:42:00.030 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:42:00.035 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 4, 分数: 89
2025-04-17 18:42:00.035 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:42:00.035 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:42:00.036 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1971953e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:42:00.036 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-3, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:42:00.036 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-4, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714902.json, method=GET}
2025-04-17 18:42:00.036 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-3, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:00.036 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-4, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:00.235 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-2, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.235 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1821639a] [d9a32175-2] Response 200 OK
2025-04-17 18:42:00.235 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.236 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-2, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.236 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":5,"id":43678144,"kids":[43714968,43714891,43714955,43714948,43678721,43714994],"score":38,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:42:00.236 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":5,"id":43678144,"kids":[43714968,43714891,43714955,43714948,43678721,43714994],"score":38,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:42:00.236 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:42:00.236 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:42:00.238 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:42:00.238 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-3, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.238 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1971953e] [05ec9f38-3] Response 200 OK
2025-04-17 18:42:00.238 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.238 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-3, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.239 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":56,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:42:00.239 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":56,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:42:00.239 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:42:00.239 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:42:00.240 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:42:00.242 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 7, 分数: 38
2025-04-17 18:42:00.242 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:42:00.242 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:42:00.242 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [777dc24c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:42:00.243 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-2, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:42:00.243 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-2, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:00.244 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 9, 分数: 56
2025-04-17 18:42:00.244 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-4, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.244 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [15897a8d] [07212646-4] Response 200 OK
2025-04-17 18:42:00.244 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.245 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-4, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.245 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"reddavis","descendants":0,"id":43714902,"score":4,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 18:42:00.245 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"reddavis","descendants":0,"id":43714902,"score":4,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 18:42:00.245 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714902, by=reddavis, title=Building an AI That Watches Rugby, url=https://nickjones.tech/ai-watching-rugby/, type=story, time=1744885123
2025-04-17 18:42:00.245 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714902, 标题: Building an AI That Watches Rugby
2025-04-17 18:42:00.246 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714902
2025-04-17 18:42:00.247 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Building an AI That Watches Rugby
2025-04-17 18:42:00.247 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - 翻译请求：Building an AI That Watches Rugby
2025-04-17 18:42:00.247 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:42:00.248 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [c0d3128] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:42:00.448 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-2, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:00.448 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [777dc24c] [a0893329-2] Response 200 OK
2025-04-17 18:42:00.448 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:00.449 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-2, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:00.449 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":8,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:42:00.449 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":3,"id":43714476,"kids":[43714835],"score":8,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:42:00.449 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:42:00.450 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:42:00.452 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:42:00.457 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 10, 分数: 8
2025-04-17 18:42:01.032 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [5bde3fd5-1, L:/10.64.127.133:50003 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:42:01.453 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [5bde3fd5-1, L:/10.64.127.133:50003 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:42:01.453 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [c0d3128] [5bde3fd5-1] Response 200 OK
2025-04-17 18:42:01.454 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [5bde3fd5-1, L:/10.64.127.133:50003 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:42:01.455 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=打造观看橄榄球比赛的人工智能}]}
2025-04-17 18:42:01.455 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Building an AI That Watches Rugby -> 打造观看橄榄球比赛的人工智能
2025-04-17 18:42:01.455 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 打造观看橄榄球比赛的人工智能
2025-04-17 18:42:01.456 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714902
2025-04-17 18:42:01.462 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714902, 排名: 8, 分数: 4
2025-04-17 18:42:01.462 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:42:01.462 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:42:03.476 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:42:03.477 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:42:03.477 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [633fbb18] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:42:03.478 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:42:03.478 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-3, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:42:03.479 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-3, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.479 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:42:03.480 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [337f9744] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:42:03.480 [parallel-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:42:03.480 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-4, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:42:03.480 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-4, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.480 [parallel-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:42:03.481 [parallel-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [484458a1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:42:03.481 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-5, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:42:03.481 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-5, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.683 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-4, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:03.683 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [337f9744] [05ec9f38-4] Response 200 OK
2025-04-17 18:42:03.684 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:03.684 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-4, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:03.685 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:42:03.685 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:42:03.686 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:42:03.686 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-3, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:03.686 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:42:03.687 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [633fbb18] [d9a32175-3] Response 200 OK
2025-04-17 18:42:03.688 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:03.688 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-5, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:03.688 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-3, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:03.688 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [484458a1] [07212646-5] Response 200 OK
2025-04-17 18:42:03.689 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":425,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:42:03.689 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:03.689 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":114,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":425,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:42:03.690 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-5, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:03.690 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:42:03.690 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":241,"id":43708025,"kids":[43710093,43711158,43708197,43709576,43714841,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:42:03.690 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:42:03.691 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":241,"id":43708025,"kids":[43710093,43711158,43708197,43709576,43714841,43714506,43713943,43712518,43711223,43709262,43714112,43711134,43709349,43709894,43709830,43713807,43714244,43708649,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":438,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:42:03.691 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:42:03.692 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:42:03.692 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:42:03.695 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:42:03.696 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:42:03.699 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 12, 分数: 1
2025-04-17 18:42:03.699 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:42:03.700 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:42:03.700 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [729b715f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:42:03.700 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 11, 分数: 425
2025-04-17 18:42:03.700 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:42:03.701 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:42:03.701 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60de0212] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:42:03.701 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-5, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:42:03.701 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-5, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.701 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 13, 分数: 438
2025-04-17 18:42:03.702 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:42:03.702 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:42:03.702 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7db830aa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:42:03.702 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-4, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:42:03.702 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-3, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:42:03.702 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-4, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.702 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-3, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.905 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-5, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:03.905 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60de0212] [05ec9f38-5] Response 200 OK
2025-04-17 18:42:03.905 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:03.906 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-5, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:03.906 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:42:03.906 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:42:03.912 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-3, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:03.912 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:42:03.912 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [729b715f] [a0893329-3] Response 200 OK
2025-04-17 18:42:03.913 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:42:03.913 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:03.913 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-3, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:03.913 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":117,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:42:03.913 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":52,"id":43679906,"kids":[43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":117,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:42:03.913 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:42:03.913 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:42:03.914 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:42:03.914 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:42:03.920 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 15, 分数: 20
2025-04-17 18:42:03.920 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:42:03.920 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 14, 分数: 117
2025-04-17 18:42:03.920 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:42:03.920 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27cf229] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:42:03.921 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43697717
2025-04-17 18:42:03.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-6, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:42:03.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-6, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.921 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 18:42:03.921 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-4, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:03.921 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74aa68e3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 18:42:03.921 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7db830aa] [d9a32175-4] Response 200 OK
2025-04-17 18:42:03.921 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:03.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-4, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43697717.json, method=GET}
2025-04-17 18:42:03.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-4, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:03.921 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-4, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:03.921 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":156,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:42:03.921 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43714056,43713977,43712909,43710745,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":156,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:42:03.922 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:42:03.922 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:42:03.923 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:42:03.928 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 16, 分数: 156
2025-04-17 18:42:03.928 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:42:03.928 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:42:03.928 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [131d982] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:42:03.928 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-6, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:42:03.928 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-6, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:04.126 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-4, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:04.126 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [74aa68e3] [a0893329-4] Response 200 OK
2025-04-17 18:42:04.127 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:04.127 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-4, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:04.128 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"randomwalker","descendants":0,"id":43697717,"score":6,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 18:42:04.128 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"randomwalker","descendants":0,"id":43697717,"score":6,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 18:42:04.128 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43697717, by=randomwalker, title=AI as Normal Technology, url=https://knightcolumbia.org/content/ai-as-normal-technology, type=story, time=1744747507
2025-04-17 18:42:04.128 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43697717, 标题: AI as Normal Technology
2025-04-17 18:42:04.131 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-6, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:04.132 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43697717
2025-04-17 18:42:04.132 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [131d982] [05ec9f38-6] Response 200 OK
2025-04-17 18:42:04.132 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:04.132 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-6, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:04.132 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:42:04.133 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":1,"id":43674892,"kids":[43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:42:04.133 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:42:04.133 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:42:04.133 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: AI as Normal Technology
2025-04-17 18:42:04.133 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - 翻译请求：AI as Normal Technology
2025-04-17 18:42:04.133 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:42:04.134 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4085c64b] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:42:04.134 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [5bde3fd5-2, L:/10.64.127.133:50003 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:42:04.135 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:42:04.136 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-6, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:04.136 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27cf229] [07212646-6] Response 200 OK
2025-04-17 18:42:04.136 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:04.136 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-6, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:04.136 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43710410,43694671,43714668,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43694148,43713637,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":473,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:42:04.136 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":580,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43710410,43694671,43714668,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694245,43694619,43695540,43712127,43694148,43713637,43690509,43708835,43709318,43709593,43711513,43694675,43707773,43694262,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":473,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:42:04.137 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:42:04.137 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:42:04.138 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:42:04.141 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 19, 分数: 14
2025-04-17 18:42:04.141 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:42:04.142 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:42:04.142 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [63e31e6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:42:04.142 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-5, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:42:04.142 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-5, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:04.144 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 17, 分数: 473
2025-04-17 18:42:04.350 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-5, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:04.351 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [63e31e6] [d9a32175-5] Response 200 OK
2025-04-17 18:42:04.351 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:04.351 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-5, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:04.351 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":25,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:42:04.352 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":25,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:42:04.352 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:42:04.352 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:42:04.354 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:42:04.361 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 20, 分数: 25
2025-04-17 18:42:04.558 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [5bde3fd5-2, L:/10.64.127.133:50003 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:42:04.559 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4085c64b] [5bde3fd5-2] Response 200 OK
2025-04-17 18:42:04.559 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [5bde3fd5-2, L:/10.64.127.133:50003 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:42:04.560 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=作为普通技术的人工智能}]}
2025-04-17 18:42:04.560 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - DeepL翻译成功: AI as Normal Technology -> 作为普通技术的人工智能
2025-04-17 18:42:04.560 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 作为普通技术的人工智能
2025-04-17 18:42:04.561 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43697717
2025-04-17 18:42:04.566 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43697717, 排名: 18, 分数: 6
2025-04-17 18:42:04.567 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:42:04.567 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:42:08.573 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:42:08.574 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:42:08.574 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69b18940] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:42:08.574 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:42:08.574 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-5, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:42:08.575 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:42:08.575 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-5, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:08.575 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1449f8cd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:42:08.575 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:42:08.575 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-7, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:42:08.575 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:42:08.575 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-7, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:08.575 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58922664] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:42:08.576 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-7, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:42:08.576 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-7, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:08.778 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-7, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:08.779 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1449f8cd] [05ec9f38-7] Response 200 OK
2025-04-17 18:42:08.779 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:08.779 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-7, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:08.779 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-5, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:08.779 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":48,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":125,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:42:08.779 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [69b18940] [a0893329-5] Response 200 OK
2025-04-17 18:42:08.780 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":48,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":125,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:42:08.780 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:08.780 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:42:08.780 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-5, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:08.780 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:42:08.780 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":198,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:42:08.780 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":198,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:42:08.780 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:42:08.781 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:42:08.782 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:42:08.782 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:42:08.789 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 21, 分数: 198
2025-04-17 18:42:08.789 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:42:08.789 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:42:08.789 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [40f376f9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:42:08.790 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-6, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:42:08.790 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-7, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:08.790 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-6, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:08.790 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58922664] [07212646-7] Response 200 OK
2025-04-17 18:42:08.790 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 22, 分数: 125
2025-04-17 18:42:08.790 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:08.790 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:42:08.790 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-7, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:08.790 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:42:08.790 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:42:08.790 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e4d9c45] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:42:08.791 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43708215,43711674,43712641,43712140],"score":355,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:42:08.791 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:42:08.791 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:42:08.792 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:42:08.796 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 23, 分数: 355
2025-04-17 18:42:08.796 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:42:08.796 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:42:08.796 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [13f966aa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:42:08.796 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-6, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:42:08.796 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-8, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:42:08.797 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-6, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:08.797 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-8, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:08.997 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-6, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:08.998 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [40f376f9] [d9a32175-6] Response 200 OK
2025-04-17 18:42:08.998 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:08.999 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-6, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:08.999 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43676796,43714140],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:42:08.999 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43676796,43714140],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:42:09.000 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:42:09.000 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:42:09.001 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-8, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:09.001 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-6, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:09.001 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [13f966aa] [05ec9f38-8] Response 200 OK
2025-04-17 18:42:09.002 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e4d9c45] [a0893329-6] Response 200 OK
2025-04-17 18:42:09.002 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:09.002 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:09.003 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-8, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:09.003 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-6, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:09.004 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":468,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:42:09.004 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":315,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43714281,43711929,43714232,43711749,43712661,43712922,43713686,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":332,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:42:09.004 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:42:09.004 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712738,43710389,43711546,43712032,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":468,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:42:09.004 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":315,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43714281,43711929,43714232,43711749,43712661,43712922,43713686,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":332,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:42:09.005 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:42:09.005 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:42:09.005 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:42:09.005 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:42:09.007 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:42:09.008 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:42:09.012 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 24, 分数: 45
2025-04-17 18:42:09.012 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:42:09.012 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:42:09.012 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5def389d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:42:09.012 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 25, 分数: 332
2025-04-17 18:42:09.012 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 26, 分数: 468
2025-04-17 18:42:09.012 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:42:09.013 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:42:09.013 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c45e88a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:42:09.013 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:42:09.013 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-7, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:42:09.013 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:42:09.013 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-7, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:09.013 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60de0aa1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:42:09.013 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-9, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:42:09.013 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-8, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:42:09.013 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-9, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:09.013 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-8, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:09.217 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-9, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:09.218 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60de0aa1] [05ec9f38-9] Response 200 OK
2025-04-17 18:42:09.218 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:09.218 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-9, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:09.218 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43709029,43712158,43714561,43707380,43712010,43707184,43707395,43707982,43714654,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:42:09.218 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43714708,43713123,43711140,43707254,43712968,43707467,43713744,43713915,43712935,43709029,43712158,43714561,43707380,43712010,43707184,43707395,43707982,43714654,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":300,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:42:09.219 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:42:09.219 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:42:09.220 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-7, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:09.220 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c45e88a] [d9a32175-7] Response 200 OK
2025-04-17 18:42:09.220 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:09.220 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-7, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:09.220 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:42:09.221 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":382,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:42:09.221 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-8, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:09.221 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:42:09.221 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:42:09.221 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5def389d] [07212646-8] Response 200 OK
2025-04-17 18:42:09.221 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:09.221 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-8, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:09.221 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43705679,43705739,43714770,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43705528,43713665,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:42:09.221 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":155,"id":43704904,"kids":[43708124,43706249,43705510,43706453,43710094,43706889,43707582,43705679,43705739,43714770,43707942,43705539,43706712,43709846,43710475,43714084,43705584,43705646,43711233,43713433,43705667,43713542,43713886,43705658,43705959,43708803,43710306,43705528,43713665,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43707322,43705546,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":325,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:42:09.222 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:42:09.222 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:42:09.222 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 18:42:09.223 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 18:42:09.224 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:42:09.228 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 28, 分数: 382
2025-04-17 18:42:09.228 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:42:09.229 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:42:09.229 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b400517] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:42:09.229 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 29, 分数: 300
2025-04-17 18:42:09.231 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 27, 分数: 325
2025-04-17 18:42:09.231 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-7, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:42:09.231 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-7, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:09.437 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-7, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:09.437 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b400517] [a0893329-7] Response 200 OK
2025-04-17 18:42:09.437 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:09.438 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-7, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:09.438 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":5,"id":43678533,"kids":[43714454,43714026,43713754],"score":87,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:42:09.438 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":5,"id":43678533,"kids":[43714454,43714026,43713754],"score":87,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:42:09.438 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:42:09.438 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:42:09.440 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 18:42:09.446 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 30, 分数: 87
2025-04-17 18:42:09.447 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:42:09.447 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:42:15.461 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:42:15.462 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:42:15.462 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [792009bb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:42:15.462 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:42:15.462 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-8, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:42:15.463 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:42:15.463 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-8, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.463 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24a72fd8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:42:15.463 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:42:15.463 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-10, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:42:15.463 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-10, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.463 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:42:15.464 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ccb38ec] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:42:15.464 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-9, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:42:15.464 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-9, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.666 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-10, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:15.667 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [24a72fd8] [05ec9f38-10] Response 200 OK
2025-04-17 18:42:15.667 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:15.667 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-10, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:15.667 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:42:15.667 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":26,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:42:15.667 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:42:15.667 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:42:15.669 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 18:42:15.670 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-8, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:15.670 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [792009bb] [d9a32175-8] Response 200 OK
2025-04-17 18:42:15.670 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:15.671 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-8, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:15.671 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":45,"id":43690828,"kids":[43714990,43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":137,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:42:15.671 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":45,"id":43690828,"kids":[43714990,43714289,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":137,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:42:15.671 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:42:15.671 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:42:15.672 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-9, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:15.672 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ccb38ec] [07212646-9] Response 200 OK
2025-04-17 18:42:15.672 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:15.672 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-9, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:15.673 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:42:15.673 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:42:15.673 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 18:42:15.674 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:42:15.674 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:42:15.675 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 18:42:15.676 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 32, 分数: 26
2025-04-17 18:42:15.676 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:42:15.676 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:42:15.676 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a99327c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:42:15.677 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 31, 分数: 137
2025-04-17 18:42:15.677 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:42:15.678 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:42:15.678 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [253b416f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:42:15.678 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-11, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:42:15.678 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-11, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.679 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 33, 分数: 201
2025-04-17 18:42:15.679 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:42:15.679 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:42:15.679 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [729688f4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:42:15.679 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-9, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:42:15.679 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-8, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:42:15.679 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-9, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.679 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-8, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.882 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-11, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:15.883 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [253b416f] [05ec9f38-11] Response 200 OK
2025-04-17 18:42:15.883 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:15.884 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-11, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:15.884 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:42:15.884 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:42:15.885 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:42:15.885 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:42:15.886 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-8, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:15.886 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a99327c] [a0893329-8] Response 200 OK
2025-04-17 18:42:15.886 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:15.887 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-8, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:15.887 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":463,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43715005,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:42:15.887 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-9, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:15.887 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":463,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43715005,43713896,43707912,43707838,43708890,43707849,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43713968,43711020,43709949,43710951,43712397,43708576,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":504,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:42:15.887 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [729688f4] [d9a32175-9] Response 200 OK
2025-04-17 18:42:15.888 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:15.887 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 18:42:15.888 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-9, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:15.888 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:42:15.888 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43714662,43713899,43713731,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:42:15.888 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43714662,43713899,43713731,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:42:15.888 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:42:15.888 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:42:15.888 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:42:15.890 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 18:42:15.890 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 18:42:15.894 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 35, 分数: 133
2025-04-17 18:42:15.894 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:42:15.894 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:42:15.894 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53511b24] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:42:15.895 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 36, 分数: 125
2025-04-17 18:42:15.895 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:42:15.895 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:42:15.895 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73c4c9a5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:42:15.895 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-12, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:42:15.895 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-12, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.896 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 34, 分数: 504
2025-04-17 18:42:15.896 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:42:15.896 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:42:15.896 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1a39514b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:42:15.896 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-10, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:42:15.896 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-10, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:42:15.897 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-10, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:15.897 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-10, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:16.099 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-12, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:16.100 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73c4c9a5] [05ec9f38-12] Response 200 OK
2025-04-17 18:42:16.100 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:16.100 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-12, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:16.101 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:42:16.101 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:42:16.101 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:42:16.101 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:42:16.104 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-10, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:16.104 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 18:42:16.104 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1a39514b] [d9a32175-10] Response 200 OK
2025-04-17 18:42:16.105 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:16.105 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-10, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:16.105 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:42:16.105 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:42:16.106 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:42:16.106 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:42:16.107 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-10, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:16.107 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53511b24] [07212646-10] Response 200 OK
2025-04-17 18:42:16.107 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:16.107 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-10, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:16.107 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":855,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43714856,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43711094,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:42:16.107 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 18:42:16.107 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":855,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43714856,43713017,43693034,43693290,43692820,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43711094,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":656,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:42:16.107 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:42:16.107 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:42:16.109 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 18:42:16.109 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 38, 分数: 43
2025-04-17 18:42:16.109 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:42:16.110 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:42:16.110 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f550d67] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:42:16.112 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 39, 分数: 122
2025-04-17 18:42:16.114 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 37, 分数: 656
2025-04-17 18:42:16.114 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-9, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:42:16.114 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-9, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:16.320 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-9, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:16.320 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f550d67] [a0893329-9] Response 200 OK
2025-04-17 18:42:16.320 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:16.321 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-9, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:16.321 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":20,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:42:16.321 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":20,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:42:16.321 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:42:16.322 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:42:16.323 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 18:42:16.330 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 40, 分数: 20
2025-04-17 18:42:16.330 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:42:16.330 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:42:24.340 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:42:24.341 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:42:24.342 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [37136211] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:42:24.342 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:42:24.343 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-13, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:42:24.343 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:42:24.343 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-13, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.344 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [304f615] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:42:24.344 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:42:24.345 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-11, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:42:24.345 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:42:24.345 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-11, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.345 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6eeb167] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:42:24.345 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-11, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:42:24.346 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-11, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.548 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-13, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.549 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [37136211] [05ec9f38-13] Response 200 OK
2025-04-17 18:42:24.549 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.550 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-13, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.550 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:42:24.551 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:42:24.551 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:42:24.551 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:42:24.551 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-11, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.552 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [304f615] [d9a32175-11] Response 200 OK
2025-04-17 18:42:24.552 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.552 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-11, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.552 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:42:24.553 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:42:24.553 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:42:24.553 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:42:24.553 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 18:42:24.553 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-11, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.554 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6eeb167] [07212646-11] Response 200 OK
2025-04-17 18:42:24.554 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.554 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-11, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.555 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":1,"id":43714433,"kids":[43714961],"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:42:24.555 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":1,"id":43714433,"kids":[43714961],"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:42:24.555 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:42:24.555 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:42:24.555 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 18:42:24.557 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714433
2025-04-17 18:42:24.560 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 41, 分数: 674
2025-04-17 18:42:24.560 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:42:24.561 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:42:24.561 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d795ee5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:42:24.561 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 42, 分数: 155
2025-04-17 18:42:24.561 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:42:24.561 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:42:24.561 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c7ea448] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:42:24.562 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-14, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:42:24.562 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-14, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.562 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 43, 分数: 5
2025-04-17 18:42:24.562 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:42:24.562 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:42:24.562 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [732d835f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:42:24.563 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-12, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:42:24.563 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-10, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:42:24.563 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-12, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.563 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-10, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.769 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-10, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.769 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d795ee5] [a0893329-10] Response 200 OK
2025-04-17 18:42:24.770 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.770 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-10, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.770 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:42:24.770 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43714730,43711052,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:42:24.771 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:42:24.771 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:42:24.771 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-12, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.771 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [732d835f] [d9a32175-12] Response 200 OK
2025-04-17 18:42:24.771 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.772 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-12, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.772 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:42:24.772 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:42:24.773 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:42:24.773 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:42:24.773 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-14, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.773 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c7ea448] [05ec9f38-14] Response 200 OK
2025-04-17 18:42:24.773 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 18:42:24.774 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.774 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-14, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.774 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:42:24.774 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:42:24.775 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:42:24.775 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 18:42:24.775 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:42:24.777 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 18:42:24.780 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 44, 分数: 159
2025-04-17 18:42:24.780 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:42:24.781 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:42:24.781 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [599e4182] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:42:24.781 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 46, 分数: 18
2025-04-17 18:42:24.781 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-12, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:42:24.782 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-12, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.782 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:42:24.782 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:42:24.782 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [214918b6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:42:24.782 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 45, 分数: 39
2025-04-17 18:42:24.782 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:42:24.783 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-13, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:42:24.783 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:42:24.783 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-13, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.783 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [589182c3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:42:24.783 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-15, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:42:24.783 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-15, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:24.987 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-15, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.987 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [589182c3] [05ec9f38-15] Response 200 OK
2025-04-17 18:42:24.987 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.988 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-15, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.988 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:42:24.988 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":40,"id":43705144,"kids":[43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":115,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:42:24.988 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:42:24.988 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:42:24.990 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 18:42:24.991 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-12, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.991 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [599e4182] [07212646-12] Response 200 OK
2025-04-17 18:42:24.991 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.992 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-12, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:24.992 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:42:24.992 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:42:24.992 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:42:24.992 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:42:24.995 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 18:42:24.998 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-13, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:24.998 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [214918b6] [d9a32175-13] Response 200 OK
2025-04-17 18:42:24.998 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:24.999 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-13, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:25.000 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43714982,43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:42:25.000 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43714982,43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:42:25.000 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:42:25.000 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:42:25.002 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 49, 分数: 115
2025-04-17 18:42:25.002 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:42:25.003 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:42:25.003 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 47, 分数: 99
2025-04-17 18:42:25.003 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 18:42:25.004 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14666a19] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:42:25.004 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-11, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:42:25.005 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-11, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:25.013 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 48, 分数: 45
2025-04-17 18:42:25.210 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-11, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:25.211 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14666a19] [a0893329-11] Response 200 OK
2025-04-17 18:42:25.211 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:25.212 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-11, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:25.212 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43711396,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:42:25.212 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":52,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43711396,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:42:25.212 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:42:25.212 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:42:25.216 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 18:42:25.222 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 50, 分数: 127
2025-04-17 18:42:25.222 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:42:25.222 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:42:35.223 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:42:35.223 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:42:35.224 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75163bff] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:42:35.225 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:42:35.225 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-13, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:42:35.225 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:42:35.225 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-13, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.225 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c9d455a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:42:35.225 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:42:35.225 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-16, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:42:35.225 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:42:35.226 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-16, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.226 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [476e02e1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:42:35.226 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-14, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:42:35.226 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-14, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.429 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-16, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.429 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c9d455a] [05ec9f38-16] Response 200 OK
2025-04-17 18:42:35.431 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.431 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-16, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.431 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:42:35.431 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:42:35.431 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:42:35.432 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:42:35.432 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-13, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.432 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75163bff] [07212646-13] Response 200 OK
2025-04-17 18:42:35.432 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.432 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-13, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.433 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:42:35.433 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":19,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:42:35.434 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:42:35.434 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:42:35.434 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 18:42:35.435 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-14, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.435 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [476e02e1] [d9a32175-14] Response 200 OK
2025-04-17 18:42:35.435 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.435 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-14, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.435 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:42:35.435 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43713826,43710291,43710438,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:42:35.435 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:42:35.435 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:42:35.435 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714269
2025-04-17 18:42:35.437 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 18:42:35.441 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 52, 分数: 110
2025-04-17 18:42:35.441 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:42:35.441 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:42:35.441 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [505086a9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:42:35.442 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 51, 分数: 19
2025-04-17 18:42:35.442 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 53, 分数: 38
2025-04-17 18:42:35.442 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:42:35.442 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:42:35.443 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43c064a8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:42:35.443 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:42:35.443 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-17, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:42:35.443 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:42:35.443 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-17, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.443 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41f3703e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:42:35.443 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-15, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:42:35.443 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-12, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:42:35.443 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-15, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.443 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-12, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.648 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-12, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.648 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [505086a9] [a0893329-12] Response 200 OK
2025-04-17 18:42:35.649 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.649 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-12, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.649 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:42:35.650 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43714216,43711578,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:42:35.650 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:42:35.650 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:42:35.651 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-15, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.651 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41f3703e] [d9a32175-15] Response 200 OK
2025-04-17 18:42:35.651 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.652 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-15, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.652 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:42:35.652 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:42:35.652 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:42:35.652 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:42:35.652 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 18:42:35.653 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 18:42:35.654 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-17, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.654 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43c064a8] [05ec9f38-17] Response 200 OK
2025-04-17 18:42:35.654 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.654 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-17, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.654 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:42:35.654 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:42:35.655 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:42:35.655 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:42:35.656 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 18:42:35.658 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 54, 分数: 59
2025-04-17 18:42:35.658 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:42:35.658 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:42:35.659 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b02130f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:42:35.659 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 56, 分数: 217
2025-04-17 18:42:35.659 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [07212646-14, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:42:35.659 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-14, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.659 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:42:35.659 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:42:35.659 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a22242a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:42:35.660 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientConnect - [d9a32175-16, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:42:35.660 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-16, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.660 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 55, 分数: 216
2025-04-17 18:42:35.660 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710986
2025-04-17 18:42:35.660 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:42:35.660 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [212c361b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710986.json
2025-04-17 18:42:35.661 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [a0893329-13, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710986.json, method=GET}
2025-04-17 18:42:35.661 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-13, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.867 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-13, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.867 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [212c361b] [a0893329-13] Response 200 OK
2025-04-17 18:42:35.867 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.868 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [a0893329-13, L:/10.64.127.133:50002 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.868 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:42:35.868 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sea-gold","descendants":2,"id":43710986,"kids":[43713107,43713212],"score":18,"time":1744841979,"title":"Kotlin 101: Type Classes Quickly Explained","type":"story","url":"https://rockthejvm.com/articles/kotlin-101-type-classes"}
2025-04-17 18:42:35.868 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710986, by=sea-gold, title=Kotlin 101: Type Classes Quickly Explained, url=https://rockthejvm.com/articles/kotlin-101-type-classes, type=story, time=1744841979
2025-04-17 18:42:35.868 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710986, 标题: Kotlin 101: Type Classes Quickly Explained
2025-04-17 18:42:35.870 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710986
2025-04-17 18:42:35.870 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-16, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.871 [reactor-http-nio-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a22242a] [d9a32175-16] Response 200 OK
2025-04-17 18:42:35.871 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.871 [reactor-http-nio-3] DEBUG r.n.http.client.HttpClientOperations - [d9a32175-16, L:/10.64.127.133:50000 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.871 [reactor-http-nio-3] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:42:35.871 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":126,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:42:35.871 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:42:35.871 [reactor-http-nio-3] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:42:35.873 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 18:42:35.876 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710986, 排名: 59, 分数: 18
2025-04-17 18:42:35.877 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 18:42:35.877 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:42:35.877 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ff048bf] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 18:42:35.878 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientConnect - [05ec9f38-18, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 18:42:35.878 [reactor-http-nio-3] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 58, 分数: 126
2025-04-17 18:42:35.878 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-18, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:42:35.878 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-14, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:35.878 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b02130f] [07212646-14] Response 200 OK
2025-04-17 18:42:35.878 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:35.879 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [07212646-14, L:/10.64.127.133:49999 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:35.879 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:42:35.879 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:42:35.879 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:42:35.879 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:42:35.881 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703682
2025-04-17 18:42:35.887 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 57, 分数: 150
2025-04-17 18:42:36.081 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-18, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:42:36.082 [reactor-http-nio-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6ff048bf] [05ec9f38-18] Response 200 OK
2025-04-17 18:42:36.082 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:42:36.082 [reactor-http-nio-4] DEBUG r.n.http.client.HttpClientOperations - [05ec9f38-18, L:/10.64.127.133:50001 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:42:36.082 [reactor-http-nio-4] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:42:36.082 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":41,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 18:42:36.083 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 18:42:36.083 [reactor-http-nio-4] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 18:42:36.085 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678909
2025-04-17 18:42:36.091 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 60, 分数: 111
2025-04-17 18:42:36.091 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:42:36.092 [reactor-http-nio-4] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 18:56:58.873 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 18:56:58.873 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 18:56:58.875 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:56:58.875 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [705ccc6c] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 18:57:20.250 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-1, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 18:57:20.251 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-1, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:20.534 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-1, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:20.535 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [705ccc6c] [669763d9-1] Response 200 OK
2025-04-17 18:57:20.535 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:20.535 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-1, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:20.536 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 18:57:20.536 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 18:57:20.536 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 18:57:20.536 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 18:57:20.536 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 18:57:20.537 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:57:20.538 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e36da93] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 18:57:20.538 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 18:57:20.538 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-2, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 18:57:20.539 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-2, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:20.539 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:57:20.539 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2eed3e9e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 18:57:20.540 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 18:57:20.541 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:57:20.541 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1fd2357b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 18:57:20.745 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-2, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:20.746 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e36da93] [669763d9-2] Response 200 OK
2025-04-17 18:57:20.746 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:20.746 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-2, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:20.747 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":193,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43713604,43714517,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":400,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:57:20.747 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":193,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43713604,43714517,43713456,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":400,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 18:57:20.747 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 18:57:20.747 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 18:57:20.754 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 18:57:20.765 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 1, 分数: 400
2025-04-17 18:57:20.765 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 18:57:20.765 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:57:20.765 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45a03a1a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 18:57:41.821 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-1, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 18:57:41.821 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-1, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:41.841 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-1, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 18:57:41.842 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-1, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.022 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-1, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.023 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2eed3e9e] [91f3e345-1] Response 200 OK
2025-04-17 18:57:42.023 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.023 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-1, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.023 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":6,"id":43714594,"kids":[43714794,43714858,43714790],"score":23,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:57:42.023 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":6,"id":43714594,"kids":[43714794,43714858,43714790],"score":23,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 18:57:42.023 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 18:57:42.024 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 18:57:42.025 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 18:57:42.032 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 2, 分数: 23
2025-04-17 18:57:42.032 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 18:57:42.032 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:57:42.032 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51531055] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 18:57:42.032 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-3, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 18:57:42.032 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-3, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.050 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-1, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.050 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1fd2357b] [059c0335-1] Response 200 OK
2025-04-17 18:57:42.051 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.051 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-1, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.051 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":143,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714972,43714502,43715010,43714611,43715070,43714593,43714850,43714751,43714739,43714887,43714597,43714436,43714434,43714661,43714786],"score":221,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:57:42.051 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":143,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714972,43714502,43715010,43714611,43715070,43714593,43714850,43714751,43714739,43714887,43714597,43714436,43714434,43714661,43714786],"score":221,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 18:57:42.052 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 18:57:42.052 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 18:57:42.053 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 18:57:42.053 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-1, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 18:57:42.054 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-1, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.061 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 3, 分数: 221
2025-04-17 18:57:42.061 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 18:57:42.062 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:57:42.062 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [307ebf78] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 18:57:42.062 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-2, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 18:57:42.062 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-2, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.245 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-3, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.245 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [51531055] [669763d9-3] Response 200 OK
2025-04-17 18:57:42.245 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.246 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-3, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.246 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":92,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:57:42.246 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":92,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 18:57:42.246 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 18:57:42.247 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 18:57:42.250 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 18:57:42.255 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 5, 分数: 92
2025-04-17 18:57:42.256 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714959
2025-04-17 18:57:42.256 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 18:57:42.256 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f670c7e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 18:57:42.256 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-2, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714959.json, method=GET}
2025-04-17 18:57:42.257 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-2, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.264 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-1, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.265 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45a03a1a] [447dfe04-1] Response 200 OK
2025-04-17 18:57:42.265 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-2, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.265 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.265 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [307ebf78] [91f3e345-2] Response 200 OK
2025-04-17 18:57:42.265 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.265 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-1, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.265 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-2, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.265 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":14,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:57:42.265 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":7,"id":43678144,"kids":[43715094,43714968,43714891,43715082,43714955,43714948,43678721,43714994],"score":52,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:57:42.265 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":14,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 18:57:42.265 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":7,"id":43678144,"kids":[43715094,43714968,43714891,43715082,43714955,43714948,43678721,43714994],"score":52,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 18:57:42.266 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 18:57:42.266 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 18:57:42.266 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 18:57:42.266 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 18:57:42.267 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 18:57:42.270 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 18:57:42.272 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 4, 分数: 14
2025-04-17 18:57:42.272 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 18:57:42.272 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:57:42.273 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [573b7176] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 18:57:42.273 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-4, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 18:57:42.273 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-4, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.276 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 6, 分数: 52
2025-04-17 18:57:42.276 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714902
2025-04-17 18:57:42.276 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 18:57:42.276 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53c600c0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 18:57:42.276 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-2, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714902.json, method=GET}
2025-04-17 18:57:42.277 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-2, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.466 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-2, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.467 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f670c7e] [059c0335-2] Response 200 OK
2025-04-17 18:57:42.467 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.467 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-2, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.467 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":0,"id":43714959,"score":7,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 18:57:42.468 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":0,"id":43714959,"score":7,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 18:57:42.468 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714959, by=todsacerdoti, title=Development on Apple Silicon with UTM, url=https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/, type=story, time=1744885711
2025-04-17 18:57:42.468 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714959, 标题: Development on Apple Silicon with UTM
2025-04-17 18:57:42.471 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714959
2025-04-17 18:57:42.471 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Development on Apple Silicon with UTM
2025-04-17 18:57:42.472 [reactor-http-nio-9] INFO  c.e.h.service.TranslationService - 翻译请求：Development on Apple Silicon with UTM
2025-04-17 18:57:42.472 [reactor-http-nio-9] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:57:42.472 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fb19f2f] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:57:42.480 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-2, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.480 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53c600c0] [447dfe04-2] Response 200 OK
2025-04-17 18:57:42.480 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.480 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-2, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.480 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"reddavis","descendants":1,"id":43714902,"kids":[43715058],"score":4,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 18:57:42.481 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"reddavis","descendants":1,"id":43714902,"kids":[43715058],"score":4,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 18:57:42.481 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714902, by=reddavis, title=Building an AI That Watches Rugby, url=https://nickjones.tech/ai-watching-rugby/, type=story, time=1744885123
2025-04-17 18:57:42.481 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714902, 标题: Building an AI That Watches Rugby
2025-04-17 18:57:42.482 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714902
2025-04-17 18:57:42.489 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714902, 排名: 9, 分数: 4
2025-04-17 18:57:42.489 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 18:57:42.489 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:57:42.489 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [258c70a3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 18:57:42.490 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-3, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 18:57:42.490 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-4, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.490 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-3, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:42.490 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [573b7176] [669763d9-4] Response 200 OK
2025-04-17 18:57:42.490 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.490 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-4, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.490 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":7,"id":43714004,"kids":[43714642,43714906],"score":38,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:57:42.490 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":7,"id":43714004,"kids":[43714642,43714906],"score":38,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 18:57:42.491 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 18:57:42.491 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 18:57:42.492 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 18:57:42.497 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 8, 分数: 38
2025-04-17 18:57:42.691 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-3, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:42.691 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [258c70a3] [91f3e345-3] Response 200 OK
2025-04-17 18:57:42.691 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:42.692 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-3, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:42.692 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":4,"id":43714476,"kids":[43714835],"score":9,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:57:42.692 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":4,"id":43714476,"kids":[43714835],"score":9,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 18:57:42.692 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 18:57:42.692 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 18:57:42.694 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 18:57:42.702 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 10, 分数: 9
2025-04-17 18:57:43.275 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [c9dca441-1, L:/10.64.127.133:51077 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:57:43.943 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [c9dca441-1, L:/10.64.127.133:51077 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:57:43.944 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fb19f2f] [c9dca441-1] Response 200 OK
2025-04-17 18:57:43.945 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [c9dca441-1, L:/10.64.127.133:51077 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:57:43.946 [reactor-http-nio-9] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=使用 UTM 在 Apple Silicon 上进行开发}]}
2025-04-17 18:57:43.947 [reactor-http-nio-9] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Development on Apple Silicon with UTM -> 使用 UTM 在 Apple Silicon 上进行开发
2025-04-17 18:57:43.947 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 使用 UTM 在 Apple Silicon 上进行开发
2025-04-17 18:57:43.949 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714959
2025-04-17 18:57:43.960 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714959, 排名: 7, 分数: 7
2025-04-17 18:57:43.960 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:57:43.960 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 18:57:45.973 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 18:57:45.974 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:57:45.974 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [44bc05dd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 18:57:45.974 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 18:57:45.975 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-3, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 18:57:45.975 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:57:45.975 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-3, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:45.975 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [393b729e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 18:57:45.975 [parallel-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 18:57:45.975 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-3, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 18:57:45.975 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-3, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:45.976 [parallel-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:57:45.976 [parallel-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ee67607] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 18:57:45.976 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-5, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 18:57:45.976 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-5, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.180 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-3, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.180 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [393b729e] [447dfe04-3] Response 200 OK
2025-04-17 18:57:46.180 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.181 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-3, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.181 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":426,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:57:46.181 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":426,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 18:57:46.181 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 18:57:46.181 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 18:57:46.183 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 18:57:46.185 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-3, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.185 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [44bc05dd] [059c0335-3] Response 200 OK
2025-04-17 18:57:46.185 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.185 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-3, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.185 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":58,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:57:46.185 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":58,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 18:57:46.185 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 18:57:46.186 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 18:57:46.187 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 18:57:46.189 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 12, 分数: 426
2025-04-17 18:57:46.189 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 18:57:46.190 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:57:46.190 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cfd58c6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 18:57:46.190 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-4, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 18:57:46.190 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-4, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.190 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-5, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.191 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ee67607] [669763d9-5] Response 200 OK
2025-04-17 18:57:46.191 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.191 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-5, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.191 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43715075,43710093,43711158,43708197,43709576,43714841,43713943,43712518,43711223,43709262,43714112,43711134,43714506,43709349,43709894,43709830,43713807,43708649,43714244,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":440,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:57:46.191 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43715075,43710093,43711158,43708197,43709576,43714841,43713943,43712518,43711223,43709262,43714112,43711134,43714506,43709349,43709894,43709830,43713807,43708649,43714244,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43709529,43710101,43708208,43710058,43708564,43708288],"score":440,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 18:57:46.191 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 18:57:46.191 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 18:57:46.192 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 11, 分数: 58
2025-04-17 18:57:46.192 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 18:57:46.192 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:57:46.193 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 18:57:46.193 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3707a2a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 18:57:46.197 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 13, 分数: 440
2025-04-17 18:57:46.197 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 18:57:46.197 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:57:46.197 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [422106ce] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 18:57:46.197 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-4, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 18:57:46.197 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-4, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 18:57:46.197 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-4, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.197 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-4, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.394 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-4, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.394 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cfd58c6] [91f3e345-4] Response 200 OK
2025-04-17 18:57:46.394 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.394 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-4, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.395 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:57:46.395 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 18:57:46.395 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 18:57:46.395 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 18:57:46.398 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 18:57:46.405 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 14, 分数: 1
2025-04-17 18:57:46.405 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43697717
2025-04-17 18:57:46.405 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 18:57:46.406 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3cfc9f75] HTTP GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 18:57:46.406 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-6, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43697717.json, method=GET}
2025-04-17 18:57:46.406 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-6, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.408 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-4, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.408 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [422106ce] [059c0335-4] Response 200 OK
2025-04-17 18:57:46.408 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.409 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-4, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.409 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:57:46.409 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":20,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 18:57:46.410 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 18:57:46.410 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-4, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.410 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 18:57:46.410 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3707a2a] [447dfe04-4] Response 200 OK
2025-04-17 18:57:46.410 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.410 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-4, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.411 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43714056,43710745,43712909,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":157,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:57:46.411 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43714056,43710745,43712909,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":157,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 18:57:46.411 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 18:57:46.411 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 18:57:46.412 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 18:57:46.412 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 18:57:46.415 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 16, 分数: 20
2025-04-17 18:57:46.416 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 18:57:46.416 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:57:46.416 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1673e153] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 18:57:46.416 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-5, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 18:57:46.417 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-5, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.417 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 15, 分数: 157
2025-04-17 18:57:46.417 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 18:57:46.418 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:57:46.418 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20938e8c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 18:57:46.418 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-5, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 18:57:46.418 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-5, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.614 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-6, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.615 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3cfc9f75] [669763d9-6] Response 200 OK
2025-04-17 18:57:46.615 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.616 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-6, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.616 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"randomwalker","descendants":0,"id":43697717,"score":10,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 18:57:46.616 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"randomwalker","descendants":0,"id":43697717,"score":10,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 18:57:46.616 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43697717, by=randomwalker, title=AI as Normal Technology, url=https://knightcolumbia.org/content/ai-as-normal-technology, type=story, time=1744747507
2025-04-17 18:57:46.617 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43697717, 标题: AI as Normal Technology
2025-04-17 18:57:46.619 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43697717
2025-04-17 18:57:46.620 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-5, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.620 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1673e153] [91f3e345-5] Response 200 OK
2025-04-17 18:57:46.620 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.620 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-5, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.620 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":581,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43714668,43710859,43708992,43694671,43710410,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694148,43694245,43694619,43695540,43712127,43713637,43690509,43708835,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":477,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:57:46.620 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":581,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43714668,43710859,43708992,43694671,43710410,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43714128,43709129,43694148,43694245,43694619,43695540,43712127,43713637,43690509,43708835,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":477,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 18:57:46.620 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 18:57:46.620 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 18:57:46.622 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 18:57:46.624 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43697717, 排名: 17, 分数: 10
2025-04-17 18:57:46.624 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 18:57:46.625 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:57:46.625 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6356c830] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 18:57:46.625 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-5, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 18:57:46.625 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-5, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:46.627 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 18, 分数: 477
2025-04-17 18:57:46.627 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-5, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.628 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [20938e8c] [059c0335-5] Response 200 OK
2025-04-17 18:57:46.628 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.628 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-5, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.628 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":57,"id":43679906,"kids":[43715057,43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":118,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:57:46.628 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":57,"id":43679906,"kids":[43715057,43714946,43713565,43712651,43714072,43712793,43713518,43712753,43713172,43712785],"score":118,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 18:57:46.628 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 18:57:46.628 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 18:57:46.629 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 18:57:46.633 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 19, 分数: 118
2025-04-17 18:57:46.829 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-5, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:46.830 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6356c830] [447dfe04-5] Response 200 OK
2025-04-17 18:57:46.830 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:46.830 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-5, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:46.830 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":26,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:57:46.830 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":3,"id":43713140,"kids":[43714883,43714602],"score":26,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 18:57:46.830 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 18:57:46.830 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 18:57:46.832 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 18:57:46.837 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 20, 分数: 26
2025-04-17 18:57:46.837 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:57:46.837 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 18:57:50.847 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 18:57:50.848 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:57:50.848 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b50ce31] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 18:57:50.848 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 18:57:50.848 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-7, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 18:57:50.849 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:57:50.849 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-7, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:50.849 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e7838ec] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 18:57:50.849 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 18:57:50.849 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-6, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 18:57:50.850 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-6, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:50.850 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:57:50.850 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a01f2bd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 18:57:50.851 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-6, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 18:57:50.851 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-6, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.050 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-6, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.050 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e7838ec] [91f3e345-6] Response 200 OK
2025-04-17 18:57:51.050 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.051 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-6, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.051 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":49,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":127,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:57:51.051 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":49,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43714522,43713808,43711718,43713061,43712268,43711807],"score":127,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 18:57:51.051 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 18:57:51.052 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 18:57:51.054 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-7, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.054 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1b50ce31] [669763d9-7] Response 200 OK
2025-04-17 18:57:51.054 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.055 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-7, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.055 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":2,"id":43674892,"kids":[43715101,43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:57:51.055 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":2,"id":43674892,"kids":[43715101,43714757],"score":14,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 18:57:51.055 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 18:57:51.055 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 18:57:51.055 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 18:57:51.057 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 18:57:51.060 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-6, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.060 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a01f2bd] [059c0335-6] Response 200 OK
2025-04-17 18:57:51.060 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.060 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-6, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.060 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":198,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:57:51.060 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":198,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 18:57:51.060 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 18:57:51.061 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 18:57:51.062 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 22, 分数: 127
2025-04-17 18:57:51.062 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 18:57:51.062 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:57:51.062 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 21, 分数: 14
2025-04-17 18:57:51.063 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60ef0199] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 18:57:51.063 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 18:57:51.063 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-6, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 18:57:51.063 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 18:57:51.063 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-6, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.063 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:57:51.063 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45fdbceb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 18:57:51.064 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-8, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 18:57:51.064 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-8, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.068 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 23, 分数: 198
2025-04-17 18:57:51.068 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 18:57:51.068 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:57:51.068 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25be09cc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 18:57:51.069 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-7, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 18:57:51.069 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-7, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.291 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-6, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.291 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-7, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.291 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60ef0199] [447dfe04-6] Response 200 OK
2025-04-17 18:57:51.292 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25be09cc] [91f3e345-7] Response 200 OK
2025-04-17 18:57:51.292 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.292 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.292 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-7, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.292 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-6, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.292 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:57:51.293 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 18:57:51.293 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":356,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:57:51.293 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 18:57:51.293 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 18:57:51.293 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43713946,43712940,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":356,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 18:57:51.293 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 18:57:51.293 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 18:57:51.295 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 18:57:51.296 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 18:57:51.302 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 26, 分数: 45
2025-04-17 18:57:51.302 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 18:57:51.302 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:57:51.303 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7846017e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 18:57:51.303 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 24, 分数: 356
2025-04-17 18:57:51.303 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 18:57:51.303 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-7, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 18:57:51.303 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:57:51.303 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-8, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.303 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-7, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.303 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ce3f136] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 18:57:51.303 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [45fdbceb] [669763d9-8] Response 200 OK
2025-04-17 18:57:51.303 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.303 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-8, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.303 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":318,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43711929,43714281,43714232,43711749,43712661,43712922,43713686,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":335,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:57:51.303 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":318,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43711929,43714281,43714232,43711749,43712661,43712922,43713686,43713460,43711973,43712230,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":335,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 18:57:51.303 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 18:57:51.303 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 18:57:51.304 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 18:57:51.310 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 25, 分数: 335
2025-04-17 18:57:51.310 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 18:57:51.310 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:57:51.310 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ab6013] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 18:57:51.311 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-8, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 18:57:51.311 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-7, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 18:57:51.311 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-7, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.311 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-8, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.515 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-7, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.517 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ce3f136] [447dfe04-7] Response 200 OK
2025-04-17 18:57:51.517 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.517 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-8, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.517 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-7, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.518 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ab6013] [91f3e345-8] Response 200 OK
2025-04-17 18:57:51.518 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":157,"id":43704904,"kids":[43715096,43708124,43706249,43705510,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43714770,43709846,43710475,43714084,43705584,43705646,43711233,43705667,43713433,43713542,43713886,43705658,43705959,43708803,43710306,43705528,43713665,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":327,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:57:51.518 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.519 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":157,"id":43704904,"kids":[43715096,43708124,43706249,43705510,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43714770,43709846,43710475,43714084,43705584,43705646,43711233,43705667,43713433,43713542,43713886,43705658,43705959,43708803,43710306,43705528,43713665,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43713136,43711984,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":327,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 18:57:51.519 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-8, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.520 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 18:57:51.520 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":383,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:57:51.520 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 18:57:51.520 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43711968,43704657,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":383,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 18:57:51.521 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 18:57:51.521 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 18:57:51.521 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-7, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.522 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7846017e] [059c0335-7] Response 200 OK
2025-04-17 18:57:51.522 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.523 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-7, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.523 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712032,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":469,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:57:51.523 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712032,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":469,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 18:57:51.523 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 18:57:51.523 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 18:57:51.524 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 18:57:51.524 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 18:57:51.525 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 18:57:51.530 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 29, 分数: 383
2025-04-17 18:57:51.530 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 18:57:51.530 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:57:51.530 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [732a664] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 18:57:51.531 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 28, 分数: 327
2025-04-17 18:57:51.531 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 27, 分数: 469
2025-04-17 18:57:51.531 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-9, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 18:57:51.531 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-9, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:51.755 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-9, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:51.755 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [732a664] [669763d9-9] Response 200 OK
2025-04-17 18:57:51.756 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:51.756 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-9, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:51.756 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:57:51.756 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 18:57:51.756 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 18:57:51.756 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 18:57:51.758 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 18:57:51.764 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 30, 分数: 27
2025-04-17 18:57:51.764 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:57:51.764 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 18:57:57.777 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 18:57:57.777 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:57:57.778 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [700b274f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 18:57:57.778 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 18:57:57.778 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-9, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 18:57:57.778 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:57:57.779 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-9, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:57.779 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b69fcdf] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 18:57:57.779 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 18:57:57.779 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-8, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 18:57:57.779 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-8, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:57.779 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:57:57.780 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3905214c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 18:57:57.780 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-8, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 18:57:57.780 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-8, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:58.004 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-9, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:58.004 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [700b274f] [91f3e345-9] Response 200 OK
2025-04-17 18:57:58.004 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:58.004 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-9, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:58.005 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":6,"id":43678533,"kids":[43715092,43714454,43714026,43713754],"score":88,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:57:58.005 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":6,"id":43678533,"kids":[43715092,43714454,43714026,43713754],"score":88,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 18:57:58.005 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 18:57:58.005 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 18:57:58.007 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 18:57:58.016 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 31, 分数: 88
2025-04-17 18:57:58.016 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 18:57:58.016 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:57:58.017 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [76566671] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 18:57:58.017 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-10, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 18:57:58.017 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-10, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:58.029 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-8, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:58.029 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b69fcdf] [447dfe04-8] Response 200 OK
2025-04-17 18:57:58.029 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:58.029 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-8, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:58.029 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":45,"id":43690828,"kids":[43714289,43714990,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:57:58.029 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":45,"id":43690828,"kids":[43714289,43714990,43708922,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 18:57:58.030 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 18:57:58.030 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 18:57:58.031 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 18:57:58.033 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-8, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:58.033 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3905214c] [059c0335-8] Response 200 OK
2025-04-17 18:57:58.033 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:58.033 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-8, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:58.033 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43713123,43714708,43711140,43707254,43707467,43712968,43713744,43713915,43712935,43709029,43712158,43714561,43707380,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43714654,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":301,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:57:58.034 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43713123,43714708,43711140,43707254,43707467,43712968,43713744,43713915,43712935,43709029,43712158,43714561,43707380,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43714654,43706905,43710755,43710025,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":301,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 18:57:58.034 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 18:57:58.034 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 18:57:58.035 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 32, 分数: 138
2025-04-17 18:57:58.035 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 18:57:58.035 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:57:58.036 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2db7643a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 18:57:58.036 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 18:57:58.036 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-10, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 18:57:58.036 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-10, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:58.043 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 33, 分数: 301
2025-04-17 18:57:58.043 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 18:57:58.043 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:57:58.043 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32ebd28a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 18:57:58.043 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-9, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 18:57:58.043 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-9, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:58.228 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-10, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:58.228 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [76566671] [669763d9-10] Response 200 OK
2025-04-17 18:57:58.228 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:58.228 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-10, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:58.228 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:57:58.228 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43707499,43705029,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 18:57:58.229 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 18:57:58.229 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 18:57:58.230 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 18:57:58.236 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 34, 分数: 201
2025-04-17 18:57:58.236 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 18:57:58.236 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:57:58.236 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [19e67c37] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 18:57:58.236 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-9, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 18:57:58.237 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-9, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:58.304 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-9, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:58.305 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32ebd28a] [447dfe04-9] Response 200 OK
2025-04-17 18:57:58.305 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:58.305 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-9, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:58.306 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:57:58.306 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 18:57:58.306 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 18:57:58.306 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 18:57:58.308 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-10, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:58.308 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2db7643a] [91f3e345-10] Response 200 OK
2025-04-17 18:57:58.308 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:58.308 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-10, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:58.308 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":464,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43713896,43707838,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43713968,43711020,43709949,43710951,43715005,43708576,43712397,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":505,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:57:58.308 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":464,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43713896,43707838,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43713968,43711020,43709949,43710951,43715005,43708576,43712397,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43711217,43708089,43711059,43707854,43708690,43708814,43708671,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":505,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 18:57:58.308 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 18:57:58.309 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 18:57:58.309 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 18:57:58.310 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 18:57:58.314 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 36, 分数: 133
2025-04-17 18:57:58.314 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 18:57:58.314 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:57:58.314 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7249531b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 18:57:58.315 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-11, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 18:57:58.315 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-11, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:58.315 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 35, 分数: 505
2025-04-17 18:57:58.315 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 18:57:58.315 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:57:58.316 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d5b6e1e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 18:57:58.316 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-11, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 18:57:58.316 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-11, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:59.675 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-11, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:59.676 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7249531b] [669763d9-11] Response 200 OK
2025-04-17 18:57:59.676 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:59.676 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-11, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:59.676 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43714662,43713899,43713731,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:57:59.677 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43714662,43713899,43713731,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 18:57:59.677 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 18:57:59.677 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 18:57:59.677 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-9, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:59.677 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [19e67c37] [059c0335-9] Response 200 OK
2025-04-17 18:57:59.678 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:59.678 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-9, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:59.678 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":856,"id":43692677,"kids":[43706451,43715062,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43714856,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43711094,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":657,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:57:59.678 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":856,"id":43692677,"kids":[43706451,43715062,43692988,43693238,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43714856,43710490,43693479,43694365,43693563,43709500,43692939,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43711778,43695906,43706646,43693018,43706138,43693144,43693685,43709824,43709841,43693264,43705219,43693384,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43711094,43705078,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43711765,43693243,43705051,43693698,43693099,43693562,43693016,43713661,43693056,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":657,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 18:57:59.679 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 18:57:59.679 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 18:57:59.679 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 18:57:59.680 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 18:57:59.685 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-11, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:57:59.685 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d5b6e1e] [91f3e345-11] Response 200 OK
2025-04-17 18:57:59.685 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:57:59.685 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-11, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:57:59.685 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:57:59.685 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 18:57:59.685 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 18:57:59.685 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 18:57:59.686 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 38, 分数: 125
2025-04-17 18:57:59.686 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 18:57:59.686 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:57:59.686 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 18:57:59.686 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [30df5916] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 18:57:59.687 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 37, 分数: 657
2025-04-17 18:57:59.687 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-10, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 18:57:59.687 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-10, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:57:59.690 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 39, 分数: 43
2025-04-17 18:58:00.151 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-10, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:00.152 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [30df5916] [447dfe04-10] Response 200 OK
2025-04-17 18:58:00.152 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:00.153 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-10, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:00.153 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:58:00.153 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 18:58:00.154 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 18:58:00.154 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 18:58:00.159 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 18:58:00.168 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 40, 分数: 122
2025-04-17 18:58:00.168 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:58:00.168 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 18:58:08.180 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 18:58:08.180 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:58:08.180 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2720b539] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 18:58:08.181 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 18:58:08.181 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-10, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 18:58:08.181 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-10, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.181 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:58:08.181 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e870d83] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 18:58:08.182 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 18:58:08.182 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-12, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 18:58:08.182 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-12, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.182 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:58:08.182 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [16e7f0b9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 18:58:08.183 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-12, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 18:58:08.183 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-12, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.390 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-12, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.391 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [16e7f0b9] [91f3e345-12] Response 200 OK
2025-04-17 18:58:08.391 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.391 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-12, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.391 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-12, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.391 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:58:08.391 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e870d83] [669763d9-12] Response 200 OK
2025-04-17 18:58:08.392 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.392 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 18:58:08.392 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-10, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.392 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-12, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.392 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 18:58:08.393 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 18:58:08.392 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2720b539] [059c0335-10] Response 200 OK
2025-04-17 18:58:08.393 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":20,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:58:08.393 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.393 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":4,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":20,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 18:58:08.393 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-10, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.393 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 18:58:08.393 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:58:08.393 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 18:58:08.393 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 18:58:08.393 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 18:58:08.394 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 18:58:08.395 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 18:58:08.395 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 18:58:08.395 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 18:58:08.397 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 41, 分数: 674
2025-04-17 18:58:08.397 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 18:58:08.397 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:58:08.398 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [9fee2c0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 18:58:08.404 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 42, 分数: 20
2025-04-17 18:58:08.404 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 18:58:08.404 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:58:08.404 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48946860] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 18:58:08.405 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-11, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 18:58:08.405 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-11, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 18:58:08.405 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-11, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.405 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-11, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.405 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 43, 分数: 155
2025-04-17 18:58:08.405 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714758
2025-04-17 18:58:08.405 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714758.json
2025-04-17 18:58:08.406 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [50eccaa9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714758.json
2025-04-17 18:58:08.406 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-13, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714758.json, method=GET}
2025-04-17 18:58:08.406 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-13, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.679 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-11, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.680 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [9fee2c0] [447dfe04-11] Response 200 OK
2025-04-17 18:58:08.681 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.681 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-11, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.682 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:58:08.682 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 18:58:08.683 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 18:58:08.683 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 18:58:08.689 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 18:58:08.689 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-11, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.689 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48946860] [059c0335-11] Response 200 OK
2025-04-17 18:58:08.689 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.689 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-11, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.690 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:58:08.690 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 18:58:08.690 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 18:58:08.690 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 18:58:08.690 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 44, 分数: 159
2025-04-17 18:58:08.690 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 18:58:08.691 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:58:08.691 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [345d3cb4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 18:58:08.691 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 18:58:08.691 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-13, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 18:58:08.691 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-13, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.691 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-13, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.691 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [50eccaa9] [669763d9-13] Response 200 OK
2025-04-17 18:58:08.692 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.692 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-13, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.692 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pseudolus","descendants":0,"id":43714758,"score":3,"time":1744883625,"title":"The complex origin story of domestic cats: Research points to Tunisia","type":"story","url":"https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html"}
2025-04-17 18:58:08.692 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pseudolus","descendants":0,"id":43714758,"score":3,"time":1744883625,"title":"The complex origin story of domestic cats: Research points to Tunisia","type":"story","url":"https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html"}
2025-04-17 18:58:08.692 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714758, by=pseudolus, title=The complex origin story of domestic cats: Research points to Tunisia, url=https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html, type=story, time=1744883625
2025-04-17 18:58:08.692 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 45, 分数: 39
2025-04-17 18:58:08.692 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714758, 标题: The complex origin story of domestic cats: Research points to Tunisia
2025-04-17 18:58:08.692 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 18:58:08.692 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:58:08.692 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39b2dc8b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 18:58:08.693 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714758
2025-04-17 18:58:08.694 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: The complex origin story of domestic cats: Research points to Tunisia
2025-04-17 18:58:08.695 [reactor-http-nio-7] INFO  c.e.h.service.TranslationService - 翻译请求：The complex origin story of domestic cats: Research points to Tunisia
2025-04-17 18:58:08.695 [reactor-http-nio-7] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 18:58:08.695 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bcdba24] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 18:58:08.695 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-12, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 18:58:08.695 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [c9dca441-2, L:/10.64.127.133:51077 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 18:58:08.695 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-12, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.894 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-13, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.895 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [345d3cb4] [91f3e345-13] Response 200 OK
2025-04-17 18:58:08.895 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.895 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-13, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.895 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:58:08.895 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 18:58:08.896 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 18:58:08.896 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 18:58:08.897 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 18:58:08.900 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-12, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:08.900 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39b2dc8b] [447dfe04-12] Response 200 OK
2025-04-17 18:58:08.900 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:08.901 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-12, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:08.901 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:58:08.901 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 18:58:08.901 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 18:58:08.901 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 18:58:08.902 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 18:58:08.903 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 47, 分数: 18
2025-04-17 18:58:08.903 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 18:58:08.903 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:58:08.903 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [660f0a6e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 18:58:08.904 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-12, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 18:58:08.904 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-12, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:08.906 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 48, 分数: 99
2025-04-17 18:58:08.906 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 18:58:08.907 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:58:08.907 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [559740ad] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 18:58:08.907 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-14, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 18:58:08.907 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-14, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:09.111 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-12, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:09.111 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [660f0a6e] [059c0335-12] Response 200 OK
2025-04-17 18:58:09.111 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:09.112 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-12, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:09.112 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":1,"id":43714433,"kids":[43714961],"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:58:09.112 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":1,"id":43714433,"kids":[43714961],"score":5,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 18:58:09.114 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 18:58:09.114 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 18:58:09.115 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714433
2025-04-17 18:58:09.116 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-14, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:09.116 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [559740ad] [669763d9-14] Response 200 OK
2025-04-17 18:58:09.116 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:09.117 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-14, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:09.117 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":41,"id":43705144,"kids":[43715044,43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":117,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:58:09.117 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":41,"id":43705144,"kids":[43715044,43706427,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":117,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 18:58:09.117 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 18:58:09.117 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 18:58:09.118 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 18:58:09.121 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 49, 分数: 5
2025-04-17 18:58:09.123 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 50, 分数: 117
2025-04-17 18:58:09.137 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [c9dca441-2, L:/10.64.127.133:51077 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 18:58:09.137 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [bcdba24] [c9dca441-2] Response 200 OK
2025-04-17 18:58:09.137 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [c9dca441-2, L:/10.64.127.133:51077 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 18:58:09.138 [reactor-http-nio-9] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=家猫复杂的起源故事：研究指向突尼斯}]}
2025-04-17 18:58:09.138 [reactor-http-nio-9] INFO  c.e.h.service.TranslationService - DeepL翻译成功: The complex origin story of domestic cats: Research points to Tunisia -> 家猫复杂的起源故事：研究指向突尼斯
2025-04-17 18:58:09.138 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 家猫复杂的起源故事：研究指向突尼斯
2025-04-17 18:58:09.139 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714758
2025-04-17 18:58:09.143 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714758, 排名: 46, 分数: 3
2025-04-17 18:58:09.143 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:58:09.143 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 18:58:19.145 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 18:58:19.146 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:58:19.146 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53f79d8b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 18:58:19.147 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 18:58:19.147 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-14, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 18:58:19.147 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:58:19.147 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-14, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.148 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4acd1107] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 18:58:19.148 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 18:58:19.148 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-13, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 18:58:19.149 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-13, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.149 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:58:19.149 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d179375] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 18:58:19.150 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-13, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 18:58:19.150 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-13, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.354 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-13, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.354 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4acd1107] [447dfe04-13] Response 200 OK
2025-04-17 18:58:19.354 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.355 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-13, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.355 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":53,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43711396,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:58:19.355 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":53,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43711396,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 18:58:19.355 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 18:58:19.355 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 18:58:19.357 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 18:58:19.358 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-13, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.358 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3d179375] [059c0335-13] Response 200 OK
2025-04-17 18:58:19.358 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.359 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-13, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.359 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:58:19.359 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 18:58:19.359 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-14, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.360 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53f79d8b] [91f3e345-14] Response 200 OK
2025-04-17 18:58:19.360 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.359 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 18:58:19.360 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 18:58:19.360 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-14, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.361 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43714982,43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:58:19.361 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43714982,43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 18:58:19.361 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 18:58:19.362 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 18:58:19.362 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 18:58:19.363 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 18:58:19.364 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 52, 分数: 127
2025-04-17 18:58:19.364 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 18:58:19.364 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:58:19.364 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [383923e6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 18:58:19.364 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-15, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 18:58:19.365 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-15, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.369 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 53, 分数: 110
2025-04-17 18:58:19.369 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 18:58:19.369 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:58:19.370 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c46e80e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 18:58:19.370 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-14, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 18:58:19.370 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-14, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.371 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 51, 分数: 45
2025-04-17 18:58:19.371 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 18:58:19.371 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:58:19.371 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f0a06ed] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 18:58:19.371 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-14, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 18:58:19.371 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-14, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.573 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-15, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.574 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [383923e6] [669763d9-15] Response 200 OK
2025-04-17 18:58:19.574 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.575 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-15, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.576 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43710438,43713826,43710291,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:58:19.576 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43710438,43713826,43710291,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 18:58:19.577 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 18:58:19.577 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 18:58:19.581 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-14, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.581 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f0a06ed] [059c0335-14] Response 200 OK
2025-04-17 18:58:19.581 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.582 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-14, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.582 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43711578,43714216,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:58:19.582 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 18:58:19.583 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43711578,43714216,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":59,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 18:58:19.583 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 18:58:19.584 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 18:58:19.585 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 18:58:19.590 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 54, 分数: 38
2025-04-17 18:58:19.590 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 18:58:19.590 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:58:19.590 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [626a3ef] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 18:58:19.590 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientConnect - [91f3e345-15, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 18:58:19.591 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-15, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.591 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 56, 分数: 59
2025-04-17 18:58:19.591 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-14, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.591 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 18:58:19.591 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c46e80e] [447dfe04-14] Response 200 OK
2025-04-17 18:58:19.591 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.591 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:58:19.591 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-14, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.591 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [763493d7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 18:58:19.591 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:58:19.592 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 18:58:19.592 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 18:58:19.592 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 18:58:19.593 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 18:58:19.593 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 55, 分数: 216
2025-04-17 18:58:19.593 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 18:58:19.594 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:58:19.594 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f0e82ef] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 18:58:19.594 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientConnect - [059c0335-15, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 18:58:19.594 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [669763d9-16, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 18:58:19.594 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-15, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.594 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-16, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.793 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-15, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.793 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [626a3ef] [91f3e345-15] Response 200 OK
2025-04-17 18:58:19.793 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.793 [reactor-http-nio-8] DEBUG r.n.http.client.HttpClientOperations - [91f3e345-15, L:/10.64.127.133:51074 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.794 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":127,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:58:19.794 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":127,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 18:58:19.794 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 18:58:19.794 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 18:58:19.797 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 18:58:19.800 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-16, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.800 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [763493d7] [669763d9-16] Response 200 OK
2025-04-17 18:58:19.800 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.801 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [669763d9-16, L:/10.64.127.133:51069 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.801 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:58:19.801 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 18:58:19.801 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 18:58:19.801 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 18:58:19.803 [reactor-http-nio-8] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 57, 分数: 127
2025-04-17 18:58:19.803 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 18:58:19.803 [reactor-http-nio-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714269
2025-04-17 18:58:19.803 [reactor-http-nio-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:58:19.803 [reactor-http-nio-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1335c5a6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714269.json
2025-04-17 18:58:19.804 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-15, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:19.804 [reactor-http-nio-9] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f0e82ef] [059c0335-15] Response 200 OK
2025-04-17 18:58:19.804 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:19.804 [reactor-http-nio-9] DEBUG r.n.http.client.HttpClientOperations - [059c0335-15, L:/10.64.127.133:51075 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:19.804 [reactor-http-nio-9] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:58:19.804 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":112,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 18:58:19.804 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 18:58:19.804 [reactor-http-nio-9] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 18:58:19.805 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703682
2025-04-17 18:58:19.809 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 58, 分数: 217
2025-04-17 18:58:19.809 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientConnect - [447dfe04-15, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714269.json, method=GET}
2025-04-17 18:58:19.809 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-15, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 18:58:19.810 [reactor-http-nio-9] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 59, 分数: 150
2025-04-17 18:58:20.014 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-15, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 18:58:20.015 [reactor-http-nio-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1335c5a6] [447dfe04-15] Response 200 OK
2025-04-17 18:58:20.015 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 18:58:20.016 [reactor-http-nio-7] DEBUG r.n.http.client.HttpClientOperations - [447dfe04-15, L:/10.64.127.133:51076 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 18:58:20.016 [reactor-http-nio-7] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":20,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:58:20.017 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Tomte","descendants":6,"id":43714269,"kids":[43714404,43714528,43714300],"score":20,"time":1744877784,"title":"Bring Back RSS Feeds to Browsers","type":"story","url":"https://jetgirl.art/bring-back-rss-feeds-to-browsers/"}
2025-04-17 18:58:20.017 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714269, by=Tomte, title=Bring Back RSS Feeds to Browsers, url=https://jetgirl.art/bring-back-rss-feeds-to-browsers/, type=story, time=1744877784
2025-04-17 18:58:20.018 [reactor-http-nio-7] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714269, 标题: Bring Back RSS Feeds to Browsers
2025-04-17 18:58:20.023 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714269
2025-04-17 18:58:20.035 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714269, 排名: 60, 分数: 20
2025-04-17 18:58:20.036 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 18:58:20.036 [reactor-http-nio-7] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 19:11:58.878 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 19:11:58.879 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 19:11:58.880 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 19:11:58.880 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d411cc1] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 19:11:59.321 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-1, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 19:11:59.322 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-1, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:11:59.641 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-1, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:11:59.642 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1d411cc1] [af9040fc-1] Response 200 OK
2025-04-17 19:11:59.642 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:11:59.643 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-1, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:11:59.644 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 19:11:59.644 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 19:11:59.645 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 19:11:59.645 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 19:11:59.646 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 19:11:59.647 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 19:11:59.647 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c800956] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 19:11:59.648 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 19:11:59.648 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-2, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 19:11:59.649 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-2, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:11:59.649 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 19:11:59.650 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [99e760f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 19:11:59.651 [parallel-4] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714959
2025-04-17 19:11:59.652 [parallel-4] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 19:11:59.652 [parallel-4] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52ca7861] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 19:11:59.912 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-2, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:11:59.913 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c800956] [af9040fc-2] Response 200 OK
2025-04-17 19:11:59.913 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:11:59.914 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-2, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:11:59.915 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":7,"id":43714594,"kids":[43714794,43714858,43715104,43714790],"score":27,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 19:11:59.915 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":7,"id":43714594,"kids":[43714794,43714858,43715104,43714790],"score":27,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 19:11:59.916 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 19:11:59.916 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-1, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 19:11:59.917 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 19:11:59.917 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-1, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:11:59.926 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 19:11:59.931 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-1, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714959.json, method=GET}
2025-04-17 19:11:59.931 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-1, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:11:59.933 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 1, 分数: 27
2025-04-17 19:11:59.933 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 19:11:59.933 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 19:11:59.933 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e8eeead] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 19:12:00.120 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-1, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.121 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [99e760f] [5d7acf59-1] Response 200 OK
2025-04-17 19:12:00.121 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.122 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-1, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.122 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":198,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43713604,43713456,43714517,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":405,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 19:12:00.122 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":198,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43713357,43711958,43712200,43712455,43712692,43713112,43713604,43713456,43714517,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":405,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 19:12:00.122 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 19:12:00.122 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 19:12:00.125 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 19:12:00.134 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 2, 分数: 405
2025-04-17 19:12:00.134 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 19:12:00.134 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 19:12:00.135 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32a8ee65] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 19:12:00.135 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-3, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 19:12:00.135 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-3, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.181 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-1, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.181 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [52ca7861] [30a6c0af-1] Response 200 OK
2025-04-17 19:12:00.181 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.182 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-1, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.182 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":1,"id":43714959,"kids":[43715158],"score":11,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 19:12:00.182 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":1,"id":43714959,"kids":[43715158],"score":11,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 19:12:00.182 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714959, by=todsacerdoti, title=Development on Apple Silicon with UTM, url=https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/, type=story, time=1744885711
2025-04-17 19:12:00.182 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714959, 标题: Development on Apple Silicon with UTM
2025-04-17 19:12:00.184 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714959
2025-04-17 19:12:00.189 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714959, 排名: 3, 分数: 11
2025-04-17 19:12:00.189 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 19:12:00.190 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 19:12:00.190 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [21610bce] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 19:12:00.190 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-2, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 19:12:00.191 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-2, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.203 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-1, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 19:12:00.204 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-1, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.366 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-3, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.366 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32a8ee65] [af9040fc-3] Response 200 OK
2025-04-17 19:12:00.366 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.367 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-3, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.367 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":11,"id":43678144,"kids":[43715160,43714968,43714891,43715137,43715082,43715094,43714955,43714948,43678721,43714994],"score":65,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 19:12:00.367 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":11,"id":43678144,"kids":[43715160,43714968,43714891,43715137,43715082,43715094,43714955,43714948,43678721,43714994],"score":65,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 19:12:00.367 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 19:12:00.367 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 19:12:00.369 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 19:12:00.374 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 5, 分数: 65
2025-04-17 19:12:00.374 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 19:12:00.374 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 19:12:00.375 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [71d2b372] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 19:12:00.375 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-2, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 19:12:00.375 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-2, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.391 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-2, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.391 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [21610bce] [5d7acf59-2] Response 200 OK
2025-04-17 19:12:00.391 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.391 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-2, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.391 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":93,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 19:12:00.392 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":14,"id":43713524,"kids":[43714083,43714351,43713990,43714073,43713984,43713935,43713999],"score":93,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 19:12:00.392 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 19:12:00.392 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 19:12:00.394 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 19:12:00.399 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 6, 分数: 93
2025-04-17 19:12:00.399 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 19:12:00.399 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 19:12:00.399 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [8ce9bd9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 19:12:00.400 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-4, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 19:12:00.400 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-4, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.412 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-1, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.412 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e8eeead] [0e09478d-1] Response 200 OK
2025-04-17 19:12:00.412 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.412 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-1, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.412 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":16,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 19:12:00.412 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":16,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 19:12:00.412 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 19:12:00.412 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 19:12:00.414 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 19:12:00.421 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 4, 分数: 16
2025-04-17 19:12:00.421 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714902
2025-04-17 19:12:00.421 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 19:12:00.421 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43d5c1be] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 19:12:00.421 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-3, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714902.json, method=GET}
2025-04-17 19:12:00.421 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-3, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.585 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-2, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.585 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [71d2b372] [30a6c0af-2] Response 200 OK
2025-04-17 19:12:00.585 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.585 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-2, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.586 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":165,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714972,43715126,43715010,43714611,43715138,43715130,43714593,43715112,43715070,43714597,43714850,43714436,43714751,43714739,43714887,43714434,43714661,43714786,43715131],"score":230,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 19:12:00.586 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":165,"id":43714203,"kids":[43714467,43714868,43714466,43714478,43714580,43714502,43714972,43715126,43715010,43714611,43715138,43715130,43714593,43715112,43715070,43714597,43714850,43714436,43714751,43714739,43714887,43714434,43714661,43714786,43715131],"score":230,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 19:12:00.586 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 19:12:00.586 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 19:12:00.589 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 19:12:00.594 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 7, 分数: 230
2025-04-17 19:12:00.595 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 19:12:00.595 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 19:12:00.595 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [275a0d08] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 19:12:00.595 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-2, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 19:12:00.596 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-2, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:00.621 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-3, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.622 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [43d5c1be] [5d7acf59-3] Response 200 OK
2025-04-17 19:12:00.622 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.622 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-3, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.622 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"reddavis","descendants":3,"id":43714902,"kids":[43715129,43715176,43715124,43715058],"score":5,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 19:12:00.622 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"reddavis","descendants":3,"id":43714902,"kids":[43715129,43715176,43715124,43715058],"score":5,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 19:12:00.623 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714902, by=reddavis, title=Building an AI That Watches Rugby, url=https://nickjones.tech/ai-watching-rugby/, type=story, time=1744885123
2025-04-17 19:12:00.623 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714902, 标题: Building an AI That Watches Rugby
2025-04-17 19:12:00.625 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714902
2025-04-17 19:12:00.629 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-4, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.629 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714902, 排名: 9, 分数: 5
2025-04-17 19:12:00.629 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [8ce9bd9] [af9040fc-4] Response 200 OK
2025-04-17 19:12:00.629 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.629 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-4, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.629 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":9,"id":43714004,"kids":[43715180,43714642,43714906],"score":38,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 19:12:00.629 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":9,"id":43714004,"kids":[43715180,43714642,43714906],"score":38,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 19:12:00.629 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 19:12:00.629 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 19:12:00.630 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 19:12:00.631 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 8, 分数: 38
2025-04-17 19:12:00.803 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-2, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:00.804 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [275a0d08] [0e09478d-2] Response 200 OK
2025-04-17 19:12:00.804 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:00.804 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-2, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:00.805 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":428,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 19:12:00.805 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":428,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 19:12:00.805 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 19:12:00.806 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 19:12:00.811 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 19:12:00.818 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 10, 分数: 428
2025-04-17 19:12:00.818 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:12:00.818 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 19:12:02.829 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 19:12:02.831 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 19:12:02.831 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47ab8c7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 19:12:02.831 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 19:12:02.832 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-3, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 19:12:02.832 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-3, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:02.832 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 19:12:02.833 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d6e1422] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 19:12:02.833 [parallel-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 19:12:02.833 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-4, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 19:12:02.833 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-4, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:02.833 [parallel-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 19:12:02.834 [parallel-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60aa3db8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 19:12:02.834 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-5, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 19:12:02.835 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-5, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.034 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-4, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.034 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d6e1422] [5d7acf59-4] Response 200 OK
2025-04-17 19:12:03.035 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.035 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-4, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.035 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":61,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 19:12:03.035 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":61,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 19:12:03.036 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 19:12:03.036 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 19:12:03.038 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 19:12:03.039 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-3, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.040 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47ab8c7] [30a6c0af-3] Response 200 OK
2025-04-17 19:12:03.040 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.040 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-3, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.040 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":4,"id":43714476,"kids":[43714835],"score":9,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 19:12:03.040 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":4,"id":43714476,"kids":[43714835],"score":9,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 19:12:03.041 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 19:12:03.041 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 19:12:03.044 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 19:12:03.044 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 12, 分数: 61
2025-04-17 19:12:03.045 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 19:12:03.045 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 19:12:03.045 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [752cee78] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 19:12:03.046 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-3, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 19:12:03.046 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-3, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.048 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 11, 分数: 9
2025-04-17 19:12:03.048 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43697717
2025-04-17 19:12:03.049 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 19:12:03.049 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d8b6f77] HTTP GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 19:12:03.049 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-5, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43697717.json, method=GET}
2025-04-17 19:12:03.049 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-5, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.065 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-5, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.066 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [60aa3db8] [af9040fc-5] Response 200 OK
2025-04-17 19:12:03.066 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.066 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-5, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.067 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 19:12:03.067 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 19:12:03.067 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 19:12:03.067 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 19:12:03.075 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 19:12:03.082 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 13, 分数: 1
2025-04-17 19:12:03.082 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 19:12:03.083 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 19:12:03.084 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c7162e2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 19:12:03.084 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-4, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 19:12:03.085 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-4, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.249 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-5, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.250 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6d8b6f77] [5d7acf59-5] Response 200 OK
2025-04-17 19:12:03.250 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.250 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-5, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.251 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"randomwalker","descendants":1,"id":43697717,"kids":[43715147],"score":15,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 19:12:03.251 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"randomwalker","descendants":1,"id":43697717,"kids":[43715147],"score":15,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 19:12:03.251 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43697717, by=randomwalker, title=AI as Normal Technology, url=https://knightcolumbia.org/content/ai-as-normal-technology, type=story, time=1744747507
2025-04-17 19:12:03.251 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43697717, 标题: AI as Normal Technology
2025-04-17 19:12:03.254 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-3, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.254 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [752cee78] [0e09478d-3] Response 200 OK
2025-04-17 19:12:03.255 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.255 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-3, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.255 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43710093,43715075,43711158,43708197,43709576,43713943,43712518,43711223,43709262,43714841,43714112,43711134,43714506,43709349,43714244,43709894,43709830,43708649,43713807,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43710101,43708208,43709529,43708288,43710058,43708564],"score":440,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 19:12:03.255 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43710093,43715075,43711158,43708197,43709576,43713943,43712518,43711223,43709262,43714841,43714112,43711134,43714506,43709349,43714244,43709894,43709830,43708649,43713807,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43710101,43708208,43709529,43708288,43710058,43708564],"score":440,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 19:12:03.255 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43697717
2025-04-17 19:12:03.255 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 19:12:03.256 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 19:12:03.257 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 19:12:03.263 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 14, 分数: 440
2025-04-17 19:12:03.263 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 19:12:03.264 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43697717, 排名: 15, 分数: 15
2025-04-17 19:12:03.264 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 19:12:03.265 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f09d772] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 19:12:03.265 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-6, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 19:12:03.266 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-6, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.266 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 19:12:03.267 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 19:12:03.267 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7806af9d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 19:12:03.268 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-6, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 19:12:03.268 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-6, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.294 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-4, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.294 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c7162e2] [30a6c0af-4] Response 200 OK
2025-04-17 19:12:03.294 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.294 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-4, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.295 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":21,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 19:12:03.295 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":21,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 19:12:03.295 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 19:12:03.295 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 19:12:03.297 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 19:12:03.303 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 16, 分数: 21
2025-04-17 19:12:03.303 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 19:12:03.303 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 19:12:03.303 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73e0fd9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 19:12:03.304 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-4, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 19:12:03.304 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-4, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.467 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-6, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.467 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7806af9d] [5d7acf59-6] Response 200 OK
2025-04-17 19:12:03.467 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.468 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-6, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.468 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":581,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43694671,43710410,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43709129,43714128,43694148,43694245,43694619,43695540,43712127,43690509,43713637,43708835,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":479,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 19:12:03.468 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":581,"id":43693900,"kids":[43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43694671,43710410,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43709129,43714128,43694148,43694245,43694619,43695540,43712127,43690509,43713637,43708835,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":479,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 19:12:03.468 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 19:12:03.468 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 19:12:03.471 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 19:12:03.476 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 18, 分数: 479
2025-04-17 19:12:03.476 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 19:12:03.476 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 19:12:03.476 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38d5e066] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 19:12:03.477 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-5, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 19:12:03.477 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-5, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:03.502 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-6, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.503 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f09d772] [af9040fc-6] Response 200 OK
2025-04-17 19:12:03.503 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.503 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-6, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.503 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43710745,43714056,43712909,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":160,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 19:12:03.503 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43710745,43714056,43712909,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":160,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 19:12:03.504 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 19:12:03.504 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 19:12:03.505 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 19:12:03.510 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 17, 分数: 160
2025-04-17 19:12:03.511 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-4, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.511 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73e0fd9] [0e09478d-4] Response 200 OK
2025-04-17 19:12:03.511 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.511 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-4, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.511 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":4,"id":43713140,"kids":[43715111,43714602,43714883],"score":29,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 19:12:03.511 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":4,"id":43713140,"kids":[43715111,43714602,43714883],"score":29,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 19:12:03.511 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 19:12:03.511 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 19:12:03.512 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 19:12:03.517 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 19, 分数: 29
2025-04-17 19:12:03.684 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-5, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:03.685 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [38d5e066] [30a6c0af-5] Response 200 OK
2025-04-17 19:12:03.685 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:03.685 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-5, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:03.685 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":3,"id":43674892,"kids":[43715101,43714757],"score":17,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 19:12:03.685 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":3,"id":43674892,"kids":[43715101,43714757],"score":17,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 19:12:03.686 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 19:12:03.686 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 19:12:03.689 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 19:12:03.695 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 20, 分数: 17
2025-04-17 19:12:03.696 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:12:03.696 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 19:12:07.709 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 19:12:07.710 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 19:12:07.710 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b137bc7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 19:12:07.711 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 19:12:07.711 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-7, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 19:12:07.712 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 19:12:07.712 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-7, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:07.712 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [573c9d5e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 19:12:07.713 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 19:12:07.713 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-7, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 19:12:07.713 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-7, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:07.713 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 19:12:07.714 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [732c7df2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 19:12:07.715 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-5, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 19:12:07.716 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-5, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:07.915 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-7, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:07.915 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b137bc7] [5d7acf59-7] Response 200 OK
2025-04-17 19:12:07.916 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:07.917 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-7, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:07.917 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":59,"id":43679906,"kids":[43715057,43714946,43712651,43713565,43714072,43712793,43713518,43712753,43713172,43712785],"score":119,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 19:12:07.917 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":59,"id":43679906,"kids":[43715057,43714946,43712651,43713565,43714072,43712793,43713518,43712753,43713172,43712785],"score":119,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 19:12:07.918 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 19:12:07.918 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 19:12:07.924 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 19:12:07.928 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-5, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:07.928 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [732c7df2] [0e09478d-5] Response 200 OK
2025-04-17 19:12:07.928 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:07.929 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-5, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:07.929 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":49,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43713808,43714522,43711718,43713061,43712268,43711807],"score":130,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 19:12:07.929 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":49,"id":43711001,"kids":[43711651,43711502,43713972,43714103,43713808,43714522,43711718,43713061,43712268,43711807],"score":130,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 19:12:07.929 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 19:12:07.929 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 19:12:07.931 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 19:12:07.932 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 21, 分数: 119
2025-04-17 19:12:07.932 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 19:12:07.933 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 19:12:07.933 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [30cc3b86] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 19:12:07.933 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-6, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 19:12:07.933 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-6, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:07.935 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 23, 分数: 130
2025-04-17 19:12:07.935 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 19:12:07.935 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 19:12:07.935 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e58380f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 19:12:07.935 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-8, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 19:12:07.936 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-8, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:07.954 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-7, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:07.954 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [573c9d5e] [af9040fc-7] Response 200 OK
2025-04-17 19:12:07.955 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:07.955 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-7, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:07.956 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":199,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 19:12:07.956 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":199,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 19:12:07.957 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 19:12:07.957 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 19:12:07.959 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 19:12:07.965 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 22, 分数: 199
2025-04-17 19:12:07.965 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 19:12:07.966 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 19:12:07.966 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3b0bd114] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 19:12:07.966 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-6, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 19:12:07.966 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-6, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:08.156 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-8, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.156 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e58380f] [5d7acf59-8] Response 200 OK
2025-04-17 19:12:08.156 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.157 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-8, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.157 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 19:12:08.157 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":45,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 19:12:08.158 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 19:12:08.158 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 19:12:08.161 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 19:12:08.162 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-6, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.163 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [30cc3b86] [30a6c0af-6] Response 200 OK
2025-04-17 19:12:08.163 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.163 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-6, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.163 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43712940,43713946,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":358,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 19:12:08.163 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43712940,43713946,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":358,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 19:12:08.163 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 19:12:08.163 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 19:12:08.165 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 19:12:08.167 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 25, 分数: 45
2025-04-17 19:12:08.167 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 19:12:08.167 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 19:12:08.167 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cb3035e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 19:12:08.167 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-8, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 19:12:08.167 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-8, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:08.169 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 24, 分数: 358
2025-04-17 19:12:08.169 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 19:12:08.170 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 19:12:08.170 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a54af88] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 19:12:08.170 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-9, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 19:12:08.170 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-9, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:08.223 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-6, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.224 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3b0bd114] [0e09478d-6] Response 200 OK
2025-04-17 19:12:08.224 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.225 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-6, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.226 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":320,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43711929,43714281,43714232,43711749,43712661,43712922,43711973,43712230,43713460,43713686,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":335,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 19:12:08.226 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":320,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43711929,43714281,43714232,43711749,43712661,43712922,43711973,43712230,43713460,43713686,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":335,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 19:12:08.226 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 19:12:08.227 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 19:12:08.233 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 19:12:08.240 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 26, 分数: 335
2025-04-17 19:12:08.240 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 19:12:08.240 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 19:12:08.240 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [421b61aa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 19:12:08.241 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-7, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 19:12:08.241 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-7, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:08.398 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-9, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.399 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7a54af88] [5d7acf59-9] Response 200 OK
2025-04-17 19:12:08.399 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.400 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-9, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.400 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":158,"id":43704904,"kids":[43708124,43706249,43715096,43705510,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714770,43714084,43705584,43705646,43711233,43705667,43713433,43713542,43705658,43705959,43708803,43713886,43710306,43705528,43713665,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43711984,43713136,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":329,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 19:12:08.401 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":158,"id":43704904,"kids":[43708124,43706249,43715096,43705510,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714770,43714084,43705584,43705646,43711233,43705667,43713433,43713542,43705658,43705959,43708803,43713886,43710306,43705528,43713665,43706709,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43711984,43713136,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":329,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 19:12:08.401 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 19:12:08.402 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 19:12:08.403 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 19:12:08.410 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 28, 分数: 329
2025-04-17 19:12:08.410 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 19:12:08.410 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 19:12:08.410 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d42184f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 19:12:08.410 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-7, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 19:12:08.412 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-7, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:08.417 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-8, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.417 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1cb3035e] [af9040fc-8] Response 200 OK
2025-04-17 19:12:08.417 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.417 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-8, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.417 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43712032,43710068,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":473,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 19:12:08.418 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43712032,43710068,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":473,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 19:12:08.418 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 19:12:08.418 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 19:12:08.419 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 19:12:08.423 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 27, 分数: 473
2025-04-17 19:12:08.451 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-7, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.452 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [421b61aa] [30a6c0af-7] Response 200 OK
2025-04-17 19:12:08.452 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.452 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-7, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.452 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43704657,43711968,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":385,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 19:12:08.452 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43704657,43711968,43704513,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":385,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 19:12:08.452 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 19:12:08.452 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 19:12:08.454 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 19:12:08.462 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 29, 分数: 385
2025-04-17 19:12:08.663 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-7, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:08.664 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d42184f] [0e09478d-7] Response 200 OK
2025-04-17 19:12:08.664 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:08.665 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-7, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:08.665 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":6,"id":43678533,"kids":[43715092,43714454,43714026,43713754],"score":88,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 19:12:08.665 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":6,"id":43678533,"kids":[43715092,43714454,43714026,43713754],"score":88,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 19:12:08.666 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 19:12:08.666 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 19:12:08.672 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 19:12:08.681 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 30, 分数: 88
2025-04-17 19:12:08.682 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:12:08.682 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 19:12:14.695 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 19:12:14.695 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 19:12:14.695 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a1f8d14] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 19:12:14.696 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 19:12:14.696 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-10, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 19:12:14.696 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-10, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:14.696 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 19:12:14.697 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e12926b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 19:12:14.697 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 19:12:14.697 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-9, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 19:12:14.697 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 19:12:14.697 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-9, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:14.697 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18d3bd66] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 19:12:14.698 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-8, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 19:12:14.698 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-8, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:14.897 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-10, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:14.898 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2a1f8d14] [5d7acf59-10] Response 200 OK
2025-04-17 19:12:14.898 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:14.898 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-10, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:14.898 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 19:12:14.898 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 19:12:14.898 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 19:12:14.899 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 19:12:14.901 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 19:12:14.908 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 31, 分数: 27
2025-04-17 19:12:14.909 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 19:12:14.909 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 19:12:14.909 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6afa146] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 19:12:14.909 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-8, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:14.909 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-8, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 19:12:14.909 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18d3bd66] [30a6c0af-8] Response 200 OK
2025-04-17 19:12:14.909 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:14.909 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-8, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:14.909 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-8, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:14.910 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43713123,43714708,43711140,43707254,43707467,43712968,43713744,43713915,43712935,43709029,43712158,43707380,43714561,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43714654,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":302,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 19:12:14.910 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43713123,43714708,43711140,43707254,43707467,43712968,43713744,43713915,43712935,43709029,43712158,43707380,43714561,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43714654,43710939,43709633,43707171,43707802,43711562,43713270,43707291,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":302,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 19:12:14.910 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 19:12:14.910 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 19:12:14.911 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 19:12:14.916 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 33, 分数: 302
2025-04-17 19:12:14.916 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 19:12:14.916 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 19:12:14.916 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c6721da] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 19:12:14.917 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-11, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 19:12:14.917 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-11, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:14.926 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-9, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:14.926 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e12926b] [af9040fc-9] Response 200 OK
2025-04-17 19:12:14.926 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:14.926 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-9, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:14.926 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":45,"id":43690828,"kids":[43714289,43708922,43714990,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 19:12:14.926 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":45,"id":43690828,"kids":[43714289,43708922,43714990,43713356,43709224,43713336,43710037,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 19:12:14.927 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 19:12:14.927 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 19:12:14.930 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 19:12:14.931 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 32, 分数: 138
2025-04-17 19:12:14.931 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 19:12:14.931 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 19:12:14.931 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [157de150] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 19:12:14.932 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-9, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 19:12:14.932 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-9, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:15.115 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-11, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.115 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1c6721da] [5d7acf59-11] Response 200 OK
2025-04-17 19:12:15.115 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.115 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-11, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.115 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-8, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.115 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":466,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43707838,43713896,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43713968,43711020,43709949,43710951,43708576,43712397,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43715005,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43708089,43711217,43711059,43707854,43708690,43708671,43708814,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":505,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 19:12:15.116 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6afa146] [0e09478d-8] Response 200 OK
2025-04-17 19:12:15.116 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":466,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43707838,43713896,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43713968,43711020,43709949,43710951,43708576,43712397,43708923,43712360,43713626,43712045,43708776,43710640,43709001,43715005,43709282,43712596,43708264,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43708089,43711217,43711059,43707854,43708690,43708671,43708814,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43710268,43707968,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":505,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 19:12:15.116 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.116 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 19:12:15.116 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 19:12:15.116 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-8, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.117 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43705029,43707499,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 19:12:15.117 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43705029,43707499,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 19:12:15.117 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 19:12:15.117 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 19:12:15.118 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 19:12:15.118 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 19:12:15.119 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 34, 分数: 201
2025-04-17 19:12:15.119 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 19:12:15.120 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 35, 分数: 505
2025-04-17 19:12:15.120 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 19:12:15.120 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27543de6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 19:12:15.120 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-10, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 19:12:15.120 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-10, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:15.120 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 19:12:15.121 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 19:12:15.121 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c5135e6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 19:12:15.121 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-12, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 19:12:15.121 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-12, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:15.140 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-9, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.140 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [157de150] [30a6c0af-9] Response 200 OK
2025-04-17 19:12:15.140 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.140 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-9, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.140 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 19:12:15.140 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":133,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 19:12:15.141 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 19:12:15.141 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 19:12:15.142 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 19:12:15.144 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 36, 分数: 133
2025-04-17 19:12:15.144 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 19:12:15.144 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 19:12:15.144 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f16fb63] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 19:12:15.144 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-9, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 19:12:15.144 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-9, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:15.323 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-12, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.323 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c5135e6] [5d7acf59-12] Response 200 OK
2025-04-17 19:12:15.323 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.324 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-12, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.324 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43713899,43713731,43714662,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 19:12:15.324 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":93,"id":43677862,"kids":[43711990,43713641,43713897,43711967,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43713899,43713731,43714662,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 19:12:15.324 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 19:12:15.324 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 19:12:15.326 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 19:12:15.327 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 38, 分数: 125
2025-04-17 19:12:15.327 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 19:12:15.328 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 19:12:15.328 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c87306a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 19:12:15.328 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-10, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 19:12:15.329 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-10, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:15.350 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-9, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.350 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f16fb63] [0e09478d-9] Response 200 OK
2025-04-17 19:12:15.350 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.351 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-9, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.351 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 19:12:15.351 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":122,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 19:12:15.351 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 19:12:15.351 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 19:12:15.353 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 19:12:15.359 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 39, 分数: 122
2025-04-17 19:12:15.359 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-10, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.359 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [27543de6] [af9040fc-10] Response 200 OK
2025-04-17 19:12:15.359 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.359 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-10, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.359 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":857,"id":43692677,"kids":[43706451,43692988,43693238,43715062,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43714856,43694365,43693563,43692939,43709500,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43695906,43711778,43706646,43693018,43693144,43706138,43693685,43709824,43709841,43693264,43693384,43705219,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43705078,43711094,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43693243,43711765,43705051,43693698,43693099,43693562,43693016,43693056,43713661,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":658,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 19:12:15.360 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":857,"id":43692677,"kids":[43706451,43692988,43693238,43715062,43692983,43706546,43693350,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43713017,43693034,43693290,43692820,43710490,43693479,43714856,43694365,43693563,43692939,43709500,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43695906,43711778,43706646,43693018,43693144,43706138,43693685,43709824,43709841,43693264,43693384,43705219,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43705078,43711094,43693213,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43693243,43711765,43705051,43693698,43693099,43693562,43693016,43693056,43713661,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":658,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 19:12:15.360 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 19:12:15.360 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 19:12:15.361 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 19:12:15.365 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 37, 分数: 658
2025-04-17 19:12:15.536 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-10, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:15.536 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5c87306a] [30a6c0af-10] Response 200 OK
2025-04-17 19:12:15.536 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:15.536 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-10, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:15.536 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 19:12:15.536 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":43,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 19:12:15.536 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 19:12:15.536 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 19:12:15.538 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 19:12:15.545 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 40, 分数: 43
2025-04-17 19:12:15.545 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:12:15.546 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 19:12:23.560 [parallel-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 19:12:23.560 [parallel-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 19:12:23.561 [parallel-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6a937c39] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 19:12:23.561 [parallel-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 19:12:23.561 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-13, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 19:12:23.561 [parallel-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 19:12:23.561 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-13, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.561 [parallel-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64548f1b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 19:12:23.562 [parallel-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 19:12:23.562 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-10, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 19:12:23.562 [parallel-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 19:12:23.562 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-10, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.562 [parallel-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [606b1749] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 19:12:23.562 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-11, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 19:12:23.562 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-11, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.763 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-13, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:23.764 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6a937c39] [5d7acf59-13] Response 200 OK
2025-04-17 19:12:23.765 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:23.765 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-13, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:23.766 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 19:12:23.766 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 19:12:23.766 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 19:12:23.766 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 19:12:23.768 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 19:12:23.768 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 41, 分数: 674
2025-04-17 19:12:23.768 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 19:12:23.769 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 19:12:23.769 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53cf5823] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 19:12:23.769 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-11, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 19:12:23.769 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-11, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.770 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-10, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:23.770 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64548f1b] [0e09478d-10] Response 200 OK
2025-04-17 19:12:23.770 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:23.770 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-10, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:23.770 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 19:12:23.770 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 19:12:23.771 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 19:12:23.771 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 19:12:23.772 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 19:12:23.779 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 42, 分数: 155
2025-04-17 19:12:23.779 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 19:12:23.780 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 19:12:23.780 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e69621c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 19:12:23.780 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-14, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 19:12:23.780 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-14, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.794 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-11, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:23.794 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [606b1749] [af9040fc-11] Response 200 OK
2025-04-17 19:12:23.794 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:23.794 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-11, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:23.795 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":6,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":21,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 19:12:23.795 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":6,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":21,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 19:12:23.795 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 19:12:23.795 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 19:12:23.796 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 19:12:23.800 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 43, 分数: 21
2025-04-17 19:12:23.801 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 19:12:23.801 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 19:12:23.801 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bedbb75] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 19:12:23.801 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-11, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 19:12:23.801 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-11, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.978 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-11, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:23.979 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [53cf5823] [30a6c0af-11] Response 200 OK
2025-04-17 19:12:23.979 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:23.980 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-11, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:23.980 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 19:12:23.981 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":159,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 19:12:23.981 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 19:12:23.981 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 19:12:23.987 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 19:12:23.987 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-14, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:23.987 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e69621c] [5d7acf59-14] Response 200 OK
2025-04-17 19:12:23.987 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:23.988 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-14, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:23.988 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 19:12:23.988 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 19:12:23.988 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 19:12:23.988 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 19:12:23.989 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 44, 分数: 159
2025-04-17 19:12:23.989 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 19:12:23.989 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 19:12:23.989 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 19:12:23.990 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64c3ebc4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 19:12:23.990 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-12, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 19:12:23.990 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-12, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:23.991 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 45, 分数: 39
2025-04-17 19:12:23.991 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 19:12:23.991 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 19:12:23.991 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [cc80e87] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 19:12:23.991 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-12, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 19:12:23.991 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-12, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:24.006 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-11, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:24.006 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6bedbb75] [0e09478d-11] Response 200 OK
2025-04-17 19:12:24.007 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:24.007 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-11, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:24.007 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 19:12:24.007 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 19:12:24.008 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 19:12:24.008 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 19:12:24.009 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 19:12:24.016 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 46, 分数: 99
2025-04-17 19:12:24.017 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 19:12:24.017 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 19:12:24.017 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54e7f736] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 19:12:24.017 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-15, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 19:12:24.018 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-15, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:24.201 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-12, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:24.201 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [cc80e87] [30a6c0af-12] Response 200 OK
2025-04-17 19:12:24.201 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:24.201 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-12, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:24.202 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":41,"id":43705144,"kids":[43706427,43715044,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":119,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 19:12:24.202 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":41,"id":43705144,"kids":[43706427,43715044,43705276,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":119,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 19:12:24.202 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 19:12:24.202 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 19:12:24.204 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 19:12:24.211 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 48, 分数: 119
2025-04-17 19:12:24.211 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714433
2025-04-17 19:12:24.211 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 19:12:24.211 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [755daf7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714433.json
2025-04-17 19:12:24.212 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-12, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714433.json, method=GET}
2025-04-17 19:12:24.212 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-12, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:24.223 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-15, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:24.224 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54e7f736] [5d7acf59-15] Response 200 OK
2025-04-17 19:12:24.224 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:24.225 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-15, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:24.225 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43714982,43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 19:12:24.226 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43714982,43713435,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 19:12:24.227 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 19:12:24.227 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 19:12:24.231 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 19:12:24.236 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 49, 分数: 45
2025-04-17 19:12:24.245 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-12, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:24.245 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64c3ebc4] [af9040fc-12] Response 200 OK
2025-04-17 19:12:24.245 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:24.245 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-12, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:24.245 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 19:12:24.246 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 19:12:24.246 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 19:12:24.246 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 19:12:24.250 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 19:12:24.252 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 47, 分数: 18
2025-04-17 19:12:24.419 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-12, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:24.420 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [755daf7] [0e09478d-12] Response 200 OK
2025-04-17 19:12:24.420 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:24.421 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-12, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:24.421 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"kuberwastaken","descendants":4,"id":43714433,"kids":[43715164,43715166,43715149,43714961],"score":6,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 19:12:24.422 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"kuberwastaken","descendants":4,"id":43714433,"kids":[43715164,43715166,43715149,43714961],"score":6,"text":"Excited to announce PolyThink Alpha&#x27;s early access! Our multi-agent AI system fights hallucinations with consensus-driven, accurate answers from multiple models. I&#x27;d love for you to join the waitlist at https:&#x2F;&#x2F;www.polyth.ink&#x2F; as I&#x27;m planning to randomly roll out invites starting May. Feedback will shape our final launch! I&#x27;d love thoughts and suggestions too! What would you like to see here?","time":1744880104,"title":"PolyThink: A Multi-Agent AI System to Eliminate Hallucinations","type":"story"}
2025-04-17 19:12:24.422 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714433, by=kuberwastaken, title=PolyThink: A Multi-Agent AI System to Eliminate Hallucinations, url=null, type=story, time=1744880104
2025-04-17 19:12:24.422 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714433, 标题: PolyThink: A Multi-Agent AI System to Eliminate Hallucinations
2025-04-17 19:12:24.425 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714433
2025-04-17 19:12:24.431 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714433, 排名: 50, 分数: 6
2025-04-17 19:12:24.432 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:12:24.432 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 19:12:34.441 [parallel-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714758
2025-04-17 19:12:34.442 [parallel-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714758.json
2025-04-17 19:12:34.442 [parallel-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61a1696a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714758.json
2025-04-17 19:12:34.442 [parallel-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 19:12:34.443 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-13, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714758.json, method=GET}
2025-04-17 19:12:34.443 [parallel-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 19:12:34.443 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-13, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.443 [parallel-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f668b2e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 19:12:34.444 [parallel-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 19:12:34.444 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-16, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 19:12:34.445 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-16, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.445 [parallel-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 19:12:34.445 [parallel-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b59021a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 19:12:34.446 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-13, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 19:12:34.447 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-13, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.646 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-16, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:34.646 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f668b2e] [5d7acf59-16] Response 200 OK
2025-04-17 19:12:34.647 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:34.647 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-16, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:34.648 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":53,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43711396,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 19:12:34.648 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":53,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43713235,43711396,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 19:12:34.648 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 19:12:34.648 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 19:12:34.650 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 19:12:34.652 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 52, 分数: 127
2025-04-17 19:12:34.652 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 19:12:34.652 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 19:12:34.652 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4dd4f96e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 19:12:34.653 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-13, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 19:12:34.653 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-13, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.653 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-13, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:34.653 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61a1696a] [30a6c0af-13] Response 200 OK
2025-04-17 19:12:34.653 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:34.653 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-13, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:34.653 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pseudolus","descendants":0,"id":43714758,"score":3,"time":1744883625,"title":"The complex origin story of domestic cats: Research points to Tunisia","type":"story","url":"https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html"}
2025-04-17 19:12:34.654 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pseudolus","descendants":0,"id":43714758,"score":3,"time":1744883625,"title":"The complex origin story of domestic cats: Research points to Tunisia","type":"story","url":"https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html"}
2025-04-17 19:12:34.654 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714758, by=pseudolus, title=The complex origin story of domestic cats: Research points to Tunisia, url=https://phys.org/news/2025-04-complex-story-domestic-cats-tunisia.html, type=story, time=1744883625
2025-04-17 19:12:34.654 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714758, 标题: The complex origin story of domestic cats: Research points to Tunisia
2025-04-17 19:12:34.654 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714758
2025-04-17 19:12:34.661 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714758, 排名: 51, 分数: 3
2025-04-17 19:12:34.661 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 19:12:34.661 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 19:12:34.661 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28a111ae] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 19:12:34.662 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-17, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 19:12:34.662 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-17, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.679 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-13, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:34.679 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6b59021a] [af9040fc-13] Response 200 OK
2025-04-17 19:12:34.679 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:34.679 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-13, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:34.679 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 19:12:34.679 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 19:12:34.680 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 19:12:34.680 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 19:12:34.681 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 19:12:34.682 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 53, 分数: 110
2025-04-17 19:12:34.682 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 19:12:34.682 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 19:12:34.682 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [913ea9d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 19:12:34.682 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-14, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 19:12:34.682 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-14, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.861 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-13, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:34.862 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4dd4f96e] [0e09478d-13] Response 200 OK
2025-04-17 19:12:34.862 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-17, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:34.862 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:34.863 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28a111ae] [5d7acf59-17] Response 200 OK
2025-04-17 19:12:34.863 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-13, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:34.863 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:34.864 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43711578,43714216,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":60,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 19:12:34.864 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-17, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:34.864 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43711578,43714216,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":60,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 19:12:34.865 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43710438,43713826,43710291,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 19:12:34.865 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 19:12:34.866 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43710438,43713826,43710291,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 19:12:34.866 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 19:12:34.867 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 19:12:34.867 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 19:12:34.868 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 19:12:34.869 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 19:12:34.873 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 55, 分数: 38
2025-04-17 19:12:34.873 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 19:12:34.873 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 19:12:34.875 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [288f839] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 19:12:34.875 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 54, 分数: 60
2025-04-17 19:12:34.875 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 19:12:34.875 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 19:12:34.875 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5d0a0bf5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 19:12:34.875 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientConnect - [5d7acf59-18, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 19:12:34.875 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [af9040fc-14, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 19:12:34.876 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-18, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.876 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-14, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:34.899 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-14, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:34.900 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [913ea9d] [30a6c0af-14] Response 200 OK
2025-04-17 19:12:34.900 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:34.900 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-14, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:34.900 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 19:12:34.901 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 19:12:34.901 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 19:12:34.901 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 19:12:34.902 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 19:12:34.909 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 56, 分数: 216
2025-04-17 19:12:34.909 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703682
2025-04-17 19:12:34.909 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 19:12:34.909 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48d23e32] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703682.json
2025-04-17 19:12:34.910 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientConnect - [0e09478d-14, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703682.json, method=GET}
2025-04-17 19:12:34.910 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-14, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:35.075 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-18, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:35.076 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5d0a0bf5] [5d7acf59-18] Response 200 OK
2025-04-17 19:12:35.076 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:35.078 [reactor-http-nio-11] DEBUG r.n.http.client.HttpClientOperations - [5d7acf59-18, L:/10.64.127.133:51771 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:35.078 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 19:12:35.079 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 19:12:35.079 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 19:12:35.080 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 19:12:35.082 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 19:12:35.084 [reactor-http-nio-11] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 58, 分数: 217
2025-04-17 19:12:35.084 [reactor-http-nio-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678909
2025-04-17 19:12:35.085 [reactor-http-nio-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 19:12:35.085 [reactor-http-nio-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [79d3d403] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678909.json
2025-04-17 19:12:35.085 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientConnect - [30a6c0af-15, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678909.json, method=GET}
2025-04-17 19:12:35.085 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-15, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:12:35.105 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-14, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:35.105 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [288f839] [af9040fc-14] Response 200 OK
2025-04-17 19:12:35.105 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:35.105 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [af9040fc-14, L:/10.64.127.133:51768 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:35.105 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":127,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 19:12:35.105 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":127,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 19:12:35.105 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 19:12:35.106 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 19:12:35.110 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 19:12:35.114 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 57, 分数: 127
2025-04-17 19:12:35.116 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-14, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:35.116 [reactor-http-nio-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48d23e32] [0e09478d-14] Response 200 OK
2025-04-17 19:12:35.116 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:35.117 [reactor-http-nio-10] DEBUG r.n.http.client.HttpClientOperations - [0e09478d-14, L:/10.64.127.133:51773 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:35.117 [reactor-http-nio-10] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jamierumbelow","descendants":113,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 19:12:35.117 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jamierumbelow","descendants":113,"id":43703682,"kids":[43707020,43704059,43703943,43712942,43709688,43704307,43704545,43704066,43705707,43703996,43711095,43703942,43709659,43704180,43704343,43705570,43709518,43704342,43703939,43705629,43705752],"score":150,"time":1744799953,"title":"A Postmortem of a Startup","type":"story","url":"https://buildwithtract.com/"}
2025-04-17 19:12:35.117 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703682, by=jamierumbelow, title=A Postmortem of a Startup, url=https://buildwithtract.com/, type=story, time=1744799953
2025-04-17 19:12:35.117 [reactor-http-nio-10] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703682, 标题: A Postmortem of a Startup
2025-04-17 19:12:35.118 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703682
2025-04-17 19:12:35.118 [reactor-http-nio-10] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703682, 排名: 59, 分数: 150
2025-04-17 19:12:35.293 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-15, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:12:35.293 [reactor-http-nio-12] DEBUG o.s.w.r.f.client.ExchangeFunctions - [79d3d403] [30a6c0af-15] Response 200 OK
2025-04-17 19:12:35.294 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:12:35.294 [reactor-http-nio-12] DEBUG r.n.http.client.HttpClientOperations - [30a6c0af-15, L:/10.64.127.133:51772 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:12:35.294 [reactor-http-nio-12] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"JNRowe","descendants":42,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 19:12:35.295 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"JNRowe","descendants":42,"id":43678909,"kids":[43704473,43703406,43704785,43705039,43712223,43708495,43704092],"score":111,"time":1744615606,"title":"Fun with -fsanitize=undefined and Picolibc","type":"story","url":"https://keithp.com/blogs/sanitizer-fun/"}
2025-04-17 19:12:35.295 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678909, by=JNRowe, title=Fun with -fsanitize=undefined and Picolibc, url=https://keithp.com/blogs/sanitizer-fun/, type=story, time=1744615606
2025-04-17 19:12:35.296 [reactor-http-nio-12] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678909, 标题: Fun with -fsanitize=undefined and Picolibc
2025-04-17 19:12:35.301 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678909
2025-04-17 19:12:35.304 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678909, 排名: 60, 分数: 111
2025-04-17 19:12:35.304 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:12:35.304 [reactor-http-nio-12] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 19:26:58.882 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 19:26:58.882 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 19:26:58.883 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 19:26:58.883 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [f554b2d] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 19:27:20.548 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-1, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 19:27:20.549 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-1, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:20.904 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-1, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:20.905 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [f554b2d] [20a4b00b-1] Response 200 OK
2025-04-17 19:27:20.905 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:20.905 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-1, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:20.906 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 19:27:20.906 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 19:27:20.906 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 19:27:20.906 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 19:27:20.907 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 19:27:20.907 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 19:27:20.908 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [66c35ad1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 19:27:20.908 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714959
2025-04-17 19:27:20.908 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-2, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 19:27:20.909 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-2, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:20.909 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 19:27:20.909 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b7f317e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 19:27:20.911 [parallel-7] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 19:27:20.911 [parallel-7] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 19:27:20.912 [parallel-7] DEBUG o.s.w.r.f.client.ExchangeFunctions - [249fc9a5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 19:27:21.263 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-2, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:21.263 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [66c35ad1] [20a4b00b-2] Response 200 OK
2025-04-17 19:27:21.263 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:21.264 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-2, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:21.264 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":187,"id":43714203,"kids":[43714467,43714868,43715236,43714466,43714478,43714580,43715223,43714502,43714972,43715010,43715126,43714611,43714593,43715138,43715130,43715112,43715070,43714597,43714436,43714850,43714751,43714739,43714887,43714434,43714661,43714786,43715131],"score":257,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 19:27:21.264 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":187,"id":43714203,"kids":[43714467,43714868,43715236,43714466,43714478,43714580,43715223,43714502,43714972,43715010,43715126,43714611,43714593,43715138,43715130,43715112,43715070,43714597,43714436,43714850,43714751,43714739,43714887,43714434,43714661,43714786,43715131],"score":257,"time":1744876941,"title":"Astronomers have found signs of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 19:27:21.264 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=Astronomers have found signs of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 19:27:21.264 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: Astronomers have found signs of alien life on a planet beyond our Solar System
2025-04-17 19:27:21.269 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 19:27:21.278 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 1, 分数: 257
2025-04-17 19:27:21.278 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 19:27:21.278 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 19:27:21.278 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28a9bd73] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 19:27:42.210 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-1, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714959.json, method=GET}
2025-04-17 19:27:42.210 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-1, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.415 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-1, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:42.416 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7b7f317e] [0e7fc399-1] Response 200 OK
2025-04-17 19:27:42.416 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:42.417 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-1, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:42.417 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43714959,"kids":[43715158,43715197],"score":20,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 19:27:42.418 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43714959,"kids":[43715158,43715197],"score":20,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 19:27:42.418 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714959, by=todsacerdoti, title=Development on Apple Silicon with UTM, url=https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/, type=story, time=1744885711
2025-04-17 19:27:42.418 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714959, 标题: Development on Apple Silicon with UTM
2025-04-17 19:27:42.420 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714959
2025-04-17 19:27:42.426 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714959, 排名: 2, 分数: 20
2025-04-17 19:27:42.426 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 19:27:42.426 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 19:27:42.427 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3dd0ca5b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 19:27:42.427 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-3, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 19:27:42.427 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-3, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.478 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-1, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 19:27:42.478 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-1, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.563 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-1, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 19:27:42.564 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-1, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.772 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-1, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:42.773 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [28a9bd73] [975ea495-1] Response 200 OK
2025-04-17 19:27:42.773 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:42.774 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-1, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:42.774 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":199,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43711958,43713357,43712200,43712455,43712692,43713112,43713604,43713456,43714517,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":409,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 19:27:42.774 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":199,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43711958,43713357,43712200,43712455,43712692,43713112,43713604,43713456,43714517,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":409,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 19:27:42.775 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 19:27:42.775 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 19:27:42.779 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 19:27:42.782 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-1, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:42.782 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [249fc9a5] [0f89add4-1] Response 200 OK
2025-04-17 19:27:42.783 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:42.783 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-1, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:42.783 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":12,"id":43714594,"kids":[43715251,43715226,43714794,43715203,43714858,43715104,43714790],"score":30,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 19:27:42.783 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":12,"id":43714594,"kids":[43715251,43715226,43714794,43715203,43714858,43715104,43714790],"score":30,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 19:27:42.783 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 19:27:42.783 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 19:27:42.785 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 4, 分数: 409
2025-04-17 19:27:42.786 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 19:27:42.786 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 19:27:42.786 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f114e4d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 19:27:42.786 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 19:27:42.786 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-2, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 19:27:42.786 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-3, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:42.786 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-2, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.786 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3dd0ca5b] [20a4b00b-3] Response 200 OK
2025-04-17 19:27:42.786 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:42.787 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-3, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:42.787 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":0,"id":43714619,"score":22,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 19:27:42.787 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":0,"id":43714619,"score":22,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 19:27:42.787 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 19:27:42.787 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 19:27:42.788 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 19:27:42.791 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 3, 分数: 30
2025-04-17 19:27:42.791 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 19:27:42.791 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 19:27:42.791 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [175cddd9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 19:27:42.793 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 5, 分数: 22
2025-04-17 19:27:42.793 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715109
2025-04-17 19:27:42.793 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715109.json
2025-04-17 19:27:42.793 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [37e7fbc0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715109.json
2025-04-17 19:27:42.794 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-2, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715109.json, method=GET}
2025-04-17 19:27:42.794 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-2, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 19:27:42.794 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-2, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.794 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-2, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:42.992 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-2, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:42.992 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7f114e4d] [0e7fc399-2] Response 200 OK
2025-04-17 19:27:42.992 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:42.993 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-2, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:42.993 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":16,"id":43678144,"kids":[43715200,43715255,43714968,43715213,43714891,43715160,43715137,43715082,43714955,43715094,43714948,43678721,43714994],"score":73,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 19:27:42.993 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":16,"id":43678144,"kids":[43715200,43715255,43714968,43715213,43714891,43715160,43715137,43715082,43714955,43715094,43714948,43678721,43714994],"score":73,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 19:27:42.993 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 19:27:42.993 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 19:27:42.996 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 19:27:43.000 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-2, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:43.000 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [175cddd9] [975ea495-2] Response 200 OK
2025-04-17 19:27:43.000 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:43.000 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-2, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:43.000 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":16,"id":43713524,"kids":[43715256,43714083,43715211,43714351,43713990,43714073,43713984,43713935,43713999],"score":94,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 19:27:43.000 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":16,"id":43713524,"kids":[43715256,43714083,43715211,43714351,43713990,43714073,43713984,43713935,43713999],"score":94,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 19:27:43.000 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 19:27:43.001 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 19:27:43.002 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 19:27:43.003 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 6, 分数: 73
2025-04-17 19:27:43.003 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714902
2025-04-17 19:27:43.003 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 19:27:43.003 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4852b69a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 19:27:43.006 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 7, 分数: 94
2025-04-17 19:27:43.006 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 19:27:43.006 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 19:27:43.006 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f86bf48] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 19:27:43.007 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-3, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 19:27:43.007 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-4, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714902.json, method=GET}
2025-04-17 19:27:43.007 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-3, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:43.007 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-4, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:43.099 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-2, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:43.099 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [37e7fbc0] [0f89add4-2] Response 200 OK
2025-04-17 19:27:43.100 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:43.100 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-2, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:43.100 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jhunter1016","descendants":0,"id":43715109,"score":6,"time":1744887458,"title":"As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond","type":"story","url":"https://voiceofsandiego.org/2025/04/14/as-bot-students-continue-to-flood-in-community-colleges-struggle-to-respond/"}
2025-04-17 19:27:43.100 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jhunter1016","descendants":0,"id":43715109,"score":6,"time":1744887458,"title":"As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond","type":"story","url":"https://voiceofsandiego.org/2025/04/14/as-bot-students-continue-to-flood-in-community-colleges-struggle-to-respond/"}
2025-04-17 19:27:43.100 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715109, by=jhunter1016, title=As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond, url=https://voiceofsandiego.org/2025/04/14/as-bot-students-continue-to-flood-in-community-colleges-struggle-to-respond/, type=story, time=1744887458
2025-04-17 19:27:43.100 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715109, 标题: As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond
2025-04-17 19:27:43.102 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43715109
2025-04-17 19:27:43.102 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond
2025-04-17 19:27:43.103 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - 翻译请求：As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond
2025-04-17 19:27:43.103 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:27:43.103 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [191c2c2c] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:27:43.214 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-3, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:43.215 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f86bf48] [0e7fc399-3] Response 200 OK
2025-04-17 19:27:43.215 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:43.216 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-3, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:43.216 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":10,"id":43714004,"kids":[43715180,43714642,43714906],"score":40,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 19:27:43.217 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":10,"id":43714004,"kids":[43715180,43714642,43714906],"score":40,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 19:27:43.217 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 19:27:43.218 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 19:27:43.220 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 19:27:43.227 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 10, 分数: 40
2025-04-17 19:27:43.361 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-4, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:43.361 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4852b69a] [20a4b00b-4] Response 200 OK
2025-04-17 19:27:43.361 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:43.361 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-4, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:43.361 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"reddavis","descendants":4,"id":43714902,"kids":[43715239,43715129,43715058,43715124,43715176],"score":14,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 19:27:43.361 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"reddavis","descendants":4,"id":43714902,"kids":[43715239,43715129,43715058,43715124,43715176],"score":14,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 19:27:43.361 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714902, by=reddavis, title=Building an AI That Watches Rugby, url=https://nickjones.tech/ai-watching-rugby/, type=story, time=1744885123
2025-04-17 19:27:43.361 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714902, 标题: Building an AI That Watches Rugby
2025-04-17 19:27:43.363 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714902
2025-04-17 19:27:43.369 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714902, 排名: 9, 分数: 14
2025-04-17 19:27:43.891 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [8966460d-1, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:27:44.349 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [8966460d-1, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:27:44.349 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [191c2c2c] [8966460d-1] Response 200 OK
2025-04-17 19:27:44.349 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [8966460d-1, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:27:44.350 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=机器人 "学生不断涌入，社区学院难以应对}]}
2025-04-17 19:27:44.350 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - DeepL翻译成功: As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond -> 机器人 "学生不断涌入，社区学院难以应对
2025-04-17 19:27:44.350 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 机器人 "学生不断涌入，社区学院难以应对
2025-04-17 19:27:44.351 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43715109
2025-04-17 19:27:44.358 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715109, 排名: 8, 分数: 6
2025-04-17 19:27:44.358 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:27:44.358 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 19:27:46.365 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 19:27:46.366 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 19:27:46.366 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ddd5b03] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 19:27:46.367 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715022
2025-04-17 19:27:46.367 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-3, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 19:27:46.367 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715022.json
2025-04-17 19:27:46.368 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-3, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:46.368 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c530a8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715022.json
2025-04-17 19:27:46.368 [parallel-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678138
2025-04-17 19:27:46.369 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-3, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715022.json, method=GET}
2025-04-17 19:27:46.369 [parallel-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678138.json
2025-04-17 19:27:46.369 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-3, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:46.369 [parallel-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10debbeb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678138.json
2025-04-17 19:27:46.370 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-4, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678138.json, method=GET}
2025-04-17 19:27:46.371 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-4, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:46.583 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-3, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:46.584 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2ddd5b03] [975ea495-3] Response 200 OK
2025-04-17 19:27:46.584 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:46.584 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-3, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:46.584 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":7,"id":43714476,"kids":[43714835],"score":14,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 19:27:46.584 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":7,"id":43714476,"kids":[43714835],"score":14,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 19:27:46.584 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 19:27:46.584 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 19:27:46.584 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-4, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:46.585 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10debbeb] [0e7fc399-4] Response 200 OK
2025-04-17 19:27:46.585 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:46.585 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-4, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:46.586 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"paulpauper","descendants":50,"id":43678138,"kids":[43713850,43714003,43713971,43714036,43714058,43714020],"score":48,"time":1744606071,"title":"Adipose tissue retains an epigenetic memory of obesity after weight loss","type":"story","url":"https://www.nature.com/articles/s41586-024-08165-7"}
2025-04-17 19:27:46.586 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"paulpauper","descendants":50,"id":43678138,"kids":[43713850,43714003,43713971,43714036,43714058,43714020],"score":48,"time":1744606071,"title":"Adipose tissue retains an epigenetic memory of obesity after weight loss","type":"story","url":"https://www.nature.com/articles/s41586-024-08165-7"}
2025-04-17 19:27:46.586 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678138, by=paulpauper, title=Adipose tissue retains an epigenetic memory of obesity after weight loss, url=https://www.nature.com/articles/s41586-024-08165-7, type=story, time=1744606071
2025-04-17 19:27:46.586 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678138, 标题: Adipose tissue retains an epigenetic memory of obesity after weight loss
2025-04-17 19:27:46.587 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 19:27:46.589 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43678138
2025-04-17 19:27:46.589 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Adipose tissue retains an epigenetic memory of obesity after weight loss
2025-04-17 19:27:46.589 [reactor-http-nio-14] INFO  c.e.h.service.TranslationService - 翻译请求：Adipose tissue retains an epigenetic memory of obesity after weight loss
2025-04-17 19:27:46.590 [reactor-http-nio-14] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:27:46.590 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49548d2d] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:27:46.590 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [8966460d-2, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:27:46.598 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 11, 分数: 14
2025-04-17 19:27:46.598 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43697717
2025-04-17 19:27:46.599 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 19:27:46.599 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [988711d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 19:27:46.599 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-5, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43697717.json, method=GET}
2025-04-17 19:27:46.599 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-5, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:46.677 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-3, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:46.677 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c530a8] [0f89add4-3] Response 200 OK
2025-04-17 19:27:46.678 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:46.678 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-3, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:46.679 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"intunderflow","descendants":0,"id":43715022,"score":17,"time":1744886521,"title":"US Government threatens Harvard with foreign student ban","type":"story","url":"https://www.bbc.com/news/articles/c1egdy24v7po"}
2025-04-17 19:27:46.679 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"intunderflow","descendants":0,"id":43715022,"score":17,"time":1744886521,"title":"US Government threatens Harvard with foreign student ban","type":"story","url":"https://www.bbc.com/news/articles/c1egdy24v7po"}
2025-04-17 19:27:46.679 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715022, by=intunderflow, title=US Government threatens Harvard with foreign student ban, url=https://www.bbc.com/news/articles/c1egdy24v7po, type=story, time=1744886521
2025-04-17 19:27:46.680 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715022, 标题: US Government threatens Harvard with foreign student ban
2025-04-17 19:27:46.682 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43715022
2025-04-17 19:27:46.683 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: US Government threatens Harvard with foreign student ban
2025-04-17 19:27:46.683 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - 翻译请求：US Government threatens Harvard with foreign student ban
2025-04-17 19:27:46.683 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:27:46.684 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32a011ed] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:27:46.952 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-5, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:46.952 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [988711d] [20a4b00b-5] Response 200 OK
2025-04-17 19:27:46.952 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:46.953 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-5, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:46.953 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"randomwalker","descendants":3,"id":43697717,"kids":[43715261,43715147],"score":18,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 19:27:46.953 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"randomwalker","descendants":3,"id":43697717,"kids":[43715261,43715147],"score":18,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 19:27:46.953 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43697717, by=randomwalker, title=AI as Normal Technology, url=https://knightcolumbia.org/content/ai-as-normal-technology, type=story, time=1744747507
2025-04-17 19:27:46.953 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43697717, 标题: AI as Normal Technology
2025-04-17 19:27:46.956 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43697717
2025-04-17 19:27:46.962 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43697717, 排名: 14, 分数: 18
2025-04-17 19:27:46.962 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 19:27:46.962 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 19:27:46.962 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f626858] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 19:27:46.962 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-5, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 19:27:46.963 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-5, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:47.037 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [8966460d-2, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:27:47.037 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [49548d2d] [8966460d-2] Response 200 OK
2025-04-17 19:27:47.038 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [8966460d-2, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:27:47.038 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=减肥后脂肪组织仍保留着肥胖的表观遗传记忆}]}
2025-04-17 19:27:47.038 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Adipose tissue retains an epigenetic memory of obesity after weight loss -> 减肥后脂肪组织仍保留着肥胖的表观遗传记忆
2025-04-17 19:27:47.038 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 减肥后脂肪组织仍保留着肥胖的表观遗传记忆
2025-04-17 19:27:47.039 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43678138
2025-04-17 19:27:47.045 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678138, 排名: 13, 分数: 48
2025-04-17 19:27:47.045 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 19:27:47.045 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 19:27:47.045 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [412c9992] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 19:27:47.045 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-4, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 19:27:47.046 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-4, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:47.173 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-5, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:47.173 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f626858] [0e7fc399-5] Response 200 OK
2025-04-17 19:27:47.173 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:47.173 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-5, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:47.174 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 19:27:47.174 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 19:27:47.174 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 19:27:47.174 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 19:27:47.176 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 19:27:47.183 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 15, 分数: 1
2025-04-17 19:27:47.183 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 19:27:47.183 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 19:27:47.183 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [259a3fe5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 19:27:47.183 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-4, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 19:27:47.184 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-4, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:47.253 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-4, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:47.253 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [412c9992] [975ea495-4] Response 200 OK
2025-04-17 19:27:47.253 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:47.253 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-4, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:47.253 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":430,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 19:27:47.253 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":430,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 19:27:47.254 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 19:27:47.254 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 19:27:47.255 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 19:27:47.261 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 16, 分数: 430
2025-04-17 19:27:47.261 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 19:27:47.261 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 19:27:47.261 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3bb690b7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 19:27:47.262 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-6, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 19:27:47.262 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-6, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:47.447 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [b62c81f7-1, L:/10.64.127.133:52528 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:27:47.488 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-4, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:47.488 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [259a3fe5] [0f89add4-4] Response 200 OK
2025-04-17 19:27:47.488 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:47.488 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-4, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:47.489 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43710093,43711158,43715075,43708197,43709576,43713943,43712518,43711223,43709262,43714841,43714112,43711134,43714506,43709349,43714244,43709894,43709830,43708649,43713807,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43710101,43708208,43709529,43708288,43710058,43708564],"score":442,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 19:27:47.489 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43710093,43711158,43715075,43708197,43709576,43713943,43712518,43711223,43709262,43714841,43714112,43711134,43714506,43709349,43714244,43709894,43709830,43708649,43713807,43712178,43709844,43711413,43709527,43711717,43711165,43714266,43713163,43712060,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43710101,43708208,43709529,43708288,43710058,43708564],"score":442,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 19:27:47.489 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 19:27:47.489 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 19:27:47.490 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 19:27:47.496 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 17, 分数: 442
2025-04-17 19:27:47.496 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 19:27:47.496 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 19:27:47.497 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3cfa9fc3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 19:27:47.497 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-6, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 19:27:47.497 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-6, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:47.626 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-6, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:47.626 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3bb690b7] [20a4b00b-6] Response 200 OK
2025-04-17 19:27:47.626 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:47.626 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-6, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:47.627 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43710745,43712909,43714056,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":161,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 19:27:47.627 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":30,"id":43710576,"kids":[43710740,43711522,43713520,43710745,43712909,43714056,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":161,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 19:27:47.627 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 19:27:47.627 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 19:27:47.629 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 19:27:47.636 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 18, 分数: 161
2025-04-17 19:27:47.636 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 19:27:47.636 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 19:27:47.637 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b9ab375] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 19:27:47.637 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-5, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 19:27:47.637 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-5, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:47.704 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-6, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:47.704 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3cfa9fc3] [0e7fc399-6] Response 200 OK
2025-04-17 19:27:47.705 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:47.705 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-6, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:47.705 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":21,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 19:27:47.705 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":21,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 19:27:47.705 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 19:27:47.705 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 19:27:47.707 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 19:27:47.711 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 19, 分数: 21
2025-04-17 19:27:47.845 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-5, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:47.845 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b9ab375] [975ea495-5] Response 200 OK
2025-04-17 19:27:47.845 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:47.845 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-5, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:47.845 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":60,"id":43679906,"kids":[43715057,43714946,43712651,43713565,43714072,43712793,43713518,43712753,43713172,43712785],"score":121,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 19:27:47.845 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":60,"id":43679906,"kids":[43715057,43714946,43712651,43713565,43714072,43712793,43713518,43712753,43713172,43712785],"score":121,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 19:27:47.846 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 19:27:47.846 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 19:27:47.847 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 19:27:47.854 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 20, 分数: 121
2025-04-17 19:27:47.877 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [b62c81f7-1, L:/10.64.127.133:52528 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:27:47.877 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [32a011ed] [b62c81f7-1] Response 200 OK
2025-04-17 19:27:47.877 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [b62c81f7-1, L:/10.64.127.133:52528 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:27:47.877 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=美国政府威胁哈佛大学禁止招收外国学生}]}
2025-04-17 19:27:47.877 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - DeepL翻译成功: US Government threatens Harvard with foreign student ban -> 美国政府威胁哈佛大学禁止招收外国学生
2025-04-17 19:27:47.877 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 美国政府威胁哈佛大学禁止招收外国学生
2025-04-17 19:27:47.878 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43715022
2025-04-17 19:27:47.883 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715022, 排名: 12, 分数: 17
2025-04-17 19:27:47.883 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:27:47.883 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 19:27:51.895 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 19:27:51.896 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 19:27:51.896 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e0f492a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 19:27:51.896 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 19:27:51.897 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-5, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 19:27:51.897 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 19:27:51.897 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c24beaf] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 19:27:51.897 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-5, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:51.897 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-7, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 19:27:51.897 [parallel-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 19:27:51.897 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-7, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:51.897 [parallel-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 19:27:51.898 [parallel-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ac957bd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 19:27:51.898 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-7, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 19:27:51.898 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-7, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.104 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-7, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.105 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ac957bd] [0e7fc399-7] Response 200 OK
2025-04-17 19:27:52.105 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.106 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-7, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.106 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":4,"id":43674892,"kids":[43715101,43714757],"score":17,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 19:27:52.106 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":4,"id":43674892,"kids":[43715101,43714757],"score":17,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 19:27:52.107 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 19:27:52.107 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 19:27:52.112 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 19:27:52.118 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 23, 分数: 17
2025-04-17 19:27:52.118 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 19:27:52.118 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 19:27:52.118 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [412fe824] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 19:27:52.119 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-6, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 19:27:52.119 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-6, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.208 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-5, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.209 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1e0f492a] [0f89add4-5] Response 200 OK
2025-04-17 19:27:52.209 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.209 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-5, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.209 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":4,"id":43713140,"kids":[43715111,43714602,43714883],"score":32,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 19:27:52.209 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":4,"id":43713140,"kids":[43715111,43714602,43714883],"score":32,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 19:27:52.209 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 19:27:52.209 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 19:27:52.211 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 19:27:52.216 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 21, 分数: 32
2025-04-17 19:27:52.216 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 19:27:52.217 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 19:27:52.217 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5880a3a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 19:27:52.217 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-8, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 19:27:52.217 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-8, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.252 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-7, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.252 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c24beaf] [20a4b00b-7] Response 200 OK
2025-04-17 19:27:52.252 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.253 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-7, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.253 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":583,"id":43693900,"kids":[43715234,43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43694671,43710410,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43709129,43694148,43714128,43694245,43694619,43695540,43712127,43690509,43713637,43708835,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":481,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 19:27:52.253 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":583,"id":43693900,"kids":[43715234,43708689,43694289,43694477,43694281,43710411,43694373,43708697,43708319,43710859,43708992,43714668,43694671,43710410,43694093,43694140,43702830,43713210,43712403,43711582,43714134,43709129,43694148,43714128,43694245,43694619,43695540,43712127,43690509,43713637,43708835,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":481,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 19:27:52.254 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 19:27:52.254 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 19:27:52.256 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 19:27:52.260 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 22, 分数: 481
2025-04-17 19:27:52.260 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 19:27:52.260 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 19:27:52.261 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f2f10bf] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 19:27:52.261 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-6, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 19:27:52.261 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-6, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.332 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-6, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.332 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [412fe824] [975ea495-6] Response 200 OK
2025-04-17 19:27:52.332 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.332 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-6, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.332 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":199,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 19:27:52.333 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":199,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 19:27:52.333 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 19:27:52.333 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 19:27:52.334 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 19:27:52.340 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 24, 分数: 199
2025-04-17 19:27:52.340 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 19:27:52.340 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 19:27:52.340 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d8c0a8c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 19:27:52.341 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-8, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 19:27:52.341 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-8, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.424 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-8, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.425 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5880a3a] [0e7fc399-8] Response 200 OK
2025-04-17 19:27:52.425 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.426 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-8, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.426 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":51,"id":43711001,"kids":[43715246,43711651,43711502,43713972,43714103,43713808,43714522,43711718,43713061,43712268,43711807],"score":131,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 19:27:52.427 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":51,"id":43711001,"kids":[43715246,43711651,43711502,43713972,43714103,43713808,43714522,43711718,43713061,43712268,43711807],"score":131,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 19:27:52.427 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 19:27:52.427 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 19:27:52.433 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 19:27:52.441 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 25, 分数: 131
2025-04-17 19:27:52.441 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 19:27:52.442 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 19:27:52.442 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ac09d75] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 19:27:52.442 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-7, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 19:27:52.442 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-7, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.565 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-6, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.565 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3f2f10bf] [0f89add4-6] Response 200 OK
2025-04-17 19:27:52.565 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.566 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-6, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.567 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43712940,43713946,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":360,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 19:27:52.567 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":54,"id":43699271,"kids":[43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43712940,43713946,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":360,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 19:27:52.567 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 19:27:52.567 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 19:27:52.569 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 19:27:52.574 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 26, 分数: 360
2025-04-17 19:27:52.574 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 19:27:52.574 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 19:27:52.574 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f77fbdc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 19:27:52.575 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-9, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 19:27:52.575 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-9, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.652 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-7, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.652 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ac09d75] [975ea495-7] Response 200 OK
2025-04-17 19:27:52.652 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.652 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-7, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.652 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":323,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43711929,43714281,43714232,43711749,43712661,43712922,43711973,43712230,43713460,43713686,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":336,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 19:27:52.653 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":323,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43711826,43713856,43712005,43712350,43711999,43714657,43711929,43714281,43714232,43711749,43712661,43712922,43711973,43712230,43713460,43713686,43711808,43712183,43712972,43711754,43711745,43712634,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43712712,43711905],"score":336,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 19:27:52.653 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 19:27:52.653 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 19:27:52.654 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 19:27:52.660 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 28, 分数: 336
2025-04-17 19:27:52.660 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 19:27:52.661 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 19:27:52.661 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77152225] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 19:27:52.661 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-7, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 19:27:52.662 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-7, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:52.695 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-8, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.695 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d8c0a8c] [20a4b00b-8] Response 200 OK
2025-04-17 19:27:52.696 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.696 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-8, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.696 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":62,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 19:27:52.696 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":5,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":62,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 19:27:52.696 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 19:27:52.696 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 19:27:52.698 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 19:27:52.703 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 27, 分数: 62
2025-04-17 19:27:52.783 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-9, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.784 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5f77fbdc] [0e7fc399-9] Response 200 OK
2025-04-17 19:27:52.784 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.784 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-9, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.785 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":46,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 19:27:52.785 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":43,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":46,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 19:27:52.785 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 19:27:52.785 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 19:27:52.788 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 19:27:52.794 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 29, 分数: 46
2025-04-17 19:27:52.964 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-7, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:52.964 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77152225] [0f89add4-7] Response 200 OK
2025-04-17 19:27:52.965 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:52.965 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-7, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:52.965 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43712032,43710068,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":476,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 19:27:52.965 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":192,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43712032,43710068,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":476,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 19:27:52.965 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 19:27:52.965 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 19:27:52.967 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 19:27:52.973 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 30, 分数: 476
2025-04-17 19:27:52.973 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:27:52.973 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 19:27:58.985 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 19:27:58.986 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 19:27:58.986 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64efb2d6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 19:27:58.987 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 19:27:58.987 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-8, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 19:27:58.988 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 19:27:58.988 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-8, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:58.988 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [b1b6005] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 19:27:58.989 [parallel-8] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 19:27:58.989 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-9, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 19:27:58.990 [parallel-8] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 19:27:58.990 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-9, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:58.990 [parallel-8] DEBUG o.s.w.r.f.client.ExchangeFunctions - [297c1d48] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 19:27:58.991 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-10, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 19:27:58.991 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-10, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.195 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-8, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.195 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [64efb2d6] [975ea495-8] Response 200 OK
2025-04-17 19:27:59.195 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.196 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-8, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.196 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43704657,43704513,43711968,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":388,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 19:27:59.196 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43704657,43704513,43711968,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":388,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 19:27:59.196 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-10, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.197 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 19:27:59.197 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 19:27:59.197 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [297c1d48] [0e7fc399-10] Response 200 OK
2025-04-17 19:27:59.197 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.197 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-10, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.198 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":6,"id":43678533,"kids":[43714454,43715092,43714026,43713754],"score":89,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 19:27:59.198 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":6,"id":43678533,"kids":[43714454,43715092,43714026,43713754],"score":89,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 19:27:59.198 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 19:27:59.198 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 19:27:59.199 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 19:27:59.200 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 19:27:59.205 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 31, 分数: 388
2025-04-17 19:27:59.205 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 19:27:59.205 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 19:27:59.205 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b46c593] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 19:27:59.206 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-8, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 19:27:59.206 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-8, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.206 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 33, 分数: 89
2025-04-17 19:27:59.206 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 19:27:59.206 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 19:27:59.206 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fdcd75b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 19:27:59.207 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-9, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 19:27:59.207 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-9, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.343 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-9, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.344 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [b1b6005] [20a4b00b-9] Response 200 OK
2025-04-17 19:27:59.344 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.344 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-9, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.344 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":158,"id":43704904,"kids":[43708124,43706249,43705510,43715096,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714770,43714084,43705584,43705646,43711233,43705667,43713433,43713542,43705658,43705959,43708803,43713886,43710306,43705528,43706709,43713665,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43711984,43713136,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":331,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 19:27:59.344 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":158,"id":43704904,"kids":[43708124,43706249,43705510,43715096,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714770,43714084,43705584,43705646,43711233,43705667,43713433,43713542,43705658,43705959,43708803,43713886,43710306,43705528,43706709,43713665,43705933,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43711984,43713136,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":331,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 19:27:59.345 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 19:27:59.345 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 19:27:59.346 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 19:27:59.352 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 32, 分数: 331
2025-04-17 19:27:59.352 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 19:27:59.352 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 19:27:59.352 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c24be05] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 19:27:59.353 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-11, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 19:27:59.353 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-11, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.413 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-9, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.413 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6fdcd75b] [975ea495-9] Response 200 OK
2025-04-17 19:27:59.414 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.414 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-9, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.414 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43713123,43711140,43714708,43707254,43707467,43712968,43713744,43713915,43712935,43709029,43712158,43707380,43714561,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43714654,43707802,43711562,43707291,43713270,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":304,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 19:27:59.414 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43711391,43707510,43713123,43711140,43714708,43707254,43707467,43712968,43713744,43713915,43712935,43709029,43712158,43707380,43714561,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43714654,43707802,43711562,43707291,43713270,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":304,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 19:27:59.414 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 19:27:59.414 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 19:27:59.416 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 19:27:59.423 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 35, 分数: 304
2025-04-17 19:27:59.423 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 19:27:59.423 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 19:27:59.423 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39241cba] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 19:27:59.424 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-10, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 19:27:59.424 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-10, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.510 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-8, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.510 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b46c593] [0f89add4-8] Response 200 OK
2025-04-17 19:27:59.511 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.511 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-8, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.512 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":46,"id":43690828,"kids":[43714289,43708922,43714990,43713356,43709224,43710037,43713336,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 19:27:59.512 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":46,"id":43690828,"kids":[43714289,43708922,43714990,43713356,43709224,43710037,43713336,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 19:27:59.512 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 19:27:59.513 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 19:27:59.516 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 19:27:59.521 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 34, 分数: 138
2025-04-17 19:27:59.521 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 19:27:59.521 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 19:27:59.521 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cced6fc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 19:27:59.522 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-10, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 19:27:59.522 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-10, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.559 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-11, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.560 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7c24be05] [0e7fc399-11] Response 200 OK
2025-04-17 19:27:59.560 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.561 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-11, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.561 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 19:27:59.561 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 19:27:59.562 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 19:27:59.562 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 19:27:59.568 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 19:27:59.577 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 36, 分数: 27
2025-04-17 19:27:59.577 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715116
2025-04-17 19:27:59.577 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715116.json
2025-04-17 19:27:59.578 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [254d46d8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715116.json
2025-04-17 19:27:59.578 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-9, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715116.json, method=GET}
2025-04-17 19:27:59.578 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-9, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.730 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-10, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.730 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5cced6fc] [975ea495-10] Response 200 OK
2025-04-17 19:27:59.731 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.731 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-10, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.731 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":467,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43707838,43713896,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43711020,43709949,43713968,43710951,43708576,43712397,43708923,43712360,43708776,43712045,43713626,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43715005,43709827,43710187,43709112,43707960,43708244,43708089,43711217,43711059,43707854,43708690,43708671,43708814,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43707968,43710268,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":507,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 19:27:59.731 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":467,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43707838,43713896,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43711020,43709949,43713968,43710951,43708576,43712397,43708923,43712360,43708776,43712045,43713626,43710640,43709001,43709282,43712596,43708264,43712420,43712101,43715005,43709827,43710187,43709112,43707960,43708244,43708089,43711217,43711059,43707854,43708690,43708671,43708814,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43707968,43710268,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":507,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 19:27:59.732 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 19:27:59.732 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 19:27:59.733 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 19:27:59.739 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 38, 分数: 507
2025-04-17 19:27:59.739 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 19:27:59.739 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 19:27:59.739 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4fd35a67] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 19:27:59.740 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-12, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 19:27:59.740 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-12, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:27:59.777 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-10, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.778 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [39241cba] [20a4b00b-10] Response 200 OK
2025-04-17 19:27:59.778 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.779 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-10, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.779 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43705029,43707499,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 19:27:59.779 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43705029,43707499,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":201,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 19:27:59.779 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 19:27:59.780 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 19:27:59.782 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 19:27:59.789 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 37, 分数: 201
2025-04-17 19:27:59.883 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-9, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.883 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [254d46d8] [0f89add4-9] Response 200 OK
2025-04-17 19:27:59.883 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.883 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-9, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.884 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"uxhacker","descendants":1,"id":43715116,"kids":[43715132],"score":4,"time":1744887543,"title":"Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar","type":"story","url":"https://www.nytimes.com/2025/04/17/health/pill-glp-1-eli-lilly.html"}
2025-04-17 19:27:59.884 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"uxhacker","descendants":1,"id":43715116,"kids":[43715132],"score":4,"time":1744887543,"title":"Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar","type":"story","url":"https://www.nytimes.com/2025/04/17/health/pill-glp-1-eli-lilly.html"}
2025-04-17 19:27:59.884 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715116, by=uxhacker, title=Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar, url=https://www.nytimes.com/2025/04/17/health/pill-glp-1-eli-lilly.html, type=story, time=1744887543
2025-04-17 19:27:59.884 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715116, 标题: Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar
2025-04-17 19:27:59.887 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43715116
2025-04-17 19:27:59.888 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar
2025-04-17 19:27:59.889 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - 翻译请求：Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar
2025-04-17 19:27:59.889 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:27:59.889 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [766d751f] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:27:59.889 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [8966460d-3, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:27:59.946 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-12, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:27:59.947 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4fd35a67] [0e7fc399-12] Response 200 OK
2025-04-17 19:27:59.947 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:27:59.948 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-12, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:27:59.948 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":134,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 19:27:59.948 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":134,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 19:27:59.948 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 19:27:59.949 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 19:27:59.954 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 19:27:59.966 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 40, 分数: 134
2025-04-17 19:28:00.380 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [8966460d-3, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:28:00.381 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [766d751f] [8966460d-3] Response 200 OK
2025-04-17 19:28:00.381 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [8966460d-3, L:/10.64.127.133:52525 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:28:00.381 [reactor-http-nio-15] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=在减肥和降血糖方面，日服药丸可能与 Ozempic 一样有效}]}
2025-04-17 19:28:00.382 [reactor-http-nio-15] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar -> 在减肥和降血糖方面，日服药丸可能与 Ozempic 一样有效
2025-04-17 19:28:00.382 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 在减肥和降血糖方面，日服药丸可能与 Ozempic 一样有效
2025-04-17 19:28:00.383 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43715116
2025-04-17 19:28:00.389 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715116, 排名: 39, 分数: 4
2025-04-17 19:28:00.389 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:28:00.389 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 19:28:08.395 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 19:28:08.396 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 19:28:08.396 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c26d57c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 19:28:08.397 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 19:28:08.397 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-11, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 19:28:08.398 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 19:28:08.398 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-11, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.398 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4bf3705a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 19:28:08.399 [parallel-3] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 19:28:08.399 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-11, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 19:28:08.399 [parallel-3] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 19:28:08.399 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-11, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.400 [parallel-3] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d1f18f7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 19:28:08.401 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-10, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 19:28:08.401 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-10, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.606 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-11, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:08.606 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2c26d57c] [975ea495-11] Response 200 OK
2025-04-17 19:28:08.607 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:08.607 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-11, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:08.608 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":857,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43715062,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43693034,43713017,43693290,43692820,43710490,43693479,43694365,43693563,43714856,43692939,43709500,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43695906,43711778,43706646,43693018,43693144,43706138,43693685,43709824,43693264,43709841,43693384,43705219,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43705078,43693213,43711094,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43693243,43711765,43693698,43705051,43693099,43693562,43693016,43693056,43713661,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":658,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 19:28:08.608 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":857,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43715062,43692997,43707349,43692896,43693223,43692996,43693275,43713343,43693034,43713017,43693290,43692820,43710490,43693479,43694365,43693563,43714856,43692939,43709500,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43695906,43711778,43706646,43693018,43693144,43706138,43693685,43709824,43693264,43709841,43693384,43705219,43707320,43704834,43706318,43708998,43693725,43703214,43700992,43708054,43692883,43692990,43704088,43693105,43693863,43706307,43705288,43705078,43693213,43711094,43692877,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43693243,43711765,43693698,43705051,43693099,43693562,43693016,43693056,43713661,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":658,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 19:28:08.609 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 19:28:08.609 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 19:28:08.611 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 19:28:08.619 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 41, 分数: 658
2025-04-17 19:28:08.619 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 19:28:08.619 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 19:28:08.619 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5bbeb18a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 19:28:08.619 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-13, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 19:28:08.620 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-13, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.705 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-10, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:08.706 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4d1f18f7] [0f89add4-10] Response 200 OK
2025-04-17 19:28:08.706 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:08.706 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-10, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:08.707 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":94,"id":43677862,"kids":[43711990,43713641,43711967,43713897,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43715194,43712992,43713138,43713899,43713731,43714662,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 19:28:08.707 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":94,"id":43677862,"kids":[43711990,43713641,43711967,43713897,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43715194,43712992,43713138,43713899,43713731,43714662,43713623,43711986,43712594,43713872,43712213,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":125,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 19:28:08.707 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 19:28:08.707 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 19:28:08.711 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 19:28:08.721 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 43, 分数: 125
2025-04-17 19:28:08.721 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 19:28:08.721 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 19:28:08.722 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e8cd60f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 19:28:08.722 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-12, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 19:28:08.722 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-12, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.754 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-11, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:08.754 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4bf3705a] [20a4b00b-11] Response 200 OK
2025-04-17 19:28:08.754 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:08.754 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-11, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:08.754 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":124,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 19:28:08.754 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":124,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 19:28:08.754 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 19:28:08.754 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 19:28:08.756 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 19:28:08.760 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 42, 分数: 124
2025-04-17 19:28:08.761 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 19:28:08.761 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 19:28:08.761 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7bc0b35d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 19:28:08.761 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-11, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 19:28:08.761 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-11, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.827 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-13, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:08.827 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5bbeb18a] [0e7fc399-13] Response 200 OK
2025-04-17 19:28:08.828 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:08.828 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-13, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:08.828 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":44,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 19:28:08.828 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":44,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 19:28:08.829 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 19:28:08.829 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 19:28:08.835 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 19:28:08.840 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 44, 分数: 44
2025-04-17 19:28:08.840 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 19:28:08.841 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 19:28:08.841 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3989286] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 19:28:08.841 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-12, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 19:28:08.841 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-12, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:08.928 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-12, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:08.928 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3e8cd60f] [975ea495-12] Response 200 OK
2025-04-17 19:28:08.928 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:08.929 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-12, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:08.929 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 19:28:08.929 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 19:28:08.929 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 19:28:08.929 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 19:28:08.932 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 19:28:08.938 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 45, 分数: 674
2025-04-17 19:28:08.938 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 19:28:08.939 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 19:28:08.939 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e7794c0] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 19:28:08.939 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-14, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 19:28:08.939 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-14, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:09.067 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-11, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:09.067 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7bc0b35d] [0f89add4-11] Response 200 OK
2025-04-17 19:28:09.067 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:09.067 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-11, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:09.067 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 19:28:09.067 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 19:28:09.067 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 19:28:09.067 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 19:28:09.069 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 19:28:09.075 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 46, 分数: 155
2025-04-17 19:28:09.075 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 19:28:09.075 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 19:28:09.075 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c2a3ec9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 19:28:09.076 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-13, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 19:28:09.076 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-13, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:09.154 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-14, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:09.155 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e7794c0] [0e7fc399-14] Response 200 OK
2025-04-17 19:28:09.155 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:09.156 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-14, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:09.156 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 19:28:09.156 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 19:28:09.156 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 19:28:09.157 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 19:28:09.158 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 19:28:09.164 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 48, 分数: 39
2025-04-17 19:28:09.164 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 19:28:09.165 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 19:28:09.165 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [638520f8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 19:28:09.165 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-12, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 19:28:09.165 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-12, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:09.196 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-12, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:09.197 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3989286] [20a4b00b-12] Response 200 OK
2025-04-17 19:28:09.197 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:09.198 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-12, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:09.198 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":160,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 19:28:09.199 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":160,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 19:28:09.199 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 19:28:09.200 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 19:28:09.205 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 19:28:09.212 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 47, 分数: 160
2025-04-17 19:28:09.283 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-13, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:09.283 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6c2a3ec9] [975ea495-13] Response 200 OK
2025-04-17 19:28:09.283 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:09.284 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-13, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:09.284 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":6,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":21,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 19:28:09.284 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":6,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":21,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 19:28:09.284 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 19:28:09.284 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 19:28:09.285 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 19:28:09.290 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 49, 分数: 21
2025-04-17 19:28:09.469 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-12, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:09.470 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [638520f8] [0f89add4-12] Response 200 OK
2025-04-17 19:28:09.470 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:09.470 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-12, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:09.471 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 19:28:09.471 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 19:28:09.471 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 19:28:09.471 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 19:28:09.473 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 19:28:09.478 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 50, 分数: 99
2025-04-17 19:28:09.479 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:28:09.479 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 19:28:19.481 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 19:28:19.482 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 19:28:19.482 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7319125a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 19:28:19.483 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 19:28:19.483 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-15, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 19:28:19.484 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 19:28:19.484 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-15, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:19.484 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [747d896f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 19:28:19.485 [parallel-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710761
2025-04-17 19:28:19.485 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-13, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 19:28:19.485 [parallel-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 19:28:19.485 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-13, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:19.486 [parallel-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14de41a8] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710761.json
2025-04-17 19:28:19.487 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-14, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710761.json, method=GET}
2025-04-17 19:28:19.487 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-14, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:19.691 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-15, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:19.691 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7319125a] [0e7fc399-15] Response 200 OK
2025-04-17 19:28:19.691 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:19.692 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-15, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:19.692 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 19:28:19.692 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 19:28:19.692 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 19:28:19.692 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 19:28:19.694 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 19:28:19.700 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-14, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:19.701 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [14de41a8] [975ea495-14] Response 200 OK
2025-04-17 19:28:19.701 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:19.701 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-14, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:19.701 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43713435,43714982,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 19:28:19.701 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 51, 分数: 18
2025-04-17 19:28:19.701 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jsomers","descendants":9,"id":43710761,"kids":[43713435,43714982,43713215,43713223,43713234,43713016,43713543,43711190],"score":45,"text":"I thought the HN crowd would appreciate this story I wrote about the keeper of a university&#x27;s lab animals. In reporting articles about science, and being a biology-watcher generally, I’ve had an uneasy time squaring my enthusiasm for cutting-edge biomedical research with the fact that this research so regularly involves breeding animals just to give them diseases and kill them. This is done as humanely as possible, of course.<p>The contrast hit me most vividly during the pandemic when I was writing an article about the immune system. [1] One of the scientists I spoke to told me about putting hamsters on warming plates, picking them up gently — in general, caring for and about them — and then feeling grief at their deaths. But of course understanding the immune response during infection with covid was a worthy cause. I felt no judgement towards this scientist; they are in a difficult position.<p>There was another more direct bit of inspiration, when I read this article [2], in 2023, about the toll that caring for laboratory animals could take on people’s mental health:<p>&gt; <i>Besides the symptoms Sessions experienced, those who handle lab animals may face insomnia, chronic physical ailments, zombielike lack of empathy, and, in extreme cases, severe depression, substance abuse, and thoughts of suicide. As many as nine in 10 people in the profession will suffer from compassion fatigue at some point during their careers, according to recent research, more than twice the rate of those who work in hospital intensive care units. It’s one of the leading reasons animal care workers quit.</i><p>That left an impression on me, and also armed me with a character: the forgotten-about, somewhat miserable vivarium worker.<p>The story obviously takes many liberties with fact — it is fiction — but I also tried to ground it in reality, and stuff that you might think I made up (the guillotine, the crazy VR sphere in the first paragraph), I did not.<p>I hope you enjoy! If nothing else I expect you’ll appreciate the illustrations, done by my friend Ben Smith [3].<p>[1]: <a href=\"https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-coronavirus-hacks-the-immune-system\" rel=\"nofollow\">https:&#x2F;&#x2F;www.newyorker.com&#x2F;magazine&#x2F;2020&#x2F;11&#x2F;09&#x2F;how-the-corona...</a><p>[2]: <a href=\"https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-caring-research-animals-can-take-severe-mental-toll\" rel=\"nofollow\">https:&#x2F;&#x2F;www.science.org&#x2F;content&#x2F;article&#x2F;suffering-silence-ca...</a><p>[3]: <a href=\"https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.stephenbonesproductions.com&#x2F;</a>","time":1744839970,"title":"\"Vivarium\": The keeper of a lab's animals stumbles onto a secret [fiction]","type":"story","url":"https://jsomers.net/vivarium/"}
2025-04-17 19:28:19.701 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 19:28:19.702 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710761, by=jsomers, title="Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction], url=https://jsomers.net/vivarium/, type=story, time=1744839970
2025-04-17 19:28:19.702 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 19:28:19.702 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710761, 标题: "Vivarium": The keeper of a lab's animals stumbles onto a secret [fiction]
2025-04-17 19:28:19.702 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [81d38b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 19:28:19.702 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-13, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 19:28:19.702 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-13, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:19.704 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710761
2025-04-17 19:28:19.708 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710761, 排名: 53, 分数: 45
2025-04-17 19:28:19.708 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 19:28:19.708 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 19:28:19.708 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b56d035] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 19:28:19.708 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-16, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 19:28:19.708 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-16, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:19.841 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-13, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:19.841 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [747d896f] [20a4b00b-13] Response 200 OK
2025-04-17 19:28:19.842 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:19.842 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-13, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:19.843 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":41,"id":43705144,"kids":[43706427,43705276,43715044,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":119,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 19:28:19.843 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":41,"id":43705144,"kids":[43706427,43705276,43715044,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":119,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 19:28:19.844 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 19:28:19.844 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 19:28:19.846 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 19:28:19.852 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 52, 分数: 119
2025-04-17 19:28:19.852 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706118
2025-04-17 19:28:19.852 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 19:28:19.852 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7fadb78c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706118.json
2025-04-17 19:28:19.852 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-15, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706118.json, method=GET}
2025-04-17 19:28:19.852 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-15, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:19.914 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-16, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:19.915 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4b56d035] [0e7fc399-16] Response 200 OK
2025-04-17 19:28:19.915 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:19.915 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-16, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:19.915 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":54,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43711396,43713235,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 19:28:19.916 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":54,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43711396,43713235,43712591,43711426,43712117,43712687,43713162,43711822],"score":127,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 19:28:19.916 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 19:28:19.916 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 19:28:19.918 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 19:28:19.922 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 55, 分数: 127
2025-04-17 19:28:19.922 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 19:28:19.923 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 19:28:19.923 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10d1fda2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 19:28:19.923 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [20a4b00b-14, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 19:28:19.923 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-14, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:20.006 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-13, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:20.006 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [81d38b] [0f89add4-13] Response 200 OK
2025-04-17 19:28:20.006 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:20.007 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-13, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:20.007 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 19:28:20.007 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 19:28:20.007 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 19:28:20.008 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 19:28:20.009 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 19:28:20.014 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 54, 分数: 110
2025-04-17 19:28:20.014 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679831
2025-04-17 19:28:20.014 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 19:28:20.015 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77eef141] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679831.json
2025-04-17 19:28:20.015 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientConnect - [0e7fc399-17, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679831.json, method=GET}
2025-04-17 19:28:20.015 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-17, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:20.060 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-15, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:20.061 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7fadb78c] [975ea495-15] Response 200 OK
2025-04-17 19:28:20.061 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:20.061 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-15, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:20.061 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43711578,43714216,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":60,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 19:28:20.061 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":79,"id":43706118,"kids":[43707235,43707476,43708250,43707728,43708122,43707874,43711578,43714216,43708270,43707687,43706895,43710120,43707508,43707407,43707115],"score":60,"time":1744814179,"title":"Future Chips Will Be Hotter Than Ever","type":"story","url":"https://spectrum.ieee.org/hot-chips"}
2025-04-17 19:28:20.061 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706118, by=voxadam, title=Future Chips Will Be Hotter Than Ever, url=https://spectrum.ieee.org/hot-chips, type=story, time=1744814179
2025-04-17 19:28:20.061 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706118, 标题: Future Chips Will Be Hotter Than Ever
2025-04-17 19:28:20.062 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706118
2025-04-17 19:28:20.067 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706118, 排名: 56, 分数: 60
2025-04-17 19:28:20.067 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677122
2025-04-17 19:28:20.067 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 19:28:20.068 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58fd65e3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677122.json
2025-04-17 19:28:20.068 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientConnect - [0f89add4-14, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677122.json, method=GET}
2025-04-17 19:28:20.068 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-14, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:20.287 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-14, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:20.288 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [10d1fda2] [20a4b00b-14] Response 200 OK
2025-04-17 19:28:20.288 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:20.288 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [20a4b00b-14, L:/10.64.127.133:52488 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:20.288 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 19:28:20.288 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43710344,43694078,43694724,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 19:28:20.288 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 19:28:20.288 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 19:28:20.290 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 19:28:20.296 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 57, 分数: 216
2025-04-17 19:28:20.296 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43700633
2025-04-17 19:28:20.296 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 19:28:20.296 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [26546f36] HTTP GET https://hacker-news.firebaseio.com/v0/item/43700633.json
2025-04-17 19:28:20.297 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientConnect - [975ea495-16, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43700633.json, method=GET}
2025-04-17 19:28:20.297 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-16, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:28:20.373 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-14, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:20.373 [reactor-http-nio-15] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58fd65e3] [0f89add4-14] Response 200 OK
2025-04-17 19:28:20.373 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:20.373 [reactor-http-nio-15] DEBUG r.n.http.client.HttpClientOperations - [0f89add4-14, L:/10.64.127.133:52523 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:20.373 [reactor-http-nio-15] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":127,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 19:28:20.374 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juancampa","descendants":26,"id":43677122,"kids":[43704920,43706461,43711168,43709154,43705118,43679801,43706507,43711417,43680291,43705198,43706265],"score":127,"time":1744592561,"title":"Fibonacci Hashing: The Optimization That the World Forgot","type":"story","url":"https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/"}
2025-04-17 19:28:20.374 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677122, by=juancampa, title=Fibonacci Hashing: The Optimization That the World Forgot, url=https://probablydance.com/2018/06/16/fibonacci-hashing-the-optimization-that-the-world-forgot-or-a-better-alternative-to-integer-modulo/, type=story, time=1744592561
2025-04-17 19:28:20.374 [reactor-http-nio-15] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677122, 标题: Fibonacci Hashing: The Optimization That the World Forgot
2025-04-17 19:28:20.376 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677122
2025-04-17 19:28:20.383 [reactor-http-nio-15] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677122, 排名: 59, 分数: 127
2025-04-17 19:28:20.402 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-17, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:20.402 [reactor-http-nio-14] DEBUG o.s.w.r.f.client.ExchangeFunctions - [77eef141] [0e7fc399-17] Response 200 OK
2025-04-17 19:28:20.402 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:20.403 [reactor-http-nio-14] DEBUG r.n.http.client.HttpClientOperations - [0e7fc399-17, L:/10.64.127.133:52522 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:20.403 [reactor-http-nio-14] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43710438,43710291,43713826,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 19:28:20.403 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"alexharri","descendants":13,"id":43679831,"kids":[43710438,43710291,43713826,43710142,43710816,43709964,43710954,43711585,43710666,43711894],"score":38,"time":1744626712,"title":"Four Kinds of Optimisation (2023)","type":"story","url":"https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html"}
2025-04-17 19:28:20.403 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679831, by=alexharri, title=Four Kinds of Optimisation (2023), url=https://tratt.net/laurie/blog/2023/four_kinds_of_optimisation.html, type=story, time=1744626712
2025-04-17 19:28:20.403 [reactor-http-nio-14] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679831, 标题: Four Kinds of Optimisation (2023)
2025-04-17 19:28:20.404 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679831
2025-04-17 19:28:20.409 [reactor-http-nio-14] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679831, 排名: 58, 分数: 38
2025-04-17 19:28:20.504 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-16, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:28:20.505 [reactor-http-nio-13] DEBUG o.s.w.r.f.client.ExchangeFunctions - [26546f36] [975ea495-16] Response 200 OK
2025-04-17 19:28:20.505 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:28:20.505 [reactor-http-nio-13] DEBUG r.n.http.client.HttpClientOperations - [975ea495-16, L:/10.64.127.133:52524 - R:hacker-news.firebaseio.com/34.120.160.131:443] Received last HTTP packet
2025-04-17 19:28:20.505 [reactor-http-nio-13] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 19:28:20.505 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":48,"id":43700633,"kids":[43701903,43709577,43700650,43703082,43703381,43703184,43707638,43702967,43702369,43703152,43701071,43705418,43711115,43702032,43702027,43702037,43702701,43700864,43701783],"score":217,"time":1744768906,"title":"Markov Chain Monte Carlo Without All the Bullshit (2015)","type":"story","url":"https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/"}
2025-04-17 19:28:20.506 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43700633, by=ibobev, title=Markov Chain Monte Carlo Without All the Bullshit (2015), url=https://www.jeremykun.com/2015/04/06/markov-chain-monte-carlo-without-all-the-bullshit/, type=story, time=1744768906
2025-04-17 19:28:20.506 [reactor-http-nio-13] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43700633, 标题: Markov Chain Monte Carlo Without All the Bullshit (2015)
2025-04-17 19:28:20.508 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43700633
2025-04-17 19:28:20.514 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43700633, 排名: 60, 分数: 217
2025-04-17 19:28:20.514 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:28:20.514 [reactor-http-nio-13] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 19:41:58.900 [scheduling-1] INFO  c.e.h.service.NewsUpdateService - 开始更新新闻数据...
2025-04-17 19:41:58.901 [scheduling-1] INFO  c.e.h.service.HackerNewsService - 获取热门故事列表，限制: 60
2025-04-17 19:41:58.901 [scheduling-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 19:41:58.901 [scheduling-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f4be0d5] HTTP GET https://hacker-news.firebaseio.com/v0/topstories.json
2025-04-17 19:42:20.195 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-1, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/topstories.json, method=GET}
2025-04-17 19:42:20.195 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-1, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:20.409 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-1, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:20.409 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f4be0d5] [c7f85065-1] Response 200 OK
2025-04-17 19:42:20.409 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:20.409 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-1, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:20.410 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取到 500 个故事ID
2025-04-17 19:42:20.410 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 获取到 60 条热门新闻ID，准备分批处理
2025-04-17 19:42:20.410 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 将 60 个ID分为 6 个批次处理，每批 10 个ID
2025-04-17 19:42:20.410 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 开始处理第 1 批次，包含 10 个ID
2025-04-17 19:42:20.411 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714959
2025-04-17 19:42:20.411 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 19:42:20.411 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a8f79] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714959.json
2025-04-17 19:42:20.411 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715109
2025-04-17 19:42:20.411 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-2, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714959.json, method=GET}
2025-04-17 19:42:20.412 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-2, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:20.412 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715109.json
2025-04-17 19:42:20.412 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [601711fa] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715109.json
2025-04-17 19:42:20.412 [parallel-10] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714594
2025-04-17 19:42:20.413 [parallel-10] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 19:42:20.413 [parallel-10] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5372a6cb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714594.json
2025-04-17 19:42:20.618 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-2, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:20.618 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a8f79] [c7f85065-2] Response 200 OK
2025-04-17 19:42:20.618 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:20.619 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-2, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:20.619 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":10,"id":43714959,"kids":[43715345,43715343,43715274,43715158,43715197],"score":26,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 19:42:20.619 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":10,"id":43714959,"kids":[43715345,43715343,43715274,43715158,43715197],"score":26,"time":1744885711,"title":"Development on Apple Silicon with UTM","type":"story","url":"https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/"}
2025-04-17 19:42:20.619 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714959, by=todsacerdoti, title=Development on Apple Silicon with UTM, url=https://rkiselenko.dev/blog/development-on-mac-with-utm/development-on-mac-with-lima/, type=story, time=1744885711
2025-04-17 19:42:20.619 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714959, 标题: Development on Apple Silicon with UTM
2025-04-17 19:42:20.622 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714959
2025-04-17 19:42:20.629 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714959, 排名: 1, 分数: 26
2025-04-17 19:42:20.629 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714619
2025-04-17 19:42:20.629 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 19:42:20.629 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ac434b9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714619.json
2025-04-17 19:42:41.815 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-1, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715109.json, method=GET}
2025-04-17 19:42:41.815 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-1, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:41.863 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-1, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714594.json, method=GET}
2025-04-17 19:42:41.863 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-1, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.019 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-1, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.019 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [601711fa] [9287fe66-1] Response 200 OK
2025-04-17 19:42:42.019 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.019 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-1, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.020 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jhunter1016","descendants":7,"id":43715109,"kids":[43715270,43715315],"score":17,"time":1744887458,"title":"As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond","type":"story","url":"https://voiceofsandiego.org/2025/04/14/as-bot-students-continue-to-flood-in-community-colleges-struggle-to-respond/"}
2025-04-17 19:42:42.020 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jhunter1016","descendants":7,"id":43715109,"kids":[43715270,43715315],"score":17,"time":1744887458,"title":"As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond","type":"story","url":"https://voiceofsandiego.org/2025/04/14/as-bot-students-continue-to-flood-in-community-colleges-struggle-to-respond/"}
2025-04-17 19:42:42.020 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715109, by=jhunter1016, title=As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond, url=https://voiceofsandiego.org/2025/04/14/as-bot-students-continue-to-flood-in-community-colleges-struggle-to-respond/, type=story, time=1744887458
2025-04-17 19:42:42.020 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715109, 标题: As 'Bot' Students Continue to Flood In, Community Colleges Struggle to Respond
2025-04-17 19:42:42.023 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43715109
2025-04-17 19:42:42.030 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715109, 排名: 2, 分数: 17
2025-04-17 19:42:42.030 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711957
2025-04-17 19:42:42.030 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 19:42:42.030 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6323b7d5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711957.json
2025-04-17 19:42:42.030 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-3, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711957.json, method=GET}
2025-04-17 19:42:42.030 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-3, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.091 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-1, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.091 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5372a6cb] [43681bcb-1] Response 200 OK
2025-04-17 19:42:42.092 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.092 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-1, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.092 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"transpute","descendants":13,"id":43714594,"kids":[43715251,43715319,43714794,43715226,43715203,43715104,43714858,43714790],"score":36,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 19:42:42.092 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"transpute","descendants":13,"id":43714594,"kids":[43715251,43715319,43714794,43715226,43715203,43715104,43714858,43714790],"score":36,"time":1744882005,"title":"Advanced Shell Scripting with Bash (2006) [pdf]","type":"story","url":"http://uniforumchicago.org/slides/bash1.pdf"}
2025-04-17 19:42:42.092 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714594, by=transpute, title=Advanced Shell Scripting with Bash (2006) [pdf], url=http://uniforumchicago.org/slides/bash1.pdf, type=story, time=1744882005
2025-04-17 19:42:42.093 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714594, 标题: Advanced Shell Scripting with Bash (2006) [pdf]
2025-04-17 19:42:42.095 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714594
2025-04-17 19:42:42.099 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714594, 排名: 3, 分数: 36
2025-04-17 19:42:42.100 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678144
2025-04-17 19:42:42.100 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 19:42:42.100 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e979070] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678144.json
2025-04-17 19:42:42.100 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-2, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678144.json, method=GET}
2025-04-17 19:42:42.101 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-2, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.237 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-3, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.237 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6323b7d5] [c7f85065-3] Response 200 OK
2025-04-17 19:42:42.237 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.238 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-3, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.238 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"RVRX","descendants":200,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43711958,43713357,43712200,43712455,43712692,43713112,43713604,43713456,43714517,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":415,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 19:42:42.238 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"RVRX","descendants":200,"id":43711957,"kids":[43712702,43713766,43712307,43712374,43712323,43712126,43712432,43712578,43712124,43713670,43712566,43712443,43711958,43713357,43712200,43712455,43712692,43713112,43713604,43713456,43714517,43713059,43712812,43712210,43713493,43712001,43712371,43712107,43712216],"score":415,"time":1744851349,"title":"Zoom outage caused by accidental 'shutting down' of the zoom.us domain","type":"story","url":"https://status.zoom.us/incidents/pw9r9vnq5rvk"}
2025-04-17 19:42:42.238 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711957, by=RVRX, title=Zoom outage caused by accidental 'shutting down' of the zoom.us domain, url=https://status.zoom.us/incidents/pw9r9vnq5rvk, type=story, time=1744851349
2025-04-17 19:42:42.238 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711957, 标题: Zoom outage caused by accidental 'shutting down' of the zoom.us domain
2025-04-17 19:42:42.240 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711957
2025-04-17 19:42:42.245 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711957, 排名: 5, 分数: 415
2025-04-17 19:42:42.246 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713524
2025-04-17 19:42:42.246 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 19:42:42.247 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [788b7bc9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713524.json
2025-04-17 19:42:42.247 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-2, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713524.json, method=GET}
2025-04-17 19:42:42.247 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-2, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.290 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-1, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714619.json, method=GET}
2025-04-17 19:42:42.290 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-1, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.306 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-2, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.306 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6e979070] [9287fe66-2] Response 200 OK
2025-04-17 19:42:42.306 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.306 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-2, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.306 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calme_toi","descendants":17,"id":43678144,"kids":[43715200,43714968,43714891,43715255,43715213,43715160,43715137,43715082,43714955,43715094,43714948,43678721,43714994],"score":85,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 19:42:42.307 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calme_toi","descendants":17,"id":43678144,"kids":[43715200,43714968,43714891,43715255,43715213,43715160,43715137,43715082,43714955,43715094,43714948,43678721,43714994],"score":85,"time":1744606134,"title":"Making Software","type":"story","url":"https://www.makingsoftware.com/"}
2025-04-17 19:42:42.307 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678144, by=calme_toi, title=Making Software, url=https://www.makingsoftware.com/, type=story, time=1744606134
2025-04-17 19:42:42.307 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678144, 标题: Making Software
2025-04-17 19:42:42.309 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678144
2025-04-17 19:42:42.316 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678144, 排名: 6, 分数: 85
2025-04-17 19:42:42.316 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714004
2025-04-17 19:42:42.316 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 19:42:42.316 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58a15378] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714004.json
2025-04-17 19:42:42.317 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-4, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714004.json, method=GET}
2025-04-17 19:42:42.317 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-4, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.472 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-2, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.472 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [788b7bc9] [43681bcb-2] Response 200 OK
2025-04-17 19:42:42.473 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.473 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-2, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.473 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"zdw","descendants":16,"id":43713524,"kids":[43714083,43715256,43715211,43714351,43713990,43714073,43713984,43713935,43713999],"score":95,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 19:42:42.473 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"zdw","descendants":16,"id":43713524,"kids":[43714083,43715256,43715211,43714351,43713990,43714073,43713984,43713935,43713999],"score":95,"time":1744869211,"title":"Passing planes and other whoosh sounds","type":"story","url":"https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html"}
2025-04-17 19:42:42.473 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713524, by=zdw, title=Passing planes and other whoosh sounds, url=https://www.windytan.com/2025/04/passing-planes-and-other-whoosh-sounds.html, type=story, time=1744869211
2025-04-17 19:42:42.473 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713524, 标题: Passing planes and other whoosh sounds
2025-04-17 19:42:42.476 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713524
2025-04-17 19:42:42.482 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713524, 排名: 7, 分数: 95
2025-04-17 19:42:42.482 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715022
2025-04-17 19:42:42.482 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715022.json
2025-04-17 19:42:42.483 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1516295b] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715022.json
2025-04-17 19:42:42.483 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-3, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715022.json, method=GET}
2025-04-17 19:42:42.483 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-3, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.522 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-4, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.522 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [58a15378] [c7f85065-4] Response 200 OK
2025-04-17 19:42:42.523 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.523 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-4, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.523 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"galeos","descendants":10,"id":43714004,"kids":[43715180,43714642,43714906],"score":42,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 19:42:42.523 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"galeos","descendants":10,"id":43714004,"kids":[43715180,43714642,43714906],"score":42,"time":1744874831,"title":"BitNet b1.58 2B4T Technical Report","type":"story","url":"https://arxiv.org/abs/2504.12285"}
2025-04-17 19:42:42.524 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714004, by=galeos, title=BitNet b1.58 2B4T Technical Report, url=https://arxiv.org/abs/2504.12285, type=story, time=1744874831
2025-04-17 19:42:42.524 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714004, 标题: BitNet b1.58 2B4T Technical Report
2025-04-17 19:42:42.526 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714004
2025-04-17 19:42:42.530 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714004, 排名: 8, 分数: 42
2025-04-17 19:42:42.530 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714902
2025-04-17 19:42:42.531 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 19:42:42.531 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75cb1fe2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714902.json
2025-04-17 19:42:42.531 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-3, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714902.json, method=GET}
2025-04-17 19:42:42.531 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-3, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:42.649 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-1, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.650 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3ac434b9] [ede7da81-1] Response 200 OK
2025-04-17 19:42:42.650 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.650 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-1, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.650 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"cdplayer96","descendants":1,"id":43714619,"kids":[43715318],"score":24,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 19:42:42.650 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"cdplayer96","descendants":1,"id":43714619,"kids":[43715318],"score":24,"time":1744882243,"title":"Why Japan's \"Weakest Samurai Warlord\" Is Still Admired to This Day","type":"story","url":"https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/"}
2025-04-17 19:42:42.651 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714619, by=cdplayer96, title=Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day, url=https://www.tokyoweekender.com/art_and_culture/japanese-culture/oda-ujiharu-the-weakest-samurai-warlord/, type=story, time=1744882243
2025-04-17 19:42:42.651 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714619, 标题: Why Japan's "Weakest Samurai Warlord" Is Still Admired to This Day
2025-04-17 19:42:42.652 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714619
2025-04-17 19:42:42.658 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714619, 排名: 4, 分数: 24
2025-04-17 19:42:42.688 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-3, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.689 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1516295b] [9287fe66-3] Response 200 OK
2025-04-17 19:42:42.689 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.689 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-3, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.689 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"intunderflow","descendants":9,"id":43715022,"kids":[43715335,43715362,43715298,43715337,43715289,43715278,43715324],"score":46,"time":1744886521,"title":"US Government threatens Harvard with foreign student ban","type":"story","url":"https://www.bbc.com/news/articles/c1egdy24v7po"}
2025-04-17 19:42:42.689 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"intunderflow","descendants":9,"id":43715022,"kids":[43715335,43715362,43715298,43715337,43715289,43715278,43715324],"score":46,"time":1744886521,"title":"US Government threatens Harvard with foreign student ban","type":"story","url":"https://www.bbc.com/news/articles/c1egdy24v7po"}
2025-04-17 19:42:42.689 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715022, by=intunderflow, title=US Government threatens Harvard with foreign student ban, url=https://www.bbc.com/news/articles/c1egdy24v7po, type=story, time=1744886521
2025-04-17 19:42:42.690 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715022, 标题: US Government threatens Harvard with foreign student ban
2025-04-17 19:42:42.691 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43715022
2025-04-17 19:42:42.698 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715022, 排名: 9, 分数: 46
2025-04-17 19:42:42.757 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-3, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:42.757 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75cb1fe2] [43681bcb-3] Response 200 OK
2025-04-17 19:42:42.757 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:42.758 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-3, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:42.758 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"reddavis","descendants":4,"id":43714902,"kids":[43715239,43715129,43715058,43715124,43715176],"score":14,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 19:42:42.758 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"reddavis","descendants":4,"id":43714902,"kids":[43715239,43715129,43715058,43715124,43715176],"score":14,"time":1744885123,"title":"Building an AI That Watches Rugby","type":"story","url":"https://nickjones.tech/ai-watching-rugby/"}
2025-04-17 19:42:42.758 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714902, by=reddavis, title=Building an AI That Watches Rugby, url=https://nickjones.tech/ai-watching-rugby/, type=story, time=1744885123
2025-04-17 19:42:42.758 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714902, 标题: Building an AI That Watches Rugby
2025-04-17 19:42:42.760 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714902
2025-04-17 19:42:42.766 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714902, 排名: 10, 分数: 14
2025-04-17 19:42:42.766 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:42:42.766 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 2 批次，包含 10 个ID
2025-04-17 19:42:44.771 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678138
2025-04-17 19:42:44.772 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678138.json
2025-04-17 19:42:44.772 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f9dcd97] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678138.json
2025-04-17 19:42:44.772 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714476
2025-04-17 19:42:44.773 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 19:42:44.773 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [79bc925d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714476.json
2025-04-17 19:42:44.773 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-5, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678138.json, method=GET}
2025-04-17 19:42:44.773 [parallel-5] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43706037
2025-04-17 19:42:44.773 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-5, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:44.773 [parallel-5] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 19:42:44.773 [parallel-5] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c7d6cb] HTTP GET https://hacker-news.firebaseio.com/v0/item/43706037.json
2025-04-17 19:42:44.774 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-2, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714476.json, method=GET}
2025-04-17 19:42:44.774 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-4, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43706037.json, method=GET}
2025-04-17 19:42:44.774 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-2, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:44.774 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-4, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:44.977 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-4, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:44.978 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3c7d6cb] [9287fe66-4] Response 200 OK
2025-04-17 19:42:44.978 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:44.978 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-4, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:44.978 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":432,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 19:42:44.978 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"arbesman","descendants":115,"id":43706037,"kids":[43707035,43706376,43709739,43706955,43706433,43709069,43708229,43708372,43714052,43710868,43709320,43708657,43709735,43710737,43708404,43707325,43708734],"score":432,"time":1744813716,"title":"Darwin's children drew all over the “On the Origin of Species” manuscript (2014)","type":"story","url":"https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species"}
2025-04-17 19:42:44.978 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43706037, by=arbesman, title=Darwin's children drew all over the “On the Origin of Species” manuscript (2014), url=https://theappendix.net/posts/2014/02/darwins-children-drew-vegetable-battles-on-the-origin-of-species, type=story, time=1744813716
2025-04-17 19:42:44.978 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43706037, 标题: Darwin's children drew all over the “On the Origin of Species” manuscript (2014)
2025-04-17 19:42:44.980 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43706037
2025-04-17 19:42:44.981 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-5, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:44.981 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f9dcd97] [c7f85065-5] Response 200 OK
2025-04-17 19:42:44.981 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:44.982 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-5, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:44.982 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"paulpauper","descendants":54,"id":43678138,"kids":[43715325,43713850,43714003,43713971,43714058,43714036,43714020],"score":50,"time":1744606071,"title":"Adipose tissue retains an epigenetic memory of obesity after weight loss","type":"story","url":"https://www.nature.com/articles/s41586-024-08165-7"}
2025-04-17 19:42:44.982 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"paulpauper","descendants":54,"id":43678138,"kids":[43715325,43713850,43714003,43713971,43714058,43714036,43714020],"score":50,"time":1744606071,"title":"Adipose tissue retains an epigenetic memory of obesity after weight loss","type":"story","url":"https://www.nature.com/articles/s41586-024-08165-7"}
2025-04-17 19:42:44.982 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678138, by=paulpauper, title=Adipose tissue retains an epigenetic memory of obesity after weight loss, url=https://www.nature.com/articles/s41586-024-08165-7, type=story, time=1744606071
2025-04-17 19:42:44.982 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678138, 标题: Adipose tissue retains an epigenetic memory of obesity after weight loss
2025-04-17 19:42:44.985 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678138
2025-04-17 19:42:44.985 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43706037, 排名: 13, 分数: 432
2025-04-17 19:42:44.985 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43697717
2025-04-17 19:42:44.985 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 19:42:44.985 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b97fe9d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43697717.json
2025-04-17 19:42:44.986 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-4, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43697717.json, method=GET}
2025-04-17 19:42:44.986 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-4, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:44.991 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678138, 排名: 11, 分数: 50
2025-04-17 19:42:44.991 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713885
2025-04-17 19:42:44.991 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 19:42:44.992 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f9babc6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713885.json
2025-04-17 19:42:44.992 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-5, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713885.json, method=GET}
2025-04-17 19:42:44.992 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-5, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:45.132 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-2, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.132 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [79bc925d] [ede7da81-2] Response 200 OK
2025-04-17 19:42:45.132 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.132 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-2, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.132 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"rbanffy","descendants":8,"id":43714476,"kids":[43714835],"score":17,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 19:42:45.133 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"rbanffy","descendants":8,"id":43714476,"kids":[43714835],"score":17,"time":1744880467,"title":"The Atari 1200XL Fiasco – By Paul Lefebvre","type":"story","url":"https://www.goto10retro.com/p/the-atari-1200xl-fiasco"}
2025-04-17 19:42:45.133 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714476, by=rbanffy, title=The Atari 1200XL Fiasco – By Paul Lefebvre, url=https://www.goto10retro.com/p/the-atari-1200xl-fiasco, type=story, time=1744880467
2025-04-17 19:42:45.133 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714476, 标题: The Atari 1200XL Fiasco – By Paul Lefebvre
2025-04-17 19:42:45.134 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714476
2025-04-17 19:42:45.141 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714476, 排名: 12, 分数: 17
2025-04-17 19:42:45.141 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43708025
2025-04-17 19:42:45.141 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 19:42:45.141 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54771dd5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43708025.json
2025-04-17 19:42:45.141 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-6, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43708025.json, method=GET}
2025-04-17 19:42:45.142 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-6, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:45.216 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-4, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.216 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5b97fe9d] [43681bcb-4] Response 200 OK
2025-04-17 19:42:45.216 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.217 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-4, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.217 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"randomwalker","descendants":7,"id":43697717,"kids":[43715147,43715300,43715261],"score":18,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 19:42:45.218 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"randomwalker","descendants":7,"id":43697717,"kids":[43715147,43715300,43715261],"score":18,"time":1744747507,"title":"AI as Normal Technology","type":"story","url":"https://knightcolumbia.org/content/ai-as-normal-technology"}
2025-04-17 19:42:45.218 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43697717, by=randomwalker, title=AI as Normal Technology, url=https://knightcolumbia.org/content/ai-as-normal-technology, type=story, time=1744747507
2025-04-17 19:42:45.218 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43697717, 标题: AI as Normal Technology
2025-04-17 19:42:45.220 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43697717
2025-04-17 19:42:45.221 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-5, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.221 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [6f9babc6] [9287fe66-5] Response 200 OK
2025-04-17 19:42:45.221 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43697717, 排名: 14, 分数: 18
2025-04-17 19:42:45.221 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.221 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43679906
2025-04-17 19:42:45.221 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-5, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.221 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 19:42:45.221 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 19:42:45.221 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [454e3b4e] HTTP GET https://hacker-news.firebaseio.com/v0/item/43679906.json
2025-04-17 19:42:45.221 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"superzamp","id":43713885,"score":1,"time":1744873225,"title":"Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure","type":"job","url":"https://www.ycombinator.com/companies/formance/jobs"}
2025-04-17 19:42:45.223 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713885, by=superzamp, title=Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure, url=https://www.ycombinator.com/companies/formance/jobs, type=job, time=1744873225
2025-04-17 19:42:45.223 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713885, 标题: Formance (YC S21) Is Hiring Engineers to Build OSS Financial Infrastructure
2025-04-17 19:42:45.223 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-3, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43679906.json, method=GET}
2025-04-17 19:42:45.223 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-3, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:45.224 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713885
2025-04-17 19:42:45.225 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713885, 排名: 15, 分数: 1
2025-04-17 19:42:45.225 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713140
2025-04-17 19:42:45.225 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 19:42:45.225 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [307eb539] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713140.json
2025-04-17 19:42:45.225 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-5, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713140.json, method=GET}
2025-04-17 19:42:45.226 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-5, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:45.349 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-6, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.350 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54771dd5] [c7f85065-6] Response 200 OK
2025-04-17 19:42:45.350 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.350 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-6, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.351 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43710093,43711158,43708197,43709576,43715075,43712518,43713943,43711223,43709262,43711134,43714841,43714112,43709349,43714506,43714244,43709894,43709830,43708649,43712178,43713807,43709844,43711413,43709527,43711717,43711165,43713163,43712060,43714266,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43710101,43708208,43709529,43708288,43710058,43708564],"score":445,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 19:42:45.351 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mfiguiere","descendants":242,"id":43708025,"kids":[43710093,43711158,43708197,43709576,43715075,43712518,43713943,43711223,43709262,43711134,43714841,43714112,43709349,43714506,43714244,43709894,43709830,43708649,43712178,43713807,43709844,43711413,43709527,43711717,43711165,43713163,43712060,43714266,43709495,43711221,43709467,43711192,43710171,43710886,43709868,43709339,43710101,43708208,43709529,43708288,43710058,43708564],"score":445,"time":1744824290,"title":"OpenAI Codex CLI: Lightweight coding agent that runs in your terminal","type":"story","url":"https://github.com/openai/codex"}
2025-04-17 19:42:45.352 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43708025, by=mfiguiere, title=OpenAI Codex CLI: Lightweight coding agent that runs in your terminal, url=https://github.com/openai/codex, type=story, time=1744824290
2025-04-17 19:42:45.352 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43708025, 标题: OpenAI Codex CLI: Lightweight coding agent that runs in your terminal
2025-04-17 19:42:45.354 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43708025
2025-04-17 19:42:45.361 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43708025, 排名: 16, 分数: 445
2025-04-17 19:42:45.361 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43710576
2025-04-17 19:42:45.362 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 19:42:45.362 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [a5052a9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43710576.json
2025-04-17 19:42:45.362 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-6, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43710576.json, method=GET}
2025-04-17 19:42:45.362 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-6, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:45.451 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-5, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.451 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [307eb539] [43681bcb-5] Response 200 OK
2025-04-17 19:42:45.451 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.452 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-5, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.452 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sksxihve","descendants":4,"id":43713140,"kids":[43715111,43714602,43714883],"score":35,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 19:42:45.452 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sksxihve","descendants":4,"id":43713140,"kids":[43715111,43714602,43714883],"score":35,"time":1744864247,"title":"Differentiable Programming from Scratch","type":"story","url":"https://thenumb.at/Autodiff/"}
2025-04-17 19:42:45.452 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713140, by=sksxihve, title=Differentiable Programming from Scratch, url=https://thenumb.at/Autodiff/, type=story, time=1744864247
2025-04-17 19:42:45.452 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713140, 标题: Differentiable Programming from Scratch
2025-04-17 19:42:45.454 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713140
2025-04-17 19:42:45.461 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713140, 排名: 18, 分数: 35
2025-04-17 19:42:45.461 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43680715
2025-04-17 19:42:45.462 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 19:42:45.462 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78cb1e09] HTTP GET https://hacker-news.firebaseio.com/v0/item/43680715.json
2025-04-17 19:42:45.462 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-7, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43680715.json, method=GET}
2025-04-17 19:42:45.462 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-7, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:45.566 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-6, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.566 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [a5052a9] [9287fe66-6] Response 200 OK
2025-04-17 19:42:45.566 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.566 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-6, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.567 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"danenania","descendants":31,"id":43710576,"kids":[43715355,43710740,43711522,43713520,43710745,43712909,43714056,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":165,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 19:42:45.567 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"danenania","descendants":31,"id":43710576,"kids":[43715355,43710740,43711522,43713520,43710745,43712909,43714056,43713977,43710797,43710837,43711128,43710777,43710811,43713099,43712711,43713632],"score":165,"text":"Hey HN! I’m Dane, the creator of Plandex (<a href=\"https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex\">https:&#x2F;&#x2F;github.com&#x2F;plandex-ai&#x2F;plandex</a>), an open source AI coding agent focused especially on tackling large tasks in real world software projects.<p>You can watch a 2 minute demo of Plandex in action here: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=SFSu2vNmlLk</a><p>And here’s more of a tutorial style demo showing how Plandex can automatically debug a browser application: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=g-_76U_nK0Y</a>.<p>I launched Plandex v1 here on HN a little less than a year ago (<a href=\"https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500\">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39918500</a>).<p>Now I’m launching a major update, Plandex v2, which is the result of 8 months of heads down work, and is in effect a whole new project&#x2F;product.<p>In short, Plandex is now a top-tier coding agent with fully autonomous capabilities. It combines models from Anthropic, OpenAI, and Google to achieve better results, more reliable agent behavior, better cost efficiency, and better performance than is possible by using only a single provider’s models.<p>I believe it is now one of the best tools available for working on large tasks in real world codebases with AI. It has an effective context window of 2M tokens, and can index projects of 20M tokens and beyond using tree-sitter project maps (30+ languages are supported). It can effectively find relevant context in massive million-line projects like SQLite, Redis, and Git.<p>A bit more on some of Plandex’s key features:<p>- Plandex has a built-in diff review sandbox that helps you get the benefits of AI without leaving behind a mess in your project. By default, all changes accumulate in the sandbox until you approve them. The sandbox is version-controlled. You can rewind it to any previous point, and you can also create branches to try out alternative approaches.<p>- It offers a ‘full auto mode’ that can complete large tasks autonomously end-to-end, including high level planning, context loading, detailed planning, implementation, command execution (for dependencies, builds, tests, etc.), and debugging.<p>- The autonomy level is highly configurable. You can move up and down the ladder of autonomy depending on the task, your comfort level, and how you weigh cost optimization vs. effort and results.<p>- Models and model settings are also very configurable. There are built-in models and model packs for different use cases. You can also add custom models and model packs, and customize model settings like temperature or top-p. All model changes are version controlled, so you can use branches to try out the same task with different models. The newly released OpenAI models and the paid Gemini 2.5 Pro model will be integrated in the default model pack soon.<p>- It can be easily self-hosted, including a ‘local mode’ for a very fast local single-user setup with Docker.<p>- Cloud hosting is also available for added convenience with a couple of subscription tiers: an ‘Integrated Models’ mode that requires no other accounts or API keys and allows you to manage billing&#x2F;budgeting&#x2F;spending alerts and track usage centrally, and a ‘BYO API Key’ mode that allows you to use your own OpenAI&#x2F;OpenRouter accounts.<p>I’d love to get more HNers in the Plandex Discord (<a href=\"https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai\" rel=\"nofollow\">https:&#x2F;&#x2F;discord.gg&#x2F;plandex-ai</a>). Please join and say hi!<p>And of course I’d love to hear your feedback, whether positive or negative. Thanks so much!","time":1744838802,"title":"Show HN: Plandex v2 – open source AI coding agent for large projects and tasks","type":"story","url":"https://github.com/plandex-ai/plandex"}
2025-04-17 19:42:45.568 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43710576, by=danenania, title=Show HN: Plandex v2 – open source AI coding agent for large projects and tasks, url=https://github.com/plandex-ai/plandex, type=story, time=1744838802
2025-04-17 19:42:45.568 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43710576, 标题: Show HN: Plandex v2 – open source AI coding agent for large projects and tasks
2025-04-17 19:42:45.570 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43710576
2025-04-17 19:42:45.576 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43710576, 排名: 19, 分数: 165
2025-04-17 19:42:45.579 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-3, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.579 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [454e3b4e] [ede7da81-3] Response 200 OK
2025-04-17 19:42:45.579 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.579 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-3, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.580 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ingve","descendants":61,"id":43679906,"kids":[43715057,43712651,43713565,43714946,43714072,43712793,43713518,43712753,43713172,43712785],"score":124,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 19:42:45.580 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ingve","descendants":61,"id":43679906,"kids":[43715057,43712651,43713565,43714946,43714072,43712793,43713518,43712753,43713172,43712785],"score":124,"time":1744627652,"title":"Concurrency in Haskell: Fast, Simple, Correct","type":"story","url":"https://bitbashing.io/haskell-concurrency.html"}
2025-04-17 19:42:45.580 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43679906, by=ingve, title=Concurrency in Haskell: Fast, Simple, Correct, url=https://bitbashing.io/haskell-concurrency.html, type=story, time=1744627652
2025-04-17 19:42:45.580 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43679906, 标题: Concurrency in Haskell: Fast, Simple, Correct
2025-04-17 19:42:45.582 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43679906
2025-04-17 19:42:45.587 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43679906, 排名: 17, 分数: 124
2025-04-17 19:42:45.669 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-7, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:45.670 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [78cb1e09] [c7f85065-7] Response 200 OK
2025-04-17 19:42:45.670 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:45.670 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-7, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:45.671 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":21,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 19:42:45.671 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"PaulHoule","descendants":2,"id":43680715,"kids":[43714181],"score":21,"time":1744634920,"title":"Scientists pioneer chemical process to repurpose rubber waste","type":"story","url":"https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html"}
2025-04-17 19:42:45.671 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43680715, by=PaulHoule, title=Scientists pioneer chemical process to repurpose rubber waste, url=https://phys.org/news/2025-03-cleaner-future-scientists-chemical-repurpose.html, type=story, time=1744634920
2025-04-17 19:42:45.671 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43680715, 标题: Scientists pioneer chemical process to repurpose rubber waste
2025-04-17 19:42:45.674 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43680715
2025-04-17 19:42:45.681 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43680715, 排名: 20, 分数: 21
2025-04-17 19:42:45.681 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:42:45.681 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 开始处理第 3 批次，包含 10 个ID
2025-04-17 19:42:49.692 [parallel-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43688131
2025-04-17 19:42:49.693 [parallel-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43688131.json
2025-04-17 19:42:49.693 [parallel-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25698520] HTTP GET https://hacker-news.firebaseio.com/v0/item/43688131.json
2025-04-17 19:42:49.693 [parallel-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43693900
2025-04-17 19:42:49.694 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-6, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43688131.json, method=GET}
2025-04-17 19:42:49.694 [parallel-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 19:42:49.694 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-6, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:49.694 [parallel-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54ea5700] HTTP GET https://hacker-news.firebaseio.com/v0/item/43693900.json
2025-04-17 19:42:49.694 [parallel-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714203
2025-04-17 19:42:49.694 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-7, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43693900.json, method=GET}
2025-04-17 19:42:49.695 [parallel-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 19:42:49.695 [parallel-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [148626d1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714203.json
2025-04-17 19:42:49.695 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-7, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:49.695 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-4, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714203.json, method=GET}
2025-04-17 19:42:49.695 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-4, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:49.897 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-7, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:49.897 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54ea5700] [9287fe66-7] Response 200 OK
2025-04-17 19:42:49.898 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:49.898 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-7, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:49.898 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crtasm","descendants":584,"id":43693900,"kids":[43715326,43708689,43694289,43715234,43694477,43694281,43710411,43694373,43708697,43714668,43708319,43710859,43708992,43694671,43710410,43694140,43694093,43702830,43713210,43712403,43711582,43714134,43709129,43694148,43714128,43694245,43694619,43695540,43712127,43690509,43708835,43713637,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":483,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 19:42:49.898 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crtasm","descendants":584,"id":43693900,"kids":[43715326,43708689,43694289,43715234,43694477,43694281,43710411,43694373,43708697,43714668,43708319,43710859,43708992,43694671,43710410,43694140,43694093,43702830,43713210,43712403,43711582,43714134,43709129,43694148,43714128,43694245,43694619,43695540,43712127,43690509,43708835,43713637,43709318,43709593,43711513,43694675,43694262,43707773,43709306,43694468,43709745,43709226,43709303,43702962,43694736,43694313,43694458,43708052,43708441,43687459,43709217,43712674,43709648,43694393,43707811],"score":483,"time":1744729762,"title":"TLS certificate lifetimes will officially reduce to 47 days","type":"story","url":"https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days"}
2025-04-17 19:42:49.898 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43693900, by=crtasm, title=TLS certificate lifetimes will officially reduce to 47 days, url=https://www.digicert.com/blog/tls-certificate-lifetimes-will-officially-reduce-to-47-days, type=story, time=1744729762
2025-04-17 19:42:49.898 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43693900, 标题: TLS certificate lifetimes will officially reduce to 47 days
2025-04-17 19:42:49.900 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43693900
2025-04-17 19:42:49.907 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43693900, 排名: 22, 分数: 483
2025-04-17 19:42:49.907 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715235
2025-04-17 19:42:49.907 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715235.json
2025-04-17 19:42:49.908 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e147442] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715235.json
2025-04-17 19:42:49.908 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-8, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715235.json, method=GET}
2025-04-17 19:42:49.908 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-8, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:49.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-6, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:49.921 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [25698520] [43681bcb-6] Response 200 OK
2025-04-17 19:42:49.921 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:49.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-6, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:49.922 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"azhenley","descendants":0,"id":43688131,"score":3,"time":1744680621,"title":"Miscellaneous Mathematical Symbols","type":"story","url":"https://www.johndcook.com/blog/2025/04/14/miscellaneous-mathematical-symbols/"}
2025-04-17 19:42:49.922 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"azhenley","descendants":0,"id":43688131,"score":3,"time":1744680621,"title":"Miscellaneous Mathematical Symbols","type":"story","url":"https://www.johndcook.com/blog/2025/04/14/miscellaneous-mathematical-symbols/"}
2025-04-17 19:42:49.922 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43688131, by=azhenley, title=Miscellaneous Mathematical Symbols, url=https://www.johndcook.com/blog/2025/04/14/miscellaneous-mathematical-symbols/, type=story, time=1744680621
2025-04-17 19:42:49.922 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43688131, 标题: Miscellaneous Mathematical Symbols
2025-04-17 19:42:49.924 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43688131
2025-04-17 19:42:49.925 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Miscellaneous Mathematical Symbols
2025-04-17 19:42:49.925 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - 翻译请求：Miscellaneous Mathematical Symbols
2025-04-17 19:42:49.925 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:42:49.926 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [545b6895] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:42:50.053 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-4, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:50.054 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [148626d1] [ede7da81-4] Response 200 OK
2025-04-17 19:42:50.054 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:50.054 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-4, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:50.054 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"fuidani","descendants":206,"id":43714203,"kids":[43714466,43714467,43714868,43714478,43714580,43715236,43714502,43715292,43715284,43714972,43715223,43715010,43715126,43714611,43714593,43715138,43715130,43715112,43715070,43714597,43714436,43714850,43714751,43714739,43714887,43714434,43714661,43715131,43714786],"score":276,"time":1744876941,"title":"“Most promising signs yet” of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 19:42:50.054 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"fuidani","descendants":206,"id":43714203,"kids":[43714466,43714467,43714868,43714478,43714580,43715236,43714502,43715292,43715284,43714972,43715223,43715010,43715126,43714611,43714593,43715138,43715130,43715112,43715070,43714597,43714436,43714850,43714751,43714739,43714887,43714434,43714661,43715131,43714786],"score":276,"time":1744876941,"title":"“Most promising signs yet” of alien life on a planet beyond our Solar System","type":"story","url":"https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide"}
2025-04-17 19:42:50.055 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714203, by=fuidani, title=“Most promising signs yet” of alien life on a planet beyond our Solar System, url=https://www.skyatnightmagazine.com/news/k2-18b-dimethyl-sulfide, type=story, time=1744876941
2025-04-17 19:42:50.055 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714203, 标题: “Most promising signs yet” of alien life on a planet beyond our Solar System
2025-04-17 19:42:50.058 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714203
2025-04-17 19:42:50.065 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714203, 排名: 23, 分数: 276
2025-04-17 19:42:50.065 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713842
2025-04-17 19:42:50.065 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 19:42:50.065 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [349f918c] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713842.json
2025-04-17 19:42:50.066 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-8, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713842.json, method=GET}
2025-04-17 19:42:50.066 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-8, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:50.114 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-8, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:50.114 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e147442] [c7f85065-8] Response 200 OK
2025-04-17 19:42:50.114 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:50.115 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-8, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:50.115 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"Qadriq","descendants":0,"id":43715235,"score":5,"time":1744888937,"title":"Cutting down Rust compile times from 30 to 2 minutes with one thousand crates","type":"story","url":"https://www.feldera.com/blog/cutting-down-rust-compile-times-from-30-to-2-minutes-with-one-thousand-crates"}
2025-04-17 19:42:50.116 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"Qadriq","descendants":0,"id":43715235,"score":5,"time":1744888937,"title":"Cutting down Rust compile times from 30 to 2 minutes with one thousand crates","type":"story","url":"https://www.feldera.com/blog/cutting-down-rust-compile-times-from-30-to-2-minutes-with-one-thousand-crates"}
2025-04-17 19:42:50.116 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715235, by=Qadriq, title=Cutting down Rust compile times from 30 to 2 minutes with one thousand crates, url=https://www.feldera.com/blog/cutting-down-rust-compile-times-from-30-to-2-minutes-with-one-thousand-crates, type=story, time=1744888937
2025-04-17 19:42:50.116 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715235, 标题: Cutting down Rust compile times from 30 to 2 minutes with one thousand crates
2025-04-17 19:42:50.118 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43715235
2025-04-17 19:42:50.119 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: Cutting down Rust compile times from 30 to 2 minutes with one thousand crates
2025-04-17 19:42:50.119 [reactor-http-nio-16] INFO  c.e.h.service.TranslationService - 翻译请求：Cutting down Rust compile times from 30 to 2 minutes with one thousand crates
2025-04-17 19:42:50.119 [reactor-http-nio-16] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:42:50.120 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1258403c] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:42:50.269 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-8, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:50.269 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [349f918c] [9287fe66-8] Response 200 OK
2025-04-17 19:42:50.270 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:50.270 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-8, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:50.270 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mastermedo","descendants":6,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":65,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 19:42:50.270 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mastermedo","descendants":6,"id":43713842,"kids":[43713931,43714472,43714252,43714783],"score":65,"time":1744872785,"title":"Manga Guide To Databases (2004) [pdf]","type":"story","url":"https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf"}
2025-04-17 19:42:50.270 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713842, by=mastermedo, title=Manga Guide To Databases (2004) [pdf], url=https://oberstar.eu.org/share/Documents/The-Manga-guide-to-databases.pdf, type=story, time=1744872785
2025-04-17 19:42:50.271 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713842, 标题: Manga Guide To Databases (2004) [pdf]
2025-04-17 19:42:50.273 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43713842
2025-04-17 19:42:50.278 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713842, 排名: 25, 分数: 65
2025-04-17 19:42:50.278 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43674892
2025-04-17 19:42:50.279 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 19:42:50.279 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e066df5] HTTP GET https://hacker-news.firebaseio.com/v0/item/43674892.json
2025-04-17 19:42:50.279 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-7, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43674892.json, method=GET}
2025-04-17 19:42:50.279 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-7, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:50.505 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-7, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:50.505 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [e066df5] [43681bcb-7] Response 200 OK
2025-04-17 19:42:50.505 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:50.506 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-7, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:50.506 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"NaOH","descendants":4,"id":43674892,"kids":[43715101,43714757],"score":17,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 19:42:50.506 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"NaOH","descendants":4,"id":43674892,"kids":[43715101,43714757],"score":17,"time":1744569714,"title":"Clowning Around: On the Principles of Clowning","type":"story","url":"https://funnyhow.substack.com/p/clowning-around-"}
2025-04-17 19:42:50.506 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43674892, by=NaOH, title=Clowning Around: On the Principles of Clowning, url=https://funnyhow.substack.com/p/clowning-around-, type=story, time=1744569714
2025-04-17 19:42:50.506 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43674892, 标题: Clowning Around: On the Principles of Clowning
2025-04-17 19:42:50.508 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43674892
2025-04-17 19:42:50.514 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43674892, 排名: 26, 分数: 17
2025-04-17 19:42:50.514 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707021
2025-04-17 19:42:50.514 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 19:42:50.514 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41008bbd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707021.json
2025-04-17 19:42:50.515 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-5, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707021.json, method=GET}
2025-04-17 19:42:50.515 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-5, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:50.734 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [7c33f5c5-1, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:42:50.861 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [59d75a8c-1, L:/10.64.127.133:52989 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:42:50.874 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-5, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:50.874 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41008bbd] [ede7da81-5] Response 200 OK
2025-04-17 19:42:50.874 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:50.874 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-5, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:50.875 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":199,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 19:42:50.875 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mrxhacker99","descendants":55,"id":43707021,"kids":[43708774,43708736,43708437,43714536,43707761,43708534,43713371,43709097,43708275,43708639],"score":199,"time":1744819221,"title":"Damn Vulnerable MCP Server","type":"story","url":"https://github.com/harishsg993010/damn-vulnerable-MCP-server"}
2025-04-17 19:42:50.875 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707021, by=mrxhacker99, title=Damn Vulnerable MCP Server, url=https://github.com/harishsg993010/damn-vulnerable-MCP-server, type=story, time=1744819221
2025-04-17 19:42:50.875 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707021, 标题: Damn Vulnerable MCP Server
2025-04-17 19:42:50.877 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707021
2025-04-17 19:42:50.883 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707021, 排名: 27, 分数: 199
2025-04-17 19:42:50.883 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711001
2025-04-17 19:42:50.884 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 19:42:50.884 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c949e94] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711001.json
2025-04-17 19:42:50.884 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-9, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711001.json, method=GET}
2025-04-17 19:42:50.884 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-9, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:51.094 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-9, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:51.094 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c949e94] [c7f85065-9] Response 200 OK
2025-04-17 19:42:51.094 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:51.094 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-9, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:51.094 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"crescit_eundo","descendants":51,"id":43711001,"kids":[43711651,43715246,43711502,43713972,43714103,43713808,43714522,43711718,43713061,43712268,43711807],"score":132,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 19:42:51.094 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"crescit_eundo","descendants":51,"id":43711001,"kids":[43711651,43715246,43711502,43713972,43714103,43713808,43714522,43711718,43713061,43712268,43711807],"score":132,"time":1744842074,"title":"How a Forgotten Battle Created a More Peaceful World","type":"story","url":"https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a"}
2025-04-17 19:42:51.095 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711001, by=crescit_eundo, title=How a Forgotten Battle Created a More Peaceful World, url=https://worldhistory.substack.com/p/how-a-forgotten-battle-created-a, type=story, time=1744842074
2025-04-17 19:42:51.095 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711001, 标题: How a Forgotten Battle Created a More Peaceful World
2025-04-17 19:42:51.099 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711001
2025-04-17 19:42:51.104 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711001, 排名: 28, 分数: 132
2025-04-17 19:42:51.104 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43699271
2025-04-17 19:42:51.104 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 19:42:51.104 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73daa215] HTTP GET https://hacker-news.firebaseio.com/v0/item/43699271.json
2025-04-17 19:42:51.105 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-9, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43699271.json, method=GET}
2025-04-17 19:42:51.105 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-9, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:51.225 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [7c33f5c5-1, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:42:51.225 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [545b6895] [7c33f5c5-1] Response 200 OK
2025-04-17 19:42:51.226 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [7c33f5c5-1, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:42:51.227 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=杂项数学符号}]}
2025-04-17 19:42:51.227 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Miscellaneous Mathematical Symbols -> 杂项数学符号
2025-04-17 19:42:51.227 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 杂项数学符号
2025-04-17 19:42:51.229 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43688131
2025-04-17 19:42:51.234 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43688131, 排名: 21, 分数: 3
2025-04-17 19:42:51.234 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711706
2025-04-17 19:42:51.234 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 19:42:51.235 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47465144] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711706.json
2025-04-17 19:42:51.235 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-8, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711706.json, method=GET}
2025-04-17 19:42:51.235 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-8, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:51.309 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-9, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:51.309 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [73daa215] [9287fe66-9] Response 200 OK
2025-04-17 19:42:51.309 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:51.310 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-9, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:51.310 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"dhorthy","descendants":55,"id":43699271,"kids":[43715277,43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43712940,43713946,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":362,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 19:42:51.310 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [59d75a8c-1, L:/10.64.127.133:52989 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:42:51.310 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"dhorthy","descendants":55,"id":43699271,"kids":[43715277,43703196,43712398,43709626,43714057,43713973,43711119,43709553,43709429,43709802,43708129,43712940,43713946,43712600,43708291,43711203,43709691,43699556,43711674,43712641,43712140,43708215],"score":362,"text":"I&#x27;ve been building AI agents for a while. After trying every framework out there and talking to many founders building with AI, I&#x27;ve noticed something interesting: most &quot;AI Agents&quot; that make it to production aren&#x27;t actually that agentic. The best ones are mostly just well-engineered software with LLMs sprinkled in at key points.<p>So I set out to document what I&#x27;ve learned about building production-grade AI systems: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents\">https:&#x2F;&#x2F;github.com&#x2F;humanlayer&#x2F;12-factor-agents</a>. It&#x27;s a set of principles for building LLM-powered software that&#x27;s reliable enough to put in the hands of production customers.<p>In the spirit of Heroku&#x27;s 12 Factor Apps (<a href=\"https:&#x2F;&#x2F;12factor.net&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;12factor.net&#x2F;</a>), these principles focus on the engineering practices that make LLM applications more reliable, scalable, and maintainable. Even as models get exponentially more powerful, these core techniques will remain valuable.<p>I&#x27;ve seen many SaaS builders try to pivot towards AI by building greenfield new projects on agent frameworks, only to find that they couldn&#x27;t get things past the 70-80% reliability bar with out-of-the-box tools. The ones that did succeed tended to take small, modular concepts from agent building, and incorporate them into their existing product, rather than starting from scratch.<p>The full guide goes into detail on each principle with examples and patterns to follow. I&#x27;ve seen these practices work well in production systems handling real user traffic.<p>I&#x27;m sharing this as a starting point—the field is moving quickly so these principles will evolve. I welcome your feedback and contributions to help figure out what &quot;production grade&quot; means for AI systems!","time":1744756684,"title":"12-factor Agents: Patterns of reliable LLM applications","type":"story","url":"https://github.com/humanlayer/12-factor-agents"}
2025-04-17 19:42:51.311 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1258403c] [59d75a8c-1] Response 200 OK
2025-04-17 19:42:51.311 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43699271, by=dhorthy, title=12-factor Agents: Patterns of reliable LLM applications, url=https://github.com/humanlayer/12-factor-agents, type=story, time=1744756684
2025-04-17 19:42:51.311 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43699271, 标题: 12-factor Agents: Patterns of reliable LLM applications
2025-04-17 19:42:51.312 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [59d75a8c-1, L:/10.64.127.133:52989 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:42:51.312 [reactor-http-nio-16] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=使用一千个板条箱将 Rust 编译时间从 30 分钟缩短到 2 分钟}]}
2025-04-17 19:42:51.312 [reactor-http-nio-16] INFO  c.e.h.service.TranslationService - DeepL翻译成功: Cutting down Rust compile times from 30 to 2 minutes with one thousand crates -> 使用一千个板条箱将 Rust 编译时间从 30 分钟缩短到 2 分钟
2025-04-17 19:42:51.313 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 使用一千个板条箱将 Rust 编译时间从 30 分钟缩短到 2 分钟
2025-04-17 19:42:51.315 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43715235
2025-04-17 19:42:51.316 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43699271
2025-04-17 19:42:51.321 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715235, 排名: 24, 分数: 5
2025-04-17 19:42:51.324 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43699271, 排名: 29, 分数: 362
2025-04-17 19:42:51.460 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-8, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:51.461 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [47465144] [43681bcb-8] Response 200 OK
2025-04-17 19:42:51.461 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:51.461 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-8, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:51.461 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"coppolaemilio","descendants":326,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43711999,43711929,43714657,43714281,43711749,43714232,43712661,43712922,43711973,43712634,43712230,43713460,43713686,43711808,43711754,43712183,43712972,43711745,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43715354,43712712,43711905],"score":338,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 19:42:51.462 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"coppolaemilio","descendants":326,"id":43711706,"kids":[43712358,43713590,43712736,43712102,43712028,43713856,43711826,43712005,43712350,43711999,43711929,43714657,43714281,43711749,43714232,43712661,43712922,43711973,43712634,43712230,43713460,43713686,43711808,43711754,43712183,43712972,43711745,43713380,43712027,43711816,43712091,43711945,43711809,43711791,43711734,43711782,43712662,43712344,43712503,43711898,43711783,43712813,43713196,43715354,43712712,43711905],"score":338,"time":1744848651,"title":"Jellyfin as a Spotify alternative","type":"story","url":"https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/"}
2025-04-17 19:42:51.462 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711706, by=coppolaemilio, title=Jellyfin as a Spotify alternative, url=https://coppolaemilio.com/entries/i-left-spotify-what-happened-next/, type=story, time=1744848651
2025-04-17 19:42:51.462 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711706, 标题: Jellyfin as a Spotify alternative
2025-04-17 19:42:51.464 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711706
2025-04-17 19:42:51.470 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711706, 排名: 30, 分数: 338
2025-04-17 19:42:51.470 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:42:51.470 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 开始处理第 4 批次，包含 10 个ID
2025-04-17 19:42:57.481 [parallel-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43709770
2025-04-17 19:42:57.481 [parallel-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 19:42:57.481 [parallel-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e5b8115] HTTP GET https://hacker-news.firebaseio.com/v0/item/43709770.json
2025-04-17 19:42:57.482 [parallel-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704904
2025-04-17 19:42:57.482 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-6, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43709770.json, method=GET}
2025-04-17 19:42:57.482 [parallel-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 19:42:57.482 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-6, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.482 [parallel-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [445b578d] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704904.json
2025-04-17 19:42:57.482 [parallel-11] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704430
2025-04-17 19:42:57.482 [parallel-11] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 19:42:57.482 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-10, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704904.json, method=GET}
2025-04-17 19:42:57.483 [parallel-11] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f3f8bd3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704430.json
2025-04-17 19:42:57.483 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-10, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.483 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-10, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704430.json, method=GET}
2025-04-17 19:42:57.483 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-10, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.686 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-10, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:57.687 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [1f3f8bd3] [9287fe66-10] Response 200 OK
2025-04-17 19:42:57.687 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:57.687 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-10, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:57.687 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43704657,43704513,43711968,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":389,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 19:42:57.687 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"layer8","descendants":71,"id":43704430,"kids":[43704948,43704660,43711108,43710867,43704716,43713309,43711729,43704941,43704657,43704513,43711968,43711232,43704552,43704583,43704514,43704515,43704602,43705153,43704501,43704921,43704510,43711296],"score":389,"time":1744805795,"title":"CVE Foundation","type":"story","url":"https://www.thecvefoundation.org/home"}
2025-04-17 19:42:57.688 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704430, by=layer8, title=CVE Foundation, url=https://www.thecvefoundation.org/home, type=story, time=1744805795
2025-04-17 19:42:57.688 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704430, 标题: CVE Foundation
2025-04-17 19:42:57.688 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-10, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:57.688 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [445b578d] [c7f85065-10] Response 200 OK
2025-04-17 19:42:57.688 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:57.688 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-10, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:57.689 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"nmcfarl","descendants":159,"id":43704904,"kids":[43708124,43706249,43705510,43715096,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714770,43705584,43714084,43705646,43711233,43705667,43713433,43713542,43705658,43705959,43708803,43713886,43710306,43705528,43706709,43705933,43713665,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43711984,43713136,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":332,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 19:42:57.689 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"nmcfarl","descendants":159,"id":43704904,"kids":[43708124,43706249,43705510,43715096,43706453,43710094,43706889,43707582,43705679,43705739,43707942,43705539,43706712,43709846,43710475,43714770,43705584,43714084,43705646,43711233,43705667,43713433,43713542,43705658,43705959,43708803,43713886,43710306,43705528,43706709,43705933,43713665,43710179,43710057,43705888,43711239,43707215,43707326,43705597,43712305,43705969,43706611,43709543,43705546,43707322,43708572,43707097,43711984,43713136,43706316,43706007,43713025,43705551,43707196,43705525,43705487,43710651,43706137,43707260,43707522,43706785,43705801,43707763,43707149,43705993,43706027],"score":332,"time":1744808233,"title":"Kermit: A typeface for kids","type":"story","url":"https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/"}
2025-04-17 19:42:57.689 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704904, by=nmcfarl, title=Kermit: A typeface for kids, url=https://microsoft.design/articles/introducing-kermit-a-typeface-for-kids/, type=story, time=1744808233
2025-04-17 19:42:57.689 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704904, 标题: Kermit: A typeface for kids
2025-04-17 19:42:57.690 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704430
2025-04-17 19:42:57.691 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704904
2025-04-17 19:42:57.696 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704430, 排名: 33, 分数: 389
2025-04-17 19:42:57.696 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43678533
2025-04-17 19:42:57.696 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 19:42:57.696 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2d3aad23] HTTP GET https://hacker-news.firebaseio.com/v0/item/43678533.json
2025-04-17 19:42:57.696 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-9, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43678533.json, method=GET}
2025-04-17 19:42:57.697 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-9, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.697 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704904, 排名: 32, 分数: 332
2025-04-17 19:42:57.697 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715116
2025-04-17 19:42:57.697 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715116.json
2025-04-17 19:42:57.697 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [676e13f3] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715116.json
2025-04-17 19:42:57.697 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-11, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715116.json, method=GET}
2025-04-17 19:42:57.698 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-11, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.839 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-6, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:57.839 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2e5b8115] [ede7da81-6] Response 200 OK
2025-04-17 19:42:57.839 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:57.839 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-6, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:57.840 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"voxadam","descendants":194,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712032,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":482,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 19:42:57.840 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"voxadam","descendants":194,"id":43709770,"kids":[43710275,43710343,43713768,43713570,43710969,43709991,43709994,43710543,43710117,43711193,43711554,43710068,43712032,43712738,43710389,43711546,43711711,43710361,43710239,43710841,43711950,43710724,43709956,43710511,43710071],"score":482,"time":1744834010,"title":"Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)","type":"story","url":"https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/"}
2025-04-17 19:42:57.840 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43709770, by=voxadam, title=Man who built ISP instead of paying Comcast expands to hundreds of homes (2022), url=https://arstechnica.com/tech-policy/2022/08/man-who-built-isp-instead-of-paying-comcast-50k-expands-to-hundreds-of-homes/, type=story, time=1744834010
2025-04-17 19:42:57.840 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43709770, 标题: Man who built ISP instead of paying Comcast expands to hundreds of homes (2022)
2025-04-17 19:42:57.843 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43709770
2025-04-17 19:42:57.849 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43709770, 排名: 31, 分数: 482
2025-04-17 19:42:57.849 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705632
2025-04-17 19:42:57.849 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 19:42:57.849 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [113adee7] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705632.json
2025-04-17 19:42:57.850 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-11, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705632.json, method=GET}
2025-04-17 19:42:57.850 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-11, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.904 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-11, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:57.904 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [676e13f3] [9287fe66-11] Response 200 OK
2025-04-17 19:42:57.904 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:57.905 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-11, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:57.905 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"uxhacker","descendants":2,"id":43715116,"kids":[43715317,43715132],"score":5,"time":1744887543,"title":"Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar","type":"story","url":"https://www.nytimes.com/2025/04/17/health/pill-glp-1-eli-lilly.html"}
2025-04-17 19:42:57.905 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"uxhacker","descendants":2,"id":43715116,"kids":[43715317,43715132],"score":5,"time":1744887543,"title":"Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar","type":"story","url":"https://www.nytimes.com/2025/04/17/health/pill-glp-1-eli-lilly.html"}
2025-04-17 19:42:57.905 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715116, by=uxhacker, title=Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar, url=https://www.nytimes.com/2025/04/17/health/pill-glp-1-eli-lilly.html, type=story, time=1744887543
2025-04-17 19:42:57.905 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715116, 标题: Daily Pill May Work as Well as Ozempic for Weight Loss and Blood Sugar
2025-04-17 19:42:57.908 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43715116
2025-04-17 19:42:57.912 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715116, 排名: 35, 分数: 5
2025-04-17 19:42:57.913 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43690828
2025-04-17 19:42:57.913 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 19:42:57.913 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [42747791] HTTP GET https://hacker-news.firebaseio.com/v0/item/43690828.json
2025-04-17 19:42:57.913 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-7, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43690828.json, method=GET}
2025-04-17 19:42:57.913 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-7, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:57.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-9, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:57.921 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2d3aad23] [43681bcb-9] Response 200 OK
2025-04-17 19:42:57.921 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:57.921 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-9, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:57.921 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"tanelpoder","descendants":7,"id":43678533,"kids":[43714454,43715092,43714026,43713754],"score":89,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 19:42:57.921 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"tanelpoder","descendants":7,"id":43678533,"kids":[43714454,43715092,43714026,43713754],"score":89,"time":1744611359,"title":"Query Engines: Push vs. Pull (2021)","type":"story","url":"https://justinjaffray.com/query-engines-push-vs.-pull/"}
2025-04-17 19:42:57.922 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43678533, by=tanelpoder, title=Query Engines: Push vs. Pull (2021), url=https://justinjaffray.com/query-engines-push-vs.-pull/, type=story, time=1744611359
2025-04-17 19:42:57.922 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43678533, 标题: Query Engines: Push vs. Pull (2021)
2025-04-17 19:42:57.923 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43678533
2025-04-17 19:42:57.930 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43678533, 排名: 34, 分数: 89
2025-04-17 19:42:57.931 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676690
2025-04-17 19:42:57.931 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 19:42:57.931 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [394b1025] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676690.json
2025-04-17 19:42:57.931 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-12, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676690.json, method=GET}
2025-04-17 19:42:57.931 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-12, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:58.058 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-11, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:58.058 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [113adee7] [c7f85065-11] Response 200 OK
2025-04-17 19:42:58.059 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:58.059 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-11, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:58.059 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43715342,43711391,43707510,43713123,43712968,43711140,43707254,43714708,43707467,43713744,43713915,43712935,43709029,43712158,43707380,43714561,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43714654,43707802,43711562,43707291,43713270,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":304,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 19:42:58.059 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"grep_it","descendants":141,"id":43705632,"kids":[43715342,43711391,43707510,43713123,43712968,43711140,43707254,43714708,43707467,43713744,43713915,43712935,43709029,43712158,43707380,43714561,43712010,43707184,43707395,43707982,43708640,43707712,43711310,43706905,43710755,43710025,43710939,43709633,43707171,43714654,43707802,43711562,43707291,43713270,43712997,43707452,43708585,43706791,43708976,43711044,43711199,43706858,43710206,43708974,43708002,43706920,43708402,43710557,43708747,43713586,43707296,43712501],"score":304,"time":1744811862,"title":"Reproducing Hacker News writing style fingerprinting","type":"story","url":"https://antirez.com/news/150"}
2025-04-17 19:42:58.060 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705632, by=grep_it, title=Reproducing Hacker News writing style fingerprinting, url=https://antirez.com/news/150, type=story, time=1744811862
2025-04-17 19:42:58.060 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705632, 标题: Reproducing Hacker News writing style fingerprinting
2025-04-17 19:42:58.061 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705632
2025-04-17 19:42:58.067 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705632, 排名: 36, 分数: 304
2025-04-17 19:42:58.067 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43670921
2025-04-17 19:42:58.068 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 19:42:58.068 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c40ecd9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43670921.json
2025-04-17 19:42:58.068 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-10, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43670921.json, method=GET}
2025-04-17 19:42:58.068 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-10, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:58.136 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-12, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:58.136 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [394b1025] [9287fe66-12] Response 200 OK
2025-04-17 19:42:58.136 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:58.136 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-12, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:58.136 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"whocansay","descendants":45,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":46,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 19:42:58.137 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"whocansay","descendants":45,"id":43676690,"kids":[43676701,43713816,43713516,43714471,43714140,43676796],"score":46,"time":1744587564,"title":"How refrigeration changed our food","type":"story","url":"https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html"}
2025-04-17 19:42:58.137 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676690, by=whocansay, title=How refrigeration changed our food, url=https://www.nytimes.com/2024/06/24/books/review/frostbite-nicola-twilley.html, type=story, time=1744587564
2025-04-17 19:42:58.137 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676690, 标题: How refrigeration changed our food
2025-04-17 19:42:58.139 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676690
2025-04-17 19:42:58.144 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676690, 排名: 38, 分数: 46
2025-04-17 19:42:58.144 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704596
2025-04-17 19:42:58.144 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 19:42:58.144 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f5eeff9] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704596.json
2025-04-17 19:42:58.145 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-12, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704596.json, method=GET}
2025-04-17 19:42:58.145 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-12, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:42:58.277 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-7, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:58.277 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [42747791] [ede7da81-7] Response 200 OK
2025-04-17 19:42:58.277 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:58.277 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-7, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:58.278 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amadeuspagel","descendants":47,"id":43690828,"kids":[43714289,43708922,43714990,43713356,43709224,43710037,43713336,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 19:42:58.278 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amadeuspagel","descendants":47,"id":43690828,"kids":[43714289,43708922,43714990,43713356,43709224,43710037,43713336,43709711,43708553,43710727,43708701,43709465,43709622,43708986],"score":138,"time":1744710738,"title":"eInk Mode: Making web pages easier to read","type":"story","url":"https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html"}
2025-04-17 19:42:58.278 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43690828, by=amadeuspagel, title=eInk Mode: Making web pages easier to read, url=https://jackscogito.blogspot.com/2025/04/e-ink-mode-making-web-pages-easier-to.html, type=story, time=1744710738
2025-04-17 19:42:58.278 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43690828, 标题: eInk Mode: Making web pages easier to read
2025-04-17 19:42:58.280 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43690828
2025-04-17 19:42:58.284 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43690828, 排名: 37, 分数: 138
2025-04-17 19:42:58.292 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-10, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:58.292 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4c40ecd9] [43681bcb-10] Response 200 OK
2025-04-17 19:42:58.293 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:58.293 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-10, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:58.293 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 19:42:58.293 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"neamar","descendants":14,"id":43670921,"kids":[43714245,43714750,43713765,43713244,43713904,43713513],"score":27,"time":1744530676,"title":"In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)","type":"story","url":"https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/"}
2025-04-17 19:42:58.293 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43670921, by=neamar, title=In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016), url=https://www.wired.com/2016/03/two-moves-alphago-lee-sedol-redefined-future/, type=story, time=1744530676
2025-04-17 19:42:58.293 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43670921, 标题: In Two Moves, AlphaGo and Lee Sedol Redefined the Future (2016)
2025-04-17 19:42:58.295 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43670921
2025-04-17 19:42:58.299 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43670921, 排名: 39, 分数: 27
2025-04-17 19:42:58.351 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-12, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:42:58.352 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [2f5eeff9] [c7f85065-12] Response 200 OK
2025-04-17 19:42:58.352 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:42:58.353 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-12, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:42:58.353 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43705029,43707499,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":202,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 19:42:58.353 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"sohkamyung","descendants":138,"id":43704596,"kids":[43705041,43705117,43705029,43707499,43708628,43707623,43708797,43705591,43709784,43712941,43705103,43707877,43713525,43706069,43705922,43713468,43705415,43705963,43706230,43705058],"score":202,"time":1744806813,"title":"How Nintendo bled Atari games to death","type":"story","url":"https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/"}
2025-04-17 19:42:58.354 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704596, by=sohkamyung, title=How Nintendo bled Atari games to death, url=https://thereader.mitpress.mit.edu/how-nintendo-bled-atari-games-to-death/, type=story, time=1744806813
2025-04-17 19:42:58.354 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704596, 标题: How Nintendo bled Atari games to death
2025-04-17 19:42:58.358 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704596
2025-04-17 19:42:58.362 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704596, 排名: 40, 分数: 202
2025-04-17 19:42:58.362 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:42:58.362 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 开始处理第 5 批次，包含 10 个ID
2025-04-17 19:43:06.370 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43715220
2025-04-17 19:43:06.371 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43715220.json
2025-04-17 19:43:06.371 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [716ccad1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43715220.json
2025-04-17 19:43:06.372 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43707719
2025-04-17 19:43:06.372 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-13, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43715220.json, method=GET}
2025-04-17 19:43:06.372 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 19:43:06.372 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-13, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:06.372 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ebf71dd] HTTP GET https://hacker-news.firebaseio.com/v0/item/43707719.json
2025-04-17 19:43:06.372 [parallel-6] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43676254
2025-04-17 19:43:06.373 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-8, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43707719.json, method=GET}
2025-04-17 19:43:06.373 [parallel-6] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 19:43:06.373 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-8, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:06.373 [parallel-6] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4057b870] HTTP GET https://hacker-news.firebaseio.com/v0/item/43676254.json
2025-04-17 19:43:06.373 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-11, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43676254.json, method=GET}
2025-04-17 19:43:06.373 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-11, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:06.576 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-13, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:06.576 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [716ccad1] [9287fe66-13] Response 200 OK
2025-04-17 19:43:06.576 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:06.576 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-13, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:06.577 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"geox","descendants":0,"id":43715220,"score":4,"time":1744888769,"title":"British soldiers take down drone swarm with radio wave weapon","type":"story","url":"https://www.gov.uk/government/news/british-soldiers-take-down-drone-swarm-in-groundbreaking-use-of-radio-wave-weapon"}
2025-04-17 19:43:06.577 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"geox","descendants":0,"id":43715220,"score":4,"time":1744888769,"title":"British soldiers take down drone swarm with radio wave weapon","type":"story","url":"https://www.gov.uk/government/news/british-soldiers-take-down-drone-swarm-in-groundbreaking-use-of-radio-wave-weapon"}
2025-04-17 19:43:06.577 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43715220, by=geox, title=British soldiers take down drone swarm with radio wave weapon, url=https://www.gov.uk/government/news/british-soldiers-take-down-drone-swarm-in-groundbreaking-use-of-radio-wave-weapon, type=story, time=1744888769
2025-04-17 19:43:06.577 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43715220, 标题: British soldiers take down drone swarm with radio wave weapon
2025-04-17 19:43:06.582 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43715220
2025-04-17 19:43:06.583 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: British soldiers take down drone swarm with radio wave weapon
2025-04-17 19:43:06.583 [reactor-http-nio-1] INFO  c.e.h.service.TranslationService - 翻译请求：British soldiers take down drone swarm with radio wave weapon
2025-04-17 19:43:06.583 [reactor-http-nio-1] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:43:06.584 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41593d60] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:43:06.584 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [7c33f5c5-2, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:43:06.597 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-11, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:06.597 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4057b870] [43681bcb-11] Response 200 OK
2025-04-17 19:43:06.597 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:06.597 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-11, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:06.597 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":134,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 19:43:06.598 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mkl","descendants":69,"id":43676254,"kids":[43709412,43709477,43709156,43710512,43710705,43676260,43709370,43710253,43709719,43712084,43710408,43710149,43709869,43709884,43713200,43709449,43709853,43710804,43710138,43710584,43710064],"score":134,"time":1744582508,"title":"Breaking the Llama Community License","type":"story","url":"https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/"}
2025-04-17 19:43:06.598 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43676254, by=mkl, title=Breaking the Llama Community License, url=https://notes.victor.earth/youre-probably-breaking-the-llama-community-license/, type=story, time=1744582508
2025-04-17 19:43:06.598 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43676254, 标题: Breaking the Llama Community License
2025-04-17 19:43:06.600 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43676254
2025-04-17 19:43:06.607 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43676254, 排名: 43, 分数: 134
2025-04-17 19:43:06.607 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692677
2025-04-17 19:43:06.608 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 19:43:06.608 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d00c6e2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692677.json
2025-04-17 19:43:06.608 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-13, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692677.json, method=GET}
2025-04-17 19:43:06.608 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-13, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:06.730 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-8, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:06.731 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7ebf71dd] [ede7da81-8] Response 200 OK
2025-04-17 19:43:06.731 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:06.731 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-8, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:06.731 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"maheshrijal","descendants":468,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43707838,43713896,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43711020,43709949,43713968,43710951,43708576,43712397,43708923,43712360,43708776,43712045,43713626,43710640,43709001,43709282,43708264,43712596,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43708089,43711217,43711059,43707854,43715005,43708690,43708671,43708814,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43707968,43710268,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":508,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 19:43:06.731 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"maheshrijal","descendants":468,"id":43707719,"kids":[43710247,43709152,43707951,43708160,43708704,43707917,43708146,43707908,43707831,43707912,43707838,43713896,43707849,43708890,43708452,43707967,43707748,43707979,43711624,43708027,43708332,43711150,43707993,43711353,43707890,43708015,43711159,43713671,43711020,43709949,43713968,43710951,43708576,43712397,43708923,43712360,43708776,43712045,43713626,43710640,43709001,43709282,43708264,43712596,43712420,43712101,43709827,43710187,43709112,43707960,43708244,43708089,43711217,43711059,43707854,43715005,43708690,43708671,43708814,43708144,43707885,43707955,43707866,43708227,43708485,43708130,43709528,43707968,43710268,43708236,43709520,43708225,43710598,43710704,43707886,43709091,43711454,43708570,43708674,43711479,43708479,43708269,43707943,43707981,43709007,43712113,43708098,43708826,43708773,43707855,43707887,43707940,43713952,43709897,43708067],"score":508,"time":1744822914,"title":"OpenAI o3 and o4-mini","type":"story","url":"https://openai.com/index/introducing-o3-and-o4-mini/"}
2025-04-17 19:43:06.732 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43707719, by=maheshrijal, title=OpenAI o3 and o4-mini, url=https://openai.com/index/introducing-o3-and-o4-mini/, type=story, time=1744822914
2025-04-17 19:43:06.732 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43707719, 标题: OpenAI o3 and o4-mini
2025-04-17 19:43:06.734 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43707719
2025-04-17 19:43:06.739 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43707719, 排名: 42, 分数: 508
2025-04-17 19:43:06.739 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705824
2025-04-17 19:43:06.739 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 19:43:06.739 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [564f1800] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705824.json
2025-04-17 19:43:06.740 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-14, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705824.json, method=GET}
2025-04-17 19:43:06.740 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-14, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:06.814 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-13, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:06.815 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [7d00c6e2] [c7f85065-13] Response 200 OK
2025-04-17 19:43:06.815 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:06.815 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-13, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:06.816 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"putzdown","descendants":857,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43715062,43707349,43692896,43693223,43692996,43693275,43713343,43693034,43713017,43693290,43692820,43710490,43693479,43694365,43693563,43714856,43692939,43709500,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43695906,43711778,43706646,43693018,43693144,43706138,43693685,43693264,43709824,43693384,43709841,43705219,43707320,43704834,43706318,43693725,43708998,43703214,43700992,43692883,43708054,43692990,43693105,43704088,43693863,43706307,43705288,43705078,43693213,43692877,43711094,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43693243,43693698,43705051,43693099,43711765,43693562,43693016,43693056,43713661,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":659,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 19:43:06.816 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"putzdown","descendants":857,"id":43692677,"kids":[43706451,43692988,43693238,43692983,43706546,43693350,43692997,43715062,43707349,43692896,43693223,43692996,43693275,43713343,43693034,43713017,43693290,43692820,43710490,43693479,43694365,43693563,43714856,43692939,43709500,43693229,43693100,43693060,43711755,43708343,43707518,43693208,43704192,43706941,43693383,43695906,43711778,43706646,43693018,43693144,43706138,43693685,43693264,43709824,43693384,43709841,43705219,43707320,43704834,43706318,43693725,43708998,43703214,43700992,43692883,43708054,43692990,43693105,43704088,43693863,43706307,43705288,43705078,43693213,43692877,43711094,43693541,43696620,43693938,43707647,43707429,43707164,43712248,43693243,43693698,43705051,43693099,43711765,43693562,43693016,43693056,43713661,43693840,43706331,43704538,43706557,43693155,43693200,43694874,43692867,43708178,43706511,43705983,43692873,43692929,43692974,43693180,43705719],"score":659,"time":1744725049,"title":"America underestimates the difficulty of bringing manufacturing back","type":"story","url":"https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back"}
2025-04-17 19:43:06.816 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692677, by=putzdown, title=America underestimates the difficulty of bringing manufacturing back, url=https://www.molsonhart.com/blog/america-underestimates-the-difficulty-of-bringing-manufacturing-back, type=story, time=1744725049
2025-04-17 19:43:06.817 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692677, 标题: America underestimates the difficulty of bringing manufacturing back
2025-04-17 19:43:06.819 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692677
2025-04-17 19:43:06.825 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692677, 排名: 44, 分数: 659
2025-04-17 19:43:06.825 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43669540
2025-04-17 19:43:06.825 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 19:43:06.825 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75306c8a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43669540.json
2025-04-17 19:43:06.826 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-12, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43669540.json, method=GET}
2025-04-17 19:43:06.826 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-12, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:06.949 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-14, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:06.949 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [564f1800] [9287fe66-14] Response 200 OK
2025-04-17 19:43:06.949 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:06.950 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-14, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:06.950 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":124,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 19:43:06.950 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jedisct1","descendants":11,"id":43705824,"kids":[43710390,43707760,43707521,43708324,43711567],"score":124,"time":1744812713,"title":"A high-throughput parser for the Zig programming language","type":"story","url":"https://github.com/Validark/Accelerated-Zig-Parser"}
2025-04-17 19:43:06.950 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705824, by=jedisct1, title=A high-throughput parser for the Zig programming language, url=https://github.com/Validark/Accelerated-Zig-Parser, type=story, time=1744812713
2025-04-17 19:43:06.950 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705824, 标题: A high-throughput parser for the Zig programming language
2025-04-17 19:43:06.953 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705824
2025-04-17 19:43:06.959 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705824, 排名: 45, 分数: 124
2025-04-17 19:43:06.959 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43677862
2025-04-17 19:43:06.959 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 19:43:06.959 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a6b8f06] HTTP GET https://hacker-news.firebaseio.com/v0/item/43677862.json
2025-04-17 19:43:06.959 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-9, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43677862.json, method=GET}
2025-04-17 19:43:06.960 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-9, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:07.050 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [7c33f5c5-2, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:43:07.052 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [41593d60] [7c33f5c5-2] Response 200 OK
2025-04-17 19:43:07.052 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [7c33f5c5-2, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:43:07.052 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=英国士兵用无线电波武器击落无人机群}]}
2025-04-17 19:43:07.052 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - DeepL翻译成功: British soldiers take down drone swarm with radio wave weapon -> 英国士兵用无线电波武器击落无人机群
2025-04-17 19:43:07.052 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: 英国士兵用无线电波武器击落无人机群
2025-04-17 19:43:07.055 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43715220
2025-04-17 19:43:07.059 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43715220, 排名: 41, 分数: 4
2025-04-17 19:43:07.059 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43691334
2025-04-17 19:43:07.059 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 19:43:07.060 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [559a35c4] HTTP GET https://hacker-news.firebaseio.com/v0/item/43691334.json
2025-04-17 19:43:07.060 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-14, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43691334.json, method=GET}
2025-04-17 19:43:07.060 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-12, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:07.060 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-14, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:07.060 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [75306c8a] [43681bcb-12] Response 200 OK
2025-04-17 19:43:07.060 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:07.060 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-12, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:07.060 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":44,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 19:43:07.060 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":4,"id":43669540,"kids":[43713299,43713186,43713680],"score":44,"time":1744511028,"title":"Nix Trigonometric Math Library from Ground Zero","type":"story","url":"https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/"}
2025-04-17 19:43:07.061 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43669540, by=todsacerdoti, title=Nix Trigonometric Math Library from Ground Zero, url=https://lantian.pub/en/article/modify-computer/nix-trigonometric-math-library-from-zero.lantian/, type=story, time=1744511028
2025-04-17 19:43:07.061 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43669540, 标题: Nix Trigonometric Math Library from Ground Zero
2025-04-17 19:43:07.062 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43669540
2025-04-17 19:43:07.068 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43669540, 排名: 46, 分数: 44
2025-04-17 19:43:07.068 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714023
2025-04-17 19:43:07.069 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714023.json
2025-04-17 19:43:07.069 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cb9ef2] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714023.json
2025-04-17 19:43:07.069 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-15, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714023.json, method=GET}
2025-04-17 19:43:07.069 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-15, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:07.267 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-14, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:07.268 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [559a35c4] [c7f85065-14] Response 200 OK
2025-04-17 19:43:07.268 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:07.268 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-14, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:07.268 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 19:43:07.269 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"LookAtThatBacon","descendants":934,"id":43691334,"kids":[43698267,43692063,43691925,43691534,43691637,43692656,43691673,43701928,43691580,43693783,43692086,43699980,43704234,43691744,43701670,43691663,43700602,43691851,43702683,43703062,43693709,43693162,43703041,43692213,43691985,43691654,43701807,43693950,43703205,43693606,43695666,43692833,43693204,43692071,43691801,43706234,43702689,43694875,43692206,43695531,43702155,43700324,43701837,43701967,43702157,43692777,43699678,43692054,43691922,43691694,43697522,43691635,43692233,43691952,43691652,43691763,43696886,43698969,43694014,43691733,43701997,43691927,43691557,43692199,43699377,43691870,43706873],"score":674,"time":1744716656,"title":"4chan Sharty Hack And Janitor Email Leak","type":"story","url":"https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak"}
2025-04-17 19:43:07.269 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43691334, by=LookAtThatBacon, title=4chan Sharty Hack And Janitor Email Leak, url=https://knowyourmeme.com/memes/events/april-2025-4chan-sharty-hack-and-janitor-email-leak, type=story, time=1744716656
2025-04-17 19:43:07.269 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43691334, 标题: 4chan Sharty Hack And Janitor Email Leak
2025-04-17 19:43:07.272 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43691334
2025-04-17 19:43:07.277 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-15, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:07.277 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4cb9ef2] [9287fe66-15] Response 200 OK
2025-04-17 19:43:07.277 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:07.277 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-15, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:07.277 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"jameswlepage","descendants":0,"id":43714023,"score":3,"time":1744874994,"title":"WordPress Feature API","type":"story","url":"https://github.com/Automattic/wp-feature-api"}
2025-04-17 19:43:07.278 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"jameswlepage","descendants":0,"id":43714023,"score":3,"time":1744874994,"title":"WordPress Feature API","type":"story","url":"https://github.com/Automattic/wp-feature-api"}
2025-04-17 19:43:07.278 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714023, by=jameswlepage, title=WordPress Feature API, url=https://github.com/Automattic/wp-feature-api, type=story, time=1744874994
2025-04-17 19:43:07.278 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714023, 标题: WordPress Feature API
2025-04-17 19:43:07.278 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43691334, 排名: 48, 分数: 674
2025-04-17 19:43:07.278 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705649
2025-04-17 19:43:07.279 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 19:43:07.279 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18c12977] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705649.json
2025-04-17 19:43:07.279 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-13, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705649.json, method=GET}
2025-04-17 19:43:07.279 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-13, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:07.279 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43714023
2025-04-17 19:43:07.280 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: WordPress Feature API
2025-04-17 19:43:07.280 [reactor-http-nio-1] INFO  c.e.h.service.TranslationService - 翻译请求：WordPress Feature API
2025-04-17 19:43:07.280 [reactor-http-nio-1] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:43:07.280 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54b85c3e] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:43:07.280 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [59d75a8c-2, L:/10.64.127.133:52989 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:43:07.318 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-9, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:07.319 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [3a6b8f06] [ede7da81-9] Response 200 OK
2025-04-17 19:43:07.319 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:07.319 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-9, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:07.319 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"walterbell","descendants":94,"id":43677862,"kids":[43711990,43713641,43711967,43713897,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43713899,43713731,43715194,43714662,43713623,43711986,43712594,43712213,43713872,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":126,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 19:43:07.320 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"walterbell","descendants":94,"id":43677862,"kids":[43711990,43713641,43711967,43713897,43712150,43713058,43712974,43712064,43712040,43711989,43712669,43713288,43712992,43713138,43713899,43713731,43715194,43714662,43713623,43711986,43712594,43712213,43713872,43712881,43712854,43712308,43712837,43712839,43714329,43712129,43712504,43713313,43712625],"score":126,"time":1744602235,"title":"Demolishing the Fry's Electronics in Burbank","type":"story","url":"https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123"}
2025-04-17 19:43:07.320 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43677862, by=walterbell, title=Demolishing the Fry's Electronics in Burbank, url=https://www.latimes.com/00000196-230a-d4c4-abd7-fb5a95770000-123, type=story, time=1744602235
2025-04-17 19:43:07.320 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43677862, 标题: Demolishing the Fry's Electronics in Burbank
2025-04-17 19:43:07.323 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43677862
2025-04-17 19:43:07.333 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43677862, 排名: 47, 分数: 126
2025-04-17 19:43:07.506 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-13, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:07.506 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [18c12977] [43681bcb-13] Response 200 OK
2025-04-17 19:43:07.506 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:07.507 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-13, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:07.507 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 19:43:07.507 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"amichail","descendants":48,"id":43705649,"kids":[43708344,43705930,43706056,43707646,43707788,43708119,43706363,43708023,43709605,43710840,43706407,43706414,43709434],"score":155,"time":1744811916,"title":"Dirty tricks 6502 programmers use (2019)","type":"story","url":"https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html"}
2025-04-17 19:43:07.507 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705649, by=amichail, title=Dirty tricks 6502 programmers use (2019), url=https://nurpax.github.io/posts/2019-08-18-dirty-tricks-6502-programmers-use.html, type=story, time=1744811916
2025-04-17 19:43:07.508 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705649, 标题: Dirty tricks 6502 programmers use (2019)
2025-04-17 19:43:07.511 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705649
2025-04-17 19:43:07.517 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705649, 排名: 50, 分数: 155
2025-04-17 19:43:07.705 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [59d75a8c-2, L:/10.64.127.133:52989 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:43:07.705 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [54b85c3e] [59d75a8c-2] Response 200 OK
2025-04-17 19:43:07.705 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [59d75a8c-2, L:/10.64.127.133:52989 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:43:07.706 [reactor-http-nio-16] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=WordPress 功能 API}]}
2025-04-17 19:43:07.706 [reactor-http-nio-16] INFO  c.e.h.service.TranslationService - DeepL翻译成功: WordPress Feature API -> WordPress 功能 API
2025-04-17 19:43:07.706 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: WordPress 功能 API
2025-04-17 19:43:07.708 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43714023
2025-04-17 19:43:07.714 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714023, 排名: 49, 分数: 3
2025-04-17 19:43:07.714 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:43:07.714 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 开始处理第 6 批次，包含 10 个ID
2025-04-17 19:43:17.724 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43703623
2025-04-17 19:43:17.724 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 19:43:17.725 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56e38fd1] HTTP GET https://hacker-news.firebaseio.com/v0/item/43703623.json
2025-04-17 19:43:17.725 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705065
2025-04-17 19:43:17.725 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-15, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43703623.json, method=GET}
2025-04-17 19:43:17.725 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 19:43:17.725 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-15, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:17.725 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e1925dc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705065.json
2025-04-17 19:43:17.726 [parallel-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43713876
2025-04-17 19:43:17.726 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-16, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705065.json, method=GET}
2025-04-17 19:43:17.726 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-16, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:17.726 [parallel-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43713876.json
2025-04-17 19:43:17.727 [parallel-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [9c7fb4f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43713876.json
2025-04-17 19:43:17.727 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-10, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43713876.json, method=GET}
2025-04-17 19:43:17.727 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-10, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:17.931 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-15, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:17.931 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [56e38fd1] [c7f85065-15] Response 200 OK
2025-04-17 19:43:17.932 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:17.932 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-15, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:17.932 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":160,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 19:43:17.932 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"ibobev","descendants":42,"id":43703623,"kids":[43711052,43714730,43704172,43711468,43706090,43711254,43706805,43711869,43705968],"score":160,"time":1744799160,"title":"An Introduction to Stochastic Calculus (2022)","type":"story","url":"https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/"}
2025-04-17 19:43:17.932 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43703623, by=ibobev, title=An Introduction to Stochastic Calculus (2022), url=https://bjlkeng.io/posts/an-introduction-to-stochastic-calculus/, type=story, time=1744799160
2025-04-17 19:43:17.932 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43703623, 标题: An Introduction to Stochastic Calculus (2022)
2025-04-17 19:43:17.934 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43703623
2025-04-17 19:43:17.935 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-16, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:17.935 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4e1925dc] [9287fe66-16] Response 200 OK
2025-04-17 19:43:17.935 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:17.935 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-16, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:17.935 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 19:43:17.936 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mmayberry","descendants":18,"id":43705065,"kids":[43705846,43711528,43709236,43709117,43710713,43710625,43710744,43707603],"score":39,"text":"Hi HN — we’re Nathalie, Dalton, Vince, and Matt, and we’re launching Jasmine Energy (<a href=\"https:&#x2F;&#x2F;www.jasmine.energy\">https:&#x2F;&#x2F;www.jasmine.energy</a>), a tool that helps residential and commercial solar owners automatically register their systems, track energy generation, and get paid for Renewable Energy Certificates (RECs).<p>RECs are tradeable certificates for clean electricity, issued by energy markets across the US. Most people with rooftop or small commercial solar have never heard of them, let alone claimed them, but they’re real! They are typically bought by utilities or companies to meet climate targets.<p>The problem is, the process to claim and sell RECs is a mess—designed decades ago for utility-scale players, not individuals or small businesses.<p>To register a system and start claiming RECs, you usually have to: Navigate one of 10+ regional REC registries, each with its own documentation, forms, and rules; Pull generation data from your inverter or utility, format it, and submit it manually; Try to find a buyer (often through a broker or opaque exchange) and negotiate payment.<p>That takes weeks if not months for a single system, and most people give up. As a result, millions of solar installations leave income on the table every year. We started Jasmine Energy after seeing this firsthand: some of us worked in energy startups, and others watched our parents install solar but never claim a single REC.<p>Jasmine automates all of this. Our platform: Extracts metadata from your solar documents using AI and auto-registers your system in the correct registry; Connects to your inverter to submit generation data and verify REC eligibility; Lists RECs for sale through partners, tracks the sale process, and issues payouts—all through a single dashboard.<p>This domain is a good fit for automation and LLMs—not to generate text, but to (1) structure unstructured documents, (2) interact with legacy government websites where there’s no API, and (3) deal with repetitive bureaucratic language.<p>To be clear, we’re not trying to “squeeze public funding” or take unfair advantage of the system. REC sales happen in voluntary and compliance markets (usually funded by corporate buyers and utilities, not taxpayers). Jasmine doesn’t create or inflate incentives—it just helps people claim what already exists but is hard to access. We’re making the REC market more efficient.<p>RECs have been one of the most effective and widely adopted incentive systems to drive grid decarbonization. We’re excited to be making them easier to access.<p>The product is live now for solar owners in PJM, M-RETS, and ERCOT territories (more coming soon). If you already have solar, you can upload your docs and start the process at <a href=\"https:&#x2F;&#x2F;assets.jasmine.energy\">https:&#x2F;&#x2F;assets.jasmine.energy</a>.<p>We’d love feedback from this community—on the product, the market, or any edge cases you think we should worry about. And of course we’ll be happy to answer any questions!","time":1744809072,"title":"Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar","type":"story"}
2025-04-17 19:43:17.936 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705065, by=mmayberry, title=Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar, url=null, type=story, time=1744809072
2025-04-17 19:43:17.936 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705065, 标题: Launch HN: Jasmine (YC S22) – Automating REC compliance and payouts for solar
2025-04-17 19:43:17.938 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705065
2025-04-17 19:43:17.941 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43703623, 排名: 51, 分数: 160
2025-04-17 19:43:17.941 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705796
2025-04-17 19:43:17.941 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 19:43:17.941 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [59641124] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705796.json
2025-04-17 19:43:17.941 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-14, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705796.json, method=GET}
2025-04-17 19:43:17.941 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-14, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:17.942 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705065, 排名: 52, 分数: 39
2025-04-17 19:43:17.942 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43714133
2025-04-17 19:43:17.942 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 19:43:17.942 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48d7b1d6] HTTP GET https://hacker-news.firebaseio.com/v0/item/43714133.json
2025-04-17 19:43:17.942 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-16, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43714133.json, method=GET}
2025-04-17 19:43:17.942 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-16, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:18.085 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-10, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.086 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [9c7fb4f] [ede7da81-10] Response 200 OK
2025-04-17 19:43:18.086 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.086 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-10, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.086 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"mparkms","descendants":0,"id":43713876,"score":3,"time":1744873121,"title":"DNS Blackhole (AS112) Service","type":"story","url":"https://www.iana.org/help/dns-blackhole"}
2025-04-17 19:43:18.086 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"mparkms","descendants":0,"id":43713876,"score":3,"time":1744873121,"title":"DNS Blackhole (AS112) Service","type":"story","url":"https://www.iana.org/help/dns-blackhole"}
2025-04-17 19:43:18.087 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43713876, by=mparkms, title=DNS Blackhole (AS112) Service, url=https://www.iana.org/help/dns-blackhole, type=story, time=1744873121
2025-04-17 19:43:18.087 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43713876, 标题: DNS Blackhole (AS112) Service
2025-04-17 19:43:18.088 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 创建新的NewsItem: 43713876
2025-04-17 19:43:18.089 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 开始翻译标题: DNS Blackhole (AS112) Service
2025-04-17 19:43:18.089 [reactor-http-nio-16] INFO  c.e.h.service.TranslationService - 翻译请求：DNS Blackhole (AS112) Service
2025-04-17 19:43:18.089 [reactor-http-nio-16] DEBUG c.e.h.service.TranslationService - 使用DeepL API进行翻译
2025-04-17 19:43:18.089 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a5343bd] HTTP POST https://api-free.deepl.com/v2/translate
2025-04-17 19:43:18.089 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [7c33f5c5-3, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Handler is being applied: {uri=https://api-free.deepl.com/v2/translate, method=POST}
2025-04-17 19:43:18.150 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-16, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.151 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [48d7b1d6] [c7f85065-16] Response 200 OK
2025-04-17 19:43:18.151 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.151 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-16, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.151 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"calcifer","descendants":8,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":21,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 19:43:18.151 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"calcifer","descendants":8,"id":43714133,"kids":[43714367,43714417,43714681,43714396],"score":21,"time":1744876141,"title":"'Why would he take such a risk?' My censor and me","type":"story","url":"https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china"}
2025-04-17 19:43:18.152 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43714133, by=calcifer, title='Why would he take such a risk?' My censor and me, url=https://www.theguardian.com/news/2025/apr/17/why-would-he-take-such-risk-my-censor-and-me-weibo-china, type=story, time=1744876141
2025-04-17 19:43:18.152 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43714133, 标题: 'Why would he take such a risk?' My censor and me
2025-04-17 19:43:18.153 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43714133
2025-04-17 19:43:18.159 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43714133, 排名: 55, 分数: 21
2025-04-17 19:43:18.159 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711393
2025-04-17 19:43:18.159 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 19:43:18.159 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61cf895a] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711393.json
2025-04-17 19:43:18.160 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-17, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711393.json, method=GET}
2025-04-17 19:43:18.160 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-17, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:18.166 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-14, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.166 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [59641124] [43681bcb-14] Response 200 OK
2025-04-17 19:43:18.166 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.166 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-14, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.166 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 19:43:18.166 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"otras","descendants":16,"id":43705796,"kids":[43706830,43708355,43706677,43708651,43708554,43707491,43709951,43708114,43706737,43707007,43709461],"score":99,"time":1744812562,"title":"Science, the Endless Frontier (1945) [pdf]","type":"story","url":"https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf"}
2025-04-17 19:43:18.167 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705796, by=otras, title=Science, the Endless Frontier (1945) [pdf], url=https://nsf-gov-resources.nsf.gov/2023-04/EndlessFrontier75th_w.pdf, type=story, time=1744812562
2025-04-17 19:43:18.167 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705796, 标题: Science, the Endless Frontier (1945) [pdf]
2025-04-17 19:43:18.169 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705796
2025-04-17 19:43:18.173 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705796, 排名: 54, 分数: 99
2025-04-17 19:43:18.174 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43705144
2025-04-17 19:43:18.174 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 19:43:18.174 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f83439f] HTTP GET https://hacker-news.firebaseio.com/v0/item/43705144.json
2025-04-17 19:43:18.174 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [ede7da81-11, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43705144.json, method=GET}
2025-04-17 19:43:18.174 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-11, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:18.370 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-17, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.370 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [61cf895a] [9287fe66-17] Response 200 OK
2025-04-17 19:43:18.371 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.371 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-17, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.371 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 19:43:18.372 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"0xedb","descendants":3,"id":43711393,"kids":[43714886,43714709],"score":18,"time":1744845791,"title":"The Promise of Rust","type":"story","url":"https://fasterthanli.me/articles/the-promise-of-rust"}
2025-04-17 19:43:18.372 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711393, by=0xedb, title=The Promise of Rust, url=https://fasterthanli.me/articles/the-promise-of-rust, type=story, time=1744845791
2025-04-17 19:43:18.372 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711393, 标题: The Promise of Rust
2025-04-17 19:43:18.375 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711393
2025-04-17 19:43:18.383 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711393, 排名: 56, 分数: 18
2025-04-17 19:43:18.383 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43704853
2025-04-17 19:43:18.383 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 19:43:18.385 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [65f6adfc] HTTP GET https://hacker-news.firebaseio.com/v0/item/43704853.json
2025-04-17 19:43:18.385 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientConnect - [c7f85065-17, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43704853.json, method=GET}
2025-04-17 19:43:18.385 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-17, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:18.530 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [7c33f5c5-3, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
content-type: <filtered>
date: <filtered>
vary: <filtered>
x-trace-id: <filtered>
transfer-encoding: <filtered>
strict-transport-security: <filtered>
server-timing: <filtered>
access-control-expose-headers: <filtered>
2025-04-17 19:43:18.530 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4a5343bd] [7c33f5c5-3] Response 200 OK
2025-04-17 19:43:18.531 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [7c33f5c5-3, L:/10.64.127.133:52988 - R:api-free.deepl.com/172.65.225.25:443] Received last HTTP packet
2025-04-17 19:43:18.531 [reactor-http-nio-2] DEBUG c.e.h.service.TranslationService - DeepL API响应: {translations=[{detected_source_language=EN, text=DNS 黑洞 (AS112) 服务}]}
2025-04-17 19:43:18.531 [reactor-http-nio-2] INFO  c.e.h.service.TranslationService - DeepL翻译成功: DNS Blackhole (AS112) Service -> DNS 黑洞 (AS112) 服务
2025-04-17 19:43:18.531 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 翻译完成, 标题: DNS 黑洞 (AS112) 服务
2025-04-17 19:43:18.533 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻项已缓存: 43713876
2025-04-17 19:43:18.533 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-11, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.533 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4f83439f] [ede7da81-11] Response 200 OK
2025-04-17 19:43:18.533 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.533 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [ede7da81-11, L:/10.64.127.133:52986 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.533 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"juecd","descendants":41,"id":43705144,"kids":[43706427,43705276,43715044,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":119,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 19:43:18.534 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"juecd","descendants":41,"id":43705144,"kids":[43706427,43705276,43715044,43707071,43709655,43706853,43706925,43706399,43706400,43708709,43707004,43708029,43709233,43708512,43706371],"score":119,"text":"We’ve been building infrastructure to spin up browsers for AI agents. Originally, we built[0] it as a pool of warm Docker containers running Chromium, exposing:<p>- Chrome DevTools Protocol (for Playwright&#x2F;Puppeteer)<p>- noVNC (for live view)<p>We’ve been following the unikernel space for a while, so we decided to see if we could get our image on one. We went with Unikraft Cloud[1]. Here’s how it did:<p>- Boot-up time: 10–20ms (vs. ~5s for Docker containers)<p>- Near 0 CPU&#x2F;memory consumption when idle<p>- Still ~8GB RAM when active (headful Chromium)<p>Potential use cases:<p>- Standby mode during long-running jobs: unikernels can sleep after X sec of inactivity, reducing clock time costs<p>- Session reuse: auth&#x2F;session cookies persist for hours&#x2F;days. Basically as long as the cookies are valid<p>- Cold start speed: good for low-latency, event-based handling<p>We open sourced it with Apache 2.0! Feel free to fork or submit an issue &#x2F; PR. Open to feedback or suggestions. www.github.com&#x2F;onkernel&#x2F;kernel-images<p>==<p>[0] <a href=\"https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images\">https:&#x2F;&#x2F;github.com&#x2F;onkernel&#x2F;kernel-images</a><p>[1] <a href=\"https:&#x2F;&#x2F;unikraft.cloud&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;unikraft.cloud&#x2F;</a><p>[2] Thanks to the Unikraft Cloud team @fhuici @nderjung @razvandeax for helping us figure this out (we&#x27;re not affiliated)<p>[3] (OPs) @rgarcia @juecd","time":1744809586,"title":"Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)","type":"story","url":"https://github.com/onkernel/kernel-images"}
2025-04-17 19:43:18.534 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43705144, by=juecd, title=Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0), url=https://github.com/onkernel/kernel-images, type=story, time=1744809586
2025-04-17 19:43:18.534 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43705144, 标题: Show HN: We Put Chromium on a Unikernel (OSS Apache 2.0)
2025-04-17 19:43:18.536 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43705144
2025-04-17 19:43:18.538 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43713876, 排名: 53, 分数: 3
2025-04-17 19:43:18.538 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43692476
2025-04-17 19:43:18.539 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 19:43:18.539 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4550ed23] HTTP GET https://hacker-news.firebaseio.com/v0/item/43692476.json
2025-04-17 19:43:18.539 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientConnect - [43681bcb-15, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43692476.json, method=GET}
2025-04-17 19:43:18.539 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-15, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:18.544 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43705144, 排名: 57, 分数: 119
2025-04-17 19:43:18.545 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 获取新闻项详情，ID: 43711227
2025-04-17 19:43:18.545 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 请求: GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 19:43:18.545 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5269dd86] HTTP GET https://hacker-news.firebaseio.com/v0/item/43711227.json
2025-04-17 19:43:18.546 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientConnect - [9287fe66-18, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Handler is being applied: {uri=https://hacker-news.firebaseio.com/v0/item/43711227.json, method=GET}
2025-04-17 19:43:18.546 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-18, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] No sendHeaders() called before complete, sending zero-length header
2025-04-17 19:43:18.592 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-17, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.593 [reactor-http-nio-16] DEBUG o.s.w.r.f.client.ExchangeFunctions - [65f6adfc] [c7f85065-17] Response 200 OK
2025-04-17 19:43:18.593 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.593 [reactor-http-nio-16] DEBUG r.n.http.client.HttpClientOperations - [c7f85065-17, L:/10.64.127.133:52962 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.593 [reactor-http-nio-16] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 19:43:18.594 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"todsacerdoti","descendants":21,"id":43704853,"kids":[43706114,43705860,43706957,43707263,43706715,43707073,43705956,43708153,43705757,43707585],"score":110,"time":1744807947,"title":"Herb: Powerful and seamless HTML-aware ERB parsing and tooling","type":"story","url":"https://herb-tools.dev/"}
2025-04-17 19:43:18.594 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43704853, by=todsacerdoti, title=Herb: Powerful and seamless HTML-aware ERB parsing and tooling, url=https://herb-tools.dev/, type=story, time=1744807947
2025-04-17 19:43:18.594 [reactor-http-nio-16] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43704853, 标题: Herb: Powerful and seamless HTML-aware ERB parsing and tooling
2025-04-17 19:43:18.597 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43704853
2025-04-17 19:43:18.603 [reactor-http-nio-16] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43704853, 排名: 58, 分数: 110
2025-04-17 19:43:18.749 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-18, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.750 [reactor-http-nio-1] DEBUG o.s.w.r.f.client.ExchangeFunctions - [5269dd86] [9287fe66-18] Response 200 OK
2025-04-17 19:43:18.750 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.750 [reactor-http-nio-1] DEBUG r.n.http.client.HttpClientOperations - [9287fe66-18, L:/10.64.127.133:52981 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.750 [reactor-http-nio-1] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"libpcap","descendants":55,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43711396,43713235,43712591,43711426,43712117,43712687,43713162,43711822],"score":128,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 19:43:18.750 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"libpcap","descendants":55,"id":43711227,"kids":[43711345,43712714,43712264,43711561,43711396,43713235,43712591,43711426,43712117,43712687,43713162,43711822],"score":128,"time":1744844274,"title":"Microsoft researchers developed a hyper-efficient AI model that can run on CPUs","type":"story","url":"https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/"}
2025-04-17 19:43:18.751 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43711227, by=libpcap, title=Microsoft researchers developed a hyper-efficient AI model that can run on CPUs, url=https://techcrunch.com/2025/04/16/microsoft-researchers-say-theyve-developed-a-hyper-efficient-ai-model-that-can-run-on-cpus/, type=story, time=1744844274
2025-04-17 19:43:18.751 [reactor-http-nio-1] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43711227, 标题: Microsoft researchers developed a hyper-efficient AI model that can run on CPUs
2025-04-17 19:43:18.754 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43711227
2025-04-17 19:43:18.761 [reactor-http-nio-1] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43711227, 排名: 60, 分数: 128
2025-04-17 19:43:18.772 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-15, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received response (auto-read:false) : RESPONSE(decodeResult: success, version: HTTP/1.1)
HTTP/1.1 200 OK
Server: <filtered>
Date: <filtered>
Content-Type: <filtered>
Content-Length: <filtered>
Connection: <filtered>
Access-Control-Allow-Origin: <filtered>
Cache-Control: <filtered>
Strict-Transport-Security: <filtered>
2025-04-17 19:43:18.772 [reactor-http-nio-2] DEBUG o.s.w.r.f.client.ExchangeFunctions - [4550ed23] [43681bcb-15] Response 200 OK
2025-04-17 19:43:18.772 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 响应状态: 200 OK
2025-04-17 19:43:18.772 [reactor-http-nio-2] DEBUG r.n.http.client.HttpClientOperations - [43681bcb-15, L:/10.64.127.133:52982 - R:hacker-news.firebaseio.com/34.120.206.254:443] Received last HTTP packet
2025-04-17 19:43:18.773 [reactor-http-nio-2] DEBUG c.e.h.service.HackerNewsService - 获取到原始JSON: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43694078,43694724,43710344,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 19:43:18.773 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 准备解析JSON，原始内容: {"by":"pomarie","descendants":104,"id":43692476,"kids":[43695961,43693443,43696015,43700075,43693194,43698434,43693466,43698418,43695839,43696505,43701980,43692980,43693742,43707634,43693823,43698020,43694883,43694729,43699722,43699230,43699923,43708050,43697682,43694637,43694358,43695563,43693645,43699309,43693702,43694078,43694724,43710344,43693504,43694055,43694711,43700785,43696302,43702321,43693956,43694678,43694944,43694395,43696686,43695361,43697263,43693520],"score":216,"text":"Hey HN, we’re building mrge (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>), an AI code review platform to help teams merge code faster with fewer bugs. Our early users include Better Auth, Cal.com, and n8n—teams that handle a lot of PRs every day.<p>Here’s a demo video: <a href=\"https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY\" rel=\"nofollow\">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=pglEoiv0BgY</a><p>We (Allis and Paul) are engineers who faced this problem when we worked together at our last startup. Code review quickly became our biggest bottleneck—especially as we started using AI to code more. We had more PRs to review, subtle AI-written bugs slipped through unnoticed, and we (humans) increasingly found ourselves rubber-stamping PRs without deeply understanding the changes.<p>We’re building mrge to help solve that. Here’s how it works:<p>1. Connect your GitHub repo via our Github app in two clicks (and optionally download our desktop app). Gitlab support is on the roadmap!<p>2. AI Review: When you open a PR, our AI reviews your changes directly in an ephemeral and secure container. It has context into not just that PR, but your whole codebase, so it can pick up patterns and leave comments directly on changed lines. Once the review is done, the sandbox is torn down and your code deleted – we don’t store it for obvious reasons.<p>3. Human-friendly review workflow: Jump into our web app (it’s like Linear but for PRs). Changes are grouped logically (not alphabetically), with important diffs highlighted, visualized, and ready for faster human review.<p>The AI reviewer works a bit like Cursor in the sense that it navigates your codebase using the same tools a developer would—like jumping to definitions or grepping through code.<p>But a big challenge was that, unlike Cursor, mrge doesn’t run in your local IDE or editor. We had to recreate something similar entirely in the cloud.<p>Whenever you open a PR, mrge clones your repository and checks out your branch in a secure and isolated temporary sandbox.  We provision this sandbox with shell access and a Language Server Protocol (LSP) server. The AI reviewer then reviews your code, navigating the codebase exactly as a human reviewer would—using shell commands and common editor features like &quot;go to definition&quot; or &quot;find references&quot;. When the review finishes, we immediately tear down the sandbox and delete the code—we don’t want to permanently store it for obvious reasons.<p>We know cloud-based review isn&#x27;t for everyone, especially if security or compliance requires local deployments. But a cloud approach lets us run SOTA AI models without local GPU setups, and provide a consistent, single AI review per PR for an entire team.<p>The platform itself focuses entirely on making <i>human</i> code reviews easier. A big inspiration came from productivity-focused apps like Linear or Superhuman, products that show just how much thoughtful design can impact everyday workflows. We wanted to bring that same feeling into code review.<p>That’s one reason we built a desktop app. It allowed us to deliver a more polished experience, complete with keyboard shortcuts and a snappy interface.<p>Beyond performance, the main thing we care about is making it easier for humans to read and understand code. For example, traditional review tools sort changed files alphabetically—which forces reviewers to figure out the order in which they should review changes. In mrge, files are automatically grouped and ordered based on logical connections, letting reviewers immediately jump in.<p>We think the future of coding isn’t about AI replacing humans—it’s about giving us better tools to quickly understand high-level changes, abstracting more and more of the code itself. As code volume continues to increase, this shift is going to become increasingly important.<p>You can sign up now (<a href=\"https:&#x2F;&#x2F;www.mrge.io&#x2F;home\">https:&#x2F;&#x2F;www.mrge.io&#x2F;home</a>). mrge is currently free while we&#x27;re still early. Our plan for later is to charge closed-source projects on a per-seat basis, and to continue giving mrge away for free to open source ones.<p>We’re very actively building and would love your honest feedback!","time":1744724061,"title":"Launch HN: mrge.io (YC X25) – Cursor for code review","type":"story"}
2025-04-17 19:43:18.774 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 解析后对象: id=43692476, by=pomarie, title=Launch HN: mrge.io (YC X25) – Cursor for code review, url=null, type=story, time=1744724061
2025-04-17 19:43:18.774 [reactor-http-nio-2] INFO  c.e.h.service.HackerNewsService - 成功解析新闻项 ID:43692476, 标题: Launch HN: mrge.io (YC X25) – Cursor for code review
2025-04-17 19:43:18.776 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 新闻已存在于数据库中: 43692476
2025-04-17 19:43:18.783 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 成功处理ID: 43692476, 排名: 59, 分数: 216
2025-04-17 19:43:18.783 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 批次处理完成: 成功=10, 失败=0
2025-04-17 19:43:18.783 [reactor-http-nio-2] INFO  c.e.h.service.NewsUpdateService - 所有批次处理完成，总计处理 6 个批次
2025-04-17 19:45:40.477 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.netty.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-17 19:45:40.480 [netty-shutdown] INFO  o.s.b.w.e.netty.GracefulShutdown - Graceful shutdown complete
2025-04-17 19:45:42.597 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-17 19:45:42.603 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-17 19:45:42.606 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
